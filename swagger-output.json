{
  "openapi": "3.0.0",
  "info": {
    "title": "Cisco AXL REST API",
    "version": "1.0.0",
    "description": "A dynamic REST API for Cisco Administrative XML (AXL) operations"
  },
  "servers": [
    {
      "url": "/",
      "description": "API Base URL (relative path)"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/axl/aargroup": {
      "put": {
        "summary": "PUT /api/axl/aargroup (addAarGroup)",
        "description": "Execute addAarGroup AXL operation (addAarGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `aarGroup` as the resource key (not `aargroup`).\n    For example: `{ \"aarGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "aarGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/aargroup (getAarGroup)",
        "description": "Returns all available aargroup resources - Returns all available aargroup resources (getAarGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/aargroup (removeAarGroup)",
        "description": "Execute removeAarGroup AXL operation (removeAarGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/aargroup (updateAarGroup)",
        "description": "Execute updateAarGroup AXL operation (updateAarGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/advertisedpatterns": {
      "put": {
        "summary": "PUT /api/axl/advertisedpatterns (addAdvertisedPatterns)",
        "description": "Execute addAdvertisedPatterns AXL operation (addAdvertisedPatterns)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `advertisedPatterns` as the resource key (not `advertisedpatterns`).\n    For example: `{ \"advertisedPatterns\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "advertisedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/advertisedpatterns (listAdvertisedPatterns)",
        "description": "Returns all available advertisedpatterns resources - Returns all available advertisedpatterns resources (listAdvertisedPatterns)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/advertisedpatterns (removeAdvertisedPatterns)",
        "description": "Execute removeAdvertisedPatterns AXL operation (removeAdvertisedPatterns)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/advertisedpatterns (updateAdvertisedPatterns)",
        "description": "Execute updateAdvertisedPatterns AXL operation (updateAdvertisedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcement": {
      "put": {
        "summary": "PUT /api/axl/announcement (addAnnouncement)",
        "description": "Execute addAnnouncement AXL operation (addAnnouncement)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `announcement` as the resource key (not `announcement`).\n    For example: `{ \"announcement\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "announcement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/announcement (getAnnouncement)",
        "description": "Returns all available announcement resources - Returns all available announcement resources (getAnnouncement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/announcement (removeAnnouncement)",
        "description": "Execute removeAnnouncement AXL operation (removeAnnouncement)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/announcement (updateAnnouncement)",
        "description": "Execute updateAnnouncement AXL operation (updateAnnouncement)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationdialrules": {
      "put": {
        "summary": "PUT /api/axl/applicationdialrules (addApplicationDialRules)",
        "description": "Execute addApplicationDialRules AXL operation (addApplicationDialRules)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `applicationDialRules` as the resource key (not `applicationdialrules`).\n    For example: `{ \"applicationDialRules\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "applicationDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/applicationdialrules (listApplicationDialRules)",
        "description": "Returns all available applicationdialrules resources - Returns all available applicationdialrules resources (listApplicationDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationdialrules (removeApplicationDialRules)",
        "description": "Execute removeApplicationDialRules AXL operation (removeApplicationDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationdialrules (updateApplicationDialRules)",
        "description": "Execute updateApplicationDialRules AXL operation (updateApplicationDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationserver": {
      "put": {
        "summary": "PUT /api/axl/applicationserver (addApplicationServer)",
        "description": "Execute addApplicationServer AXL operation (addApplicationServer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `applicationServer` as the resource key (not `applicationserver`).\n    For example: `{ \"applicationServer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "applicationServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/applicationserver (getApplicationServer)",
        "description": "Returns all available applicationserver resources - Returns all available applicationserver resources (getApplicationServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationserver (removeApplicationServer)",
        "description": "Execute removeApplicationServer AXL operation (removeApplicationServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationserver (updateApplicationServer)",
        "description": "Execute updateApplicationServer AXL operation (updateApplicationServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationtosoftkeytemplate": {
      "put": {
        "summary": "PUT /api/axl/applicationtosoftkeytemplate (addApplicationToSoftkeyTemplate)",
        "description": "Execute addApplicationToSoftkeyTemplate AXL operation (addApplicationToSoftkeyTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `applicationToSoftkeyTemplate` as the resource key (not `applicationtosoftkeytemplate`).\n    For example: `{ \"applicationToSoftkeyTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addApplicationToSoftkeyTemplate operation.",
        "tags": [
          "applicationtosoftkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "applicationToSoftkeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationtosoftkeytemplate (removeApplicationToSoftkeyTemplate)",
        "description": "Execute removeApplicationToSoftkeyTemplate AXL operation (removeApplicationToSoftkeyTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationToSoftkeyTemplate operation.",
        "tags": [
          "applicationtosoftkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofile": {
      "put": {
        "summary": "PUT /api/axl/applicationusercapfprofile (addApplicationUserCapfProfile)",
        "description": "Execute addApplicationUserCapfProfile AXL operation (addApplicationUserCapfProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `applicationUserCapfProfile` as the resource key (not `applicationusercapfprofile`).\n    For example: `{ \"applicationUserCapfProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "applicationUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/applicationusercapfprofile (getApplicationUserCapfProfile)",
        "description": "Returns all available applicationusercapfprofile resources - Returns all available applicationusercapfprofile resources (getApplicationUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationusercapfprofile (removeApplicationUserCapfProfile)",
        "description": "Execute removeApplicationUserCapfProfile AXL operation (removeApplicationUserCapfProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationusercapfprofile (updateApplicationUserCapfProfile)",
        "description": "Execute updateApplicationUserCapfProfile AXL operation (updateApplicationUserCapfProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appserverinfo": {
      "put": {
        "summary": "PUT /api/axl/appserverinfo (addAppServerInfo)",
        "description": "Execute addAppServerInfo AXL operation (addAppServerInfo)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `appServerInfo` as the resource key (not `appserverinfo`).\n    For example: `{ \"appServerInfo\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "appServerInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/appserverinfo (getAppServerInfo)",
        "description": "Returns all available appserverinfo resources - Returns all available appserverinfo resources (getAppServerInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/appserverinfo (removeAppServerInfo)",
        "description": "Execute removeAppServerInfo AXL operation (removeAppServerInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/appserverinfo (updateAppServerInfo)",
        "description": "Execute updateAppServerInfo AXL operation (updateAppServerInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appuser": {
      "put": {
        "summary": "PUT /api/axl/appuser (addAppUser)",
        "description": "Execute addAppUser AXL operation (addAppUser)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `appUser` as the resource key (not `appuser`).\n    For example: `{ \"appUser\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAppUser operation.",
        "tags": [
          "appuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "appUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/appuser (getAppUser)",
        "description": "Returns all available appuser resources - Returns all available appuser resources (getAppUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAppUser operation.",
        "tags": [
          "appuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/appuser (removeAppUser)",
        "description": "Execute removeAppUser AXL operation (removeAppUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAppUser operation.",
        "tags": [
          "appuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/appuser (updateAppUser)",
        "description": "Execute updateAppUser AXL operation (updateAppUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAppUser operation.",
        "tags": [
          "appuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelist": {
      "put": {
        "summary": "PUT /api/axl/audiocodecpreferencelist (addAudioCodecPreferenceList)",
        "description": "Execute addAudioCodecPreferenceList AXL operation (addAudioCodecPreferenceList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `audioCodecPreferenceList` as the resource key (not `audiocodecpreferencelist`).\n    For example: `{ \"audioCodecPreferenceList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "audioCodecPreferenceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/audiocodecpreferencelist (getAudioCodecPreferenceList)",
        "description": "Returns all available audiocodecpreferencelist resources - Returns all available audiocodecpreferencelist resources (getAudioCodecPreferenceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/audiocodecpreferencelist (removeAudioCodecPreferenceList)",
        "description": "Execute removeAudioCodecPreferenceList AXL operation (removeAudioCodecPreferenceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/audiocodecpreferencelist (updateAudioCodecPreferenceList)",
        "description": "Execute updateAudioCodecPreferenceList AXL operation (updateAudioCodecPreferenceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingserver": {
      "put": {
        "summary": "PUT /api/axl/billingserver (addBillingServer)",
        "description": "Execute addBillingServer AXL operation (addBillingServer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `billingServer` as the resource key (not `billingserver`).\n    For example: `{ \"billingServer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "billingServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/billingserver (getBillingServer)",
        "description": "Returns all available billingserver resources - Returns all available billingserver resources (getBillingServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/billingserver (removeBillingServer)",
        "description": "Execute removeBillingServer AXL operation (removeBillingServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/billingserver (updateBillingServer)",
        "description": "Execute updateBillingServer AXL operation (updateBillingServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/blockedlearnedpatterns": {
      "put": {
        "summary": "PUT /api/axl/blockedlearnedpatterns (addBlockedLearnedPatterns)",
        "description": "Execute addBlockedLearnedPatterns AXL operation (addBlockedLearnedPatterns)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `blockedLearnedPatterns` as the resource key (not `blockedlearnedpatterns`).\n    For example: `{ \"blockedLearnedPatterns\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "blockedLearnedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/blockedlearnedpatterns (listBlockedLearnedPatterns)",
        "description": "Returns all available blockedlearnedpatterns resources - Returns all available blockedlearnedpatterns resources (listBlockedLearnedPatterns)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/blockedlearnedpatterns (removeBlockedLearnedPatterns)",
        "description": "Execute removeBlockedLearnedPatterns AXL operation (removeBlockedLearnedPatterns)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/blockedlearnedpatterns (updateBlockedLearnedPatterns)",
        "description": "Execute updateBlockedLearnedPatterns AXL operation (updateBlockedLearnedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracing": {
      "put": {
        "summary": "PUT /api/axl/calledpartytracing (addCalledPartyTracing)",
        "description": "Execute addCalledPartyTracing AXL operation (addCalledPartyTracing)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `calledPartyTracing` as the resource key (not `calledpartytracing`).\n    For example: `{ \"calledPartyTracing\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCalledPartyTracing operation.",
        "tags": [
          "calledpartytracing"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "calledPartyTracing": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/calledpartytracing (removeCalledPartyTracing)",
        "description": "Execute removeCalledPartyTracing AXL operation (removeCalledPartyTracing)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCalledPartyTracing operation.",
        "tags": [
          "calledpartytracing"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpattern": {
      "put": {
        "summary": "PUT /api/axl/calledpartytransformationpattern (addCalledPartyTransformationPattern)",
        "description": "Execute addCalledPartyTransformationPattern AXL operation (addCalledPartyTransformationPattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `calledPartyTransformationPattern` as the resource key (not `calledpartytransformationpattern`).\n    For example: `{ \"calledPartyTransformationPattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "calledPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/calledpartytransformationpattern (getCalledPartyTransformationPattern)",
        "description": "Returns all available calledpartytransformationpattern resources - Returns all available calledpartytransformationpattern resources (getCalledPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/calledpartytransformationpattern (removeCalledPartyTransformationPattern)",
        "description": "Execute removeCalledPartyTransformationPattern AXL operation (removeCalledPartyTransformationPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/calledpartytransformationpattern (updateCalledPartyTransformationPattern)",
        "description": "Execute updateCalledPartyTransformationPattern AXL operation (updateCalledPartyTransformationPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlist": {
      "put": {
        "summary": "PUT /api/axl/callerfilterlist (addCallerFilterList)",
        "description": "Execute addCallerFilterList AXL operation (addCallerFilterList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `callerFilterList` as the resource key (not `callerfilterlist`).\n    For example: `{ \"callerFilterList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "callerFilterList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/callerfilterlist (getCallerFilterList)",
        "description": "Returns all available callerfilterlist resources - Returns all available callerfilterlist resources (getCallerFilterList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callerfilterlist (removeCallerFilterList)",
        "description": "Execute removeCallerFilterList AXL operation (removeCallerFilterList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callerfilterlist (updateCallerFilterList)",
        "description": "Execute updateCallerFilterList AXL operation (updateCallerFilterList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpattern": {
      "put": {
        "summary": "PUT /api/axl/callingpartytransformationpattern (addCallingPartyTransformationPattern)",
        "description": "Execute addCallingPartyTransformationPattern AXL operation (addCallingPartyTransformationPattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `callingPartyTransformationPattern` as the resource key (not `callingpartytransformationpattern`).\n    For example: `{ \"callingPartyTransformationPattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "callingPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/callingpartytransformationpattern (getCallingPartyTransformationPattern)",
        "description": "Returns all available callingpartytransformationpattern resources - Returns all available callingpartytransformationpattern resources (getCallingPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callingpartytransformationpattern (removeCallingPartyTransformationPattern)",
        "description": "Execute removeCallingPartyTransformationPattern AXL operation (removeCallingPartyTransformationPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callingpartytransformationpattern (updateCallingPartyTransformationPattern)",
        "description": "Execute updateCallingPartyTransformationPattern AXL operation (updateCallingPartyTransformationPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroup": {
      "put": {
        "summary": "PUT /api/axl/callmanagergroup (addCallManagerGroup)",
        "description": "Execute addCallManagerGroup AXL operation (addCallManagerGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `callManagerGroup` as the resource key (not `callmanagergroup`).\n    For example: `{ \"callManagerGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "callManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/callmanagergroup (getCallManagerGroup)",
        "description": "Returns all available callmanagergroup resources - Returns all available callmanagergroup resources (getCallManagerGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callmanagergroup (removeCallManagerGroup)",
        "description": "Execute removeCallManagerGroup AXL operation (removeCallManagerGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callmanagergroup (updateCallManagerGroup)",
        "description": "Execute updateCallManagerGroup AXL operation (updateCallManagerGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpark": {
      "put": {
        "summary": "PUT /api/axl/callpark (addCallPark)",
        "description": "Execute addCallPark AXL operation (addCallPark)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `callPark` as the resource key (not `callpark`).\n    For example: `{ \"callPark\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCallPark operation.",
        "tags": [
          "callpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "callPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/callpark (getCallPark)",
        "description": "Returns all available callpark resources - Returns all available callpark resources (getCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallPark operation.",
        "tags": [
          "callpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callpark (removeCallPark)",
        "description": "Execute removeCallPark AXL operation (removeCallPark)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallPark operation.",
        "tags": [
          "callpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callpark (updateCallPark)",
        "description": "Execute updateCallPark AXL operation (updateCallPark)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallPark operation.",
        "tags": [
          "callpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroup": {
      "put": {
        "summary": "PUT /api/axl/callpickupgroup (addCallPickupGroup)",
        "description": "Execute addCallPickupGroup AXL operation (addCallPickupGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `callPickupGroup` as the resource key (not `callpickupgroup`).\n    For example: `{ \"callPickupGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "callPickupGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/callpickupgroup (getCallPickupGroup)",
        "description": "Returns all available callpickupgroup resources - Returns all available callpickupgroup resources (getCallPickupGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callpickupgroup (removeCallPickupGroup)",
        "description": "Execute removeCallPickupGroup AXL operation (removeCallPickupGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callpickupgroup (updateCallPickupGroup)",
        "description": "Execute updateCallPickupGroup AXL operation (updateCallPickupGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccaprofiles": {
      "put": {
        "summary": "PUT /api/axl/ccaprofiles (addCCAProfiles)",
        "description": "Execute addCCAProfiles AXL operation (addCCAProfiles)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `cCAProfiles` as the resource key (not `ccaprofiles`).\n    For example: `{ \"cCAProfiles\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "cCAProfiles": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ccaprofiles (listCCAProfiles)",
        "description": "Returns all available ccaprofiles resources - Returns all available ccaprofiles resources (listCCAProfiles)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccaprofiles (removeCCAProfiles)",
        "description": "Execute removeCCAProfiles AXL operation (removeCCAProfiles)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccaprofiles (updateCCAProfiles)",
        "description": "Execute updateCCAProfiles AXL operation (updateCCAProfiles)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservice": {
      "put": {
        "summary": "PUT /api/axl/ccdadvertisingservice (addCcdAdvertisingService)",
        "description": "Execute addCcdAdvertisingService AXL operation (addCcdAdvertisingService)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ccdAdvertisingService` as the resource key (not `ccdadvertisingservice`).\n    For example: `{ \"ccdAdvertisingService\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ccdAdvertisingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ccdadvertisingservice (getCcdAdvertisingService)",
        "description": "Returns all available ccdadvertisingservice resources - Returns all available ccdadvertisingservice resources (getCcdAdvertisingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdadvertisingservice (removeCcdAdvertisingService)",
        "description": "Execute removeCcdAdvertisingService AXL operation (removeCcdAdvertisingService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdadvertisingservice (updateCcdAdvertisingService)",
        "description": "Execute updateCcdAdvertisingService AXL operation (updateCcdAdvertisingService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddn": {
      "put": {
        "summary": "PUT /api/axl/ccdhosteddn (addCcdHostedDN)",
        "description": "Execute addCcdHostedDN AXL operation (addCcdHostedDN)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ccdHostedDN` as the resource key (not `ccdhosteddn`).\n    For example: `{ \"ccdHostedDN\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ccdHostedDN": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ccdhosteddn (getCcdHostedDN)",
        "description": "Returns all available ccdhosteddn resources - Returns all available ccdhosteddn resources (getCcdHostedDN)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdhosteddn (removeCcdHostedDN)",
        "description": "Execute removeCcdHostedDN AXL operation (removeCcdHostedDN)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdhosteddn (updateCcdHostedDN)",
        "description": "Execute updateCcdHostedDN AXL operation (updateCcdHostedDN)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroup": {
      "put": {
        "summary": "PUT /api/axl/ccdhosteddngroup (addCcdHostedDNGroup)",
        "description": "Execute addCcdHostedDNGroup AXL operation (addCcdHostedDNGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ccdHostedDNGroup` as the resource key (not `ccdhosteddngroup`).\n    For example: `{ \"ccdHostedDNGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ccdHostedDNGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ccdhosteddngroup (getCcdHostedDNGroup)",
        "description": "Returns all available ccdhosteddngroup resources - Returns all available ccdhosteddngroup resources (getCcdHostedDNGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdhosteddngroup (removeCcdHostedDNGroup)",
        "description": "Execute removeCcdHostedDNGroup AXL operation (removeCcdHostedDNGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdhosteddngroup (updateCcdHostedDNGroup)",
        "description": "Execute updateCcdHostedDNGroup AXL operation (updateCcdHostedDNGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdrequestingservice": {
      "put": {
        "summary": "PUT /api/axl/ccdrequestingservice (addCcdRequestingService)",
        "description": "Execute addCcdRequestingService AXL operation (addCcdRequestingService)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ccdRequestingService` as the resource key (not `ccdrequestingservice`).\n    For example: `{ \"ccdRequestingService\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ccdRequestingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ccdrequestingservice (getCcdRequestingService)",
        "description": "Returns all available ccdrequestingservice resources - Returns all available ccdrequestingservice resources (getCcdRequestingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdrequestingservice (removeCcdRequestingService)",
        "description": "Execute removeCcdRequestingService AXL operation (removeCcdRequestingService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdrequestingservice (updateCcdRequestingService)",
        "description": "Execute updateCcdRequestingService AXL operation (updateCcdRequestingService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateway": {
      "put": {
        "summary": "PUT /api/axl/ciscocatalyst6000e1voipgateway (addCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute addCiscoCatalyst6000E1VoIPGateway AXL operation (addCiscoCatalyst6000E1VoIPGateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ciscoCatalyst6000E1VoIPGateway` as the resource key (not `ciscocatalyst6000e1voipgateway`).\n    For example: `{ \"ciscoCatalyst6000E1VoIPGateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ciscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000e1voipgateway (getCiscoCatalyst6000E1VoIPGateway)",
        "description": "Returns all available ciscocatalyst6000e1voipgateway resources - Returns all available ciscocatalyst6000e1voipgateway resources (getCiscoCatalyst6000E1VoIPGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000e1voipgateway (removeCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute removeCiscoCatalyst6000E1VoIPGateway AXL operation (removeCiscoCatalyst6000E1VoIPGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000e1voipgateway (updateCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute updateCiscoCatalyst6000E1VoIPGateway AXL operation (updateCiscoCatalyst6000E1VoIPGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypri": {
      "put": {
        "summary": "PUT /api/axl/ciscocatalyst6000t1voipgatewaypri (addCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute addCiscoCatalyst6000T1VoIPGatewayPri AXL operation (addCiscoCatalyst6000T1VoIPGatewayPri)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayPri` as the resource key (not `ciscocatalyst6000t1voipgatewaypri`).\n    For example: `{ \"ciscoCatalyst6000T1VoIPGatewayPri\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewaypri (getCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Returns all available ciscocatalyst6000t1voipgatewaypri resources - Returns all available ciscocatalyst6000t1voipgatewaypri resources (getCiscoCatalyst6000T1VoIPGatewayPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000t1voipgatewaypri (removeCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute removeCiscoCatalyst6000T1VoIPGatewayPri AXL operation (removeCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000t1voipgatewaypri (updateCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute updateCiscoCatalyst6000T1VoIPGatewayPri AXL operation (updateCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1": {
      "put": {
        "summary": "PUT /api/axl/ciscocatalyst6000t1voipgatewayt1 (addCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute addCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (addCiscoCatalyst6000T1VoIPGatewayT1)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayT1` as the resource key (not `ciscocatalyst6000t1voipgatewayt1`).\n    For example: `{ \"ciscoCatalyst6000T1VoIPGatewayT1\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewayt1 (getCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Returns all available ciscocatalyst6000t1voipgatewayt1 resources - Returns all available ciscocatalyst6000t1voipgatewayt1 resources (getCiscoCatalyst6000T1VoIPGatewayT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000t1voipgatewayt1 (removeCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute removeCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (removeCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000t1voipgatewayt1 (updateCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute updateCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (updateCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateway": {
      "put": {
        "summary": "PUT /api/axl/ciscocatalyst600024portfxsgateway (addCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute addCiscoCatalyst600024PortFXSGateway AXL operation (addCiscoCatalyst600024PortFXSGateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ciscoCatalyst600024PortFXSGateway` as the resource key (not `ciscocatalyst600024portfxsgateway`).\n    For example: `{ \"ciscoCatalyst600024PortFXSGateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ciscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ciscocatalyst600024portfxsgateway (getCiscoCatalyst600024PortFXSGateway)",
        "description": "Returns all available ciscocatalyst600024portfxsgateway resources - Returns all available ciscocatalyst600024portfxsgateway resources (getCiscoCatalyst600024PortFXSGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst600024portfxsgateway (removeCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute removeCiscoCatalyst600024PortFXSGateway AXL operation (removeCiscoCatalyst600024PortFXSGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst600024portfxsgateway (updateCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute updateCiscoCatalyst600024PortFXSGateway AXL operation (updateCiscoCatalyst600024PortFXSGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfo": {
      "put": {
        "summary": "PUT /api/axl/cmcinfo (addCmcInfo)",
        "description": "Execute addCmcInfo AXL operation (addCmcInfo)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `cmcInfo` as the resource key (not `cmcinfo`).\n    For example: `{ \"cmcInfo\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "cmcInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/cmcinfo (getCmcInfo)",
        "description": "Returns all available cmcinfo resources - Returns all available cmcinfo resources (getCmcInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/cmcinfo (removeCmcInfo)",
        "description": "Execute removeCmcInfo AXL operation (removeCmcInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/cmcinfo (updateCmcInfo)",
        "description": "Execute updateCmcInfo AXL operation (updateCmcInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfig": {
      "put": {
        "summary": "PUT /api/axl/commondeviceconfig (addCommonDeviceConfig)",
        "description": "Execute addCommonDeviceConfig AXL operation (addCommonDeviceConfig)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `commonDeviceConfig` as the resource key (not `commondeviceconfig`).\n    For example: `{ \"commonDeviceConfig\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "commonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/commondeviceconfig (getCommonDeviceConfig)",
        "description": "Returns all available commondeviceconfig resources - Returns all available commondeviceconfig resources (getCommonDeviceConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/commondeviceconfig (removeCommonDeviceConfig)",
        "description": "Execute removeCommonDeviceConfig AXL operation (removeCommonDeviceConfig)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/commondeviceconfig (updateCommonDeviceConfig)",
        "description": "Execute updateCommonDeviceConfig AXL operation (updateCommonDeviceConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfig": {
      "put": {
        "summary": "PUT /api/axl/commonphoneconfig (addCommonPhoneConfig)",
        "description": "Execute addCommonPhoneConfig AXL operation (addCommonPhoneConfig)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `commonPhoneConfig` as the resource key (not `commonphoneconfig`).\n    For example: `{ \"commonPhoneConfig\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "commonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/commonphoneconfig (getCommonPhoneConfig)",
        "description": "Returns all available commonphoneconfig resources - Returns all available commonphoneconfig resources (getCommonPhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/commonphoneconfig (removeCommonPhoneConfig)",
        "description": "Execute removeCommonPhoneConfig AXL operation (removeCommonPhoneConfig)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/commonphoneconfig (updateCommonPhoneConfig)",
        "description": "Execute updateCommonPhoneConfig AXL operation (updateCommonPhoneConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridge": {
      "put": {
        "summary": "PUT /api/axl/conferencebridge (addConferenceBridge)",
        "description": "Execute addConferenceBridge AXL operation (addConferenceBridge)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `conferenceBridge` as the resource key (not `conferencebridge`).\n    For example: `{ \"conferenceBridge\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "conferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/conferencebridge (getConferenceBridge)",
        "description": "Returns all available conferencebridge resources - Returns all available conferencebridge resources (getConferenceBridge)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/conferencebridge (removeConferenceBridge)",
        "description": "Execute removeConferenceBridge AXL operation (removeConferenceBridge)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/conferencebridge (updateConferenceBridge)",
        "description": "Execute updateConferenceBridge AXL operation (updateConferenceBridge)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenow": {
      "put": {
        "summary": "PUT /api/axl/conferencenow (addConferenceNow)",
        "description": "Execute addConferenceNow AXL operation (addConferenceNow)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `conferenceNow` as the resource key (not `conferencenow`).\n    For example: `{ \"conferenceNow\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "conferenceNow": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/conferencenow (getConferenceNow)",
        "description": "Returns all available conferencenow resources - Returns all available conferencenow resources (getConferenceNow)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/conferencenow (removeConferenceNow)",
        "description": "Execute removeConferenceNow AXL operation (removeConferenceNow)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/conferencenow (updateConferenceNow)",
        "description": "Execute updateConferenceNow AXL operation (updateConferenceNow)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicy": {
      "put": {
        "summary": "PUT /api/axl/credentialpolicy (addCredentialPolicy)",
        "description": "Execute addCredentialPolicy AXL operation (addCredentialPolicy)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `credentialPolicy` as the resource key (not `credentialpolicy`).\n    For example: `{ \"credentialPolicy\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "credentialPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/credentialpolicy (getCredentialPolicy)",
        "description": "Returns all available credentialpolicy resources - Returns all available credentialpolicy resources (getCredentialPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/credentialpolicy (removeCredentialPolicy)",
        "description": "Execute removeCredentialPolicy AXL operation (removeCredentialPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/credentialpolicy (updateCredentialPolicy)",
        "description": "Execute updateCredentialPolicy AXL operation (updateCredentialPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/css": {
      "put": {
        "summary": "PUT /api/axl/css (addCss)",
        "description": "Execute addCss AXL operation (addCss)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `css` as the resource key (not `css`).\n    For example: `{ \"css\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCss operation.",
        "tags": [
          "css"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "css": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/css (listCss)",
        "description": "Returns all available css resources - Returns all available css resources (listCss)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCss operation.",
        "tags": [
          "css"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/css (removeCss)",
        "description": "Execute removeCss AXL operation (removeCss)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCss operation.",
        "tags": [
          "css"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/css (updateCss)",
        "description": "Execute updateCss AXL operation (updateCss)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCss operation.",
        "tags": [
          "css"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoint": {
      "put": {
        "summary": "PUT /api/axl/ctiroutepoint (addCtiRoutePoint)",
        "description": "Execute addCtiRoutePoint AXL operation (addCtiRoutePoint)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ctiRoutePoint` as the resource key (not `ctiroutepoint`).\n    For example: `{ \"ctiRoutePoint\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ctiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ctiroutepoint (getCtiRoutePoint)",
        "description": "Returns all available ctiroutepoint resources - Returns all available ctiroutepoint resources (getCtiRoutePoint)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ctiroutepoint (removeCtiRoutePoint)",
        "description": "Execute removeCtiRoutePoint AXL operation (removeCtiRoutePoint)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ctiroutepoint (updateCtiRoutePoint)",
        "description": "Execute updateCtiRoutePoint AXL operation (updateCtiRoutePoint)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofile": {
      "put": {
        "summary": "PUT /api/axl/cumaserversecurityprofile (addCumaServerSecurityProfile)",
        "description": "Execute addCumaServerSecurityProfile AXL operation (addCumaServerSecurityProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `cumaServerSecurityProfile` as the resource key (not `cumaserversecurityprofile`).\n    For example: `{ \"cumaServerSecurityProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "cumaServerSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/cumaserversecurityprofile (getCumaServerSecurityProfile)",
        "description": "Returns all available cumaserversecurityprofile resources - Returns all available cumaserversecurityprofile resources (getCumaServerSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/cumaserversecurityprofile (removeCumaServerSecurityProfile)",
        "description": "Execute removeCumaServerSecurityProfile AXL operation (removeCumaServerSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/cumaserversecurityprofile (updateCumaServerSecurityProfile)",
        "description": "Execute updateCumaServerSecurityProfile AXL operation (updateCumaServerSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customer": {
      "put": {
        "summary": "PUT /api/axl/customer (addCustomer)",
        "description": "Execute addCustomer AXL operation (addCustomer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `customer` as the resource key (not `customer`).\n    For example: `{ \"customer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCustomer operation.",
        "tags": [
          "customer"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "customer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/customer (getCustomer)",
        "description": "Returns all available customer resources - Returns all available customer resources (getCustomer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCustomer operation.",
        "tags": [
          "customer"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/customer (removeCustomer)",
        "description": "Execute removeCustomer AXL operation (removeCustomer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCustomer operation.",
        "tags": [
          "customer"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/customer (updateCustomer)",
        "description": "Execute updateCustomer AXL operation (updateCustomer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCustomer operation.",
        "tags": [
          "customer"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfield": {
      "put": {
        "summary": "PUT /api/axl/customuserfield (addCustomUserField)",
        "description": "Execute addCustomUserField AXL operation (addCustomUserField)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `customUserField` as the resource key (not `customuserfield`).\n    For example: `{ \"customUserField\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "customUserField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/customuserfield (getCustomUserField)",
        "description": "Returns all available customuserfield resources - Returns all available customuserfield resources (getCustomUserField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/customuserfield (removeCustomUserField)",
        "description": "Execute removeCustomUserField AXL operation (removeCustomUserField)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/customuserfield (updateCustomUserField)",
        "description": "Execute updateCustomUserField AXL operation (updateCustomUserField)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroup": {
      "put": {
        "summary": "PUT /api/axl/datetimegroup (addDateTimeGroup)",
        "description": "Execute addDateTimeGroup AXL operation (addDateTimeGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `dateTimeGroup` as the resource key (not `datetimegroup`).\n    For example: `{ \"dateTimeGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "dateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/datetimegroup (getDateTimeGroup)",
        "description": "Returns all available datetimegroup resources - Returns all available datetimegroup resources (getDateTimeGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/datetimegroup (removeDateTimeGroup)",
        "description": "Execute removeDateTimeGroup AXL operation (removeDateTimeGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/datetimegroup (updateDateTimeGroup)",
        "description": "Execute updateDateTimeGroup AXL operation (updateDateTimeGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofile": {
      "put": {
        "summary": "PUT /api/axl/defaultdeviceprofile (addDefaultDeviceProfile)",
        "description": "Execute addDefaultDeviceProfile AXL operation (addDefaultDeviceProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `defaultDeviceProfile` as the resource key (not `defaultdeviceprofile`).\n    For example: `{ \"defaultDeviceProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "defaultDeviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/defaultdeviceprofile (getDefaultDeviceProfile)",
        "description": "Returns all available defaultdeviceprofile resources - Returns all available defaultdeviceprofile resources (getDefaultDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/defaultdeviceprofile (removeDefaultDeviceProfile)",
        "description": "Execute removeDefaultDeviceProfile AXL operation (removeDefaultDeviceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/defaultdeviceprofile (updateDefaultDeviceProfile)",
        "description": "Execute updateDefaultDeviceProfile AXL operation (updateDefaultDeviceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobility": {
      "put": {
        "summary": "PUT /api/axl/devicemobility (addDeviceMobility)",
        "description": "Execute addDeviceMobility AXL operation (addDeviceMobility)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `deviceMobility` as the resource key (not `devicemobility`).\n    For example: `{ \"deviceMobility\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "deviceMobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/devicemobility (getDeviceMobility)",
        "description": "Returns all available devicemobility resources - Returns all available devicemobility resources (getDeviceMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicemobility (removeDeviceMobility)",
        "description": "Execute removeDeviceMobility AXL operation (removeDeviceMobility)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicemobility (updateDeviceMobility)",
        "description": "Execute updateDeviceMobility AXL operation (updateDeviceMobility)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroup": {
      "put": {
        "summary": "PUT /api/axl/devicemobilitygroup (addDeviceMobilityGroup)",
        "description": "Execute addDeviceMobilityGroup AXL operation (addDeviceMobilityGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `deviceMobilityGroup` as the resource key (not `devicemobilitygroup`).\n    For example: `{ \"deviceMobilityGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "deviceMobilityGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/devicemobilitygroup (getDeviceMobilityGroup)",
        "description": "Returns all available devicemobilitygroup resources - Returns all available devicemobilitygroup resources (getDeviceMobilityGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicemobilitygroup (removeDeviceMobilityGroup)",
        "description": "Execute removeDeviceMobilityGroup AXL operation (removeDeviceMobilityGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicemobilitygroup (updateDeviceMobilityGroup)",
        "description": "Execute updateDeviceMobilityGroup AXL operation (updateDeviceMobilityGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepool": {
      "put": {
        "summary": "PUT /api/axl/devicepool (addDevicePool)",
        "description": "Execute addDevicePool AXL operation (addDevicePool)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `devicePool` as the resource key (not `devicepool`).\n    For example: `{ \"devicePool\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "devicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/devicepool (getDevicePool)",
        "description": "Returns all available devicepool resources - Returns all available devicepool resources (getDevicePool)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicepool (removeDevicePool)",
        "description": "Execute removeDevicePool AXL operation (removeDevicePool)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicepool (updateDevicePool)",
        "description": "Execute updateDevicePool AXL operation (updateDevicePool)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofile": {
      "put": {
        "summary": "PUT /api/axl/deviceprofile (addDeviceProfile)",
        "description": "Execute addDeviceProfile AXL operation (addDeviceProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `deviceProfile` as the resource key (not `deviceprofile`).\n    For example: `{ \"deviceProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "deviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/deviceprofile (getDeviceProfile)",
        "description": "Returns all available deviceprofile resources - Returns all available deviceprofile resources (getDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/deviceprofile (removeDeviceProfile)",
        "description": "Execute removeDeviceProfile AXL operation (removeDeviceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/deviceprofile (updateDeviceProfile)",
        "description": "Execute updateDeviceProfile AXL operation (updateDeviceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpserver": {
      "put": {
        "summary": "PUT /api/axl/dhcpserver (addDhcpServer)",
        "description": "Execute addDhcpServer AXL operation (addDhcpServer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `dhcpServer` as the resource key (not `dhcpserver`).\n    For example: `{ \"dhcpServer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "dhcpServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/dhcpserver (getDhcpServer)",
        "description": "Returns all available dhcpserver resources - Returns all available dhcpserver resources (getDhcpServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dhcpserver (removeDhcpServer)",
        "description": "Execute removeDhcpServer AXL operation (removeDhcpServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dhcpserver (updateDhcpServer)",
        "description": "Execute updateDhcpServer AXL operation (updateDhcpServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnet": {
      "put": {
        "summary": "PUT /api/axl/dhcpsubnet (addDhcpSubnet)",
        "description": "Execute addDhcpSubnet AXL operation (addDhcpSubnet)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `dhcpSubnet` as the resource key (not `dhcpsubnet`).\n    For example: `{ \"dhcpSubnet\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "dhcpSubnet": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/dhcpsubnet (getDhcpSubnet)",
        "description": "Returns all available dhcpsubnet resources - Returns all available dhcpsubnet resources (getDhcpSubnet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dhcpsubnet (removeDhcpSubnet)",
        "description": "Execute removeDhcpSubnet AXL operation (removeDhcpSubnet)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dhcpsubnet (updateDhcpSubnet)",
        "description": "Execute updateDhcpSubnet AXL operation (updateDhcpSubnet)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallpark": {
      "put": {
        "summary": "PUT /api/axl/directedcallpark (addDirectedCallPark)",
        "description": "Execute addDirectedCallPark AXL operation (addDirectedCallPark)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `directedCallPark` as the resource key (not `directedcallpark`).\n    For example: `{ \"directedCallPark\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "directedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/directedcallpark (getDirectedCallPark)",
        "description": "Returns all available directedcallpark resources - Returns all available directedcallpark resources (getDirectedCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/directedcallpark (removeDirectedCallPark)",
        "description": "Execute removeDirectedCallPark AXL operation (removeDirectedCallPark)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/directedcallpark (updateDirectedCallPark)",
        "description": "Execute updateDirectedCallPark AXL operation (updateDirectedCallPark)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directorylookupdialrules": {
      "put": {
        "summary": "PUT /api/axl/directorylookupdialrules (addDirectoryLookupDialRules)",
        "description": "Execute addDirectoryLookupDialRules AXL operation (addDirectoryLookupDialRules)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `directoryLookupDialRules` as the resource key (not `directorylookupdialrules`).\n    For example: `{ \"directoryLookupDialRules\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "directoryLookupDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/directorylookupdialrules (listDirectoryLookupDialRules)",
        "description": "Returns all available directorylookupdialrules resources - Returns all available directorylookupdialrules resources (listDirectoryLookupDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/directorylookupdialrules (removeDirectoryLookupDialRules)",
        "description": "Execute removeDirectoryLookupDialRules AXL operation (removeDirectoryLookupDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/directorylookupdialrules (updateDirectoryLookupDialRules)",
        "description": "Execute updateDirectoryLookupDialRules AXL operation (updateDirectoryLookupDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsync": {
      "put": {
        "summary": "PUT /api/axl/dirnumberaliaslookupandsync (addDirNumberAliasLookupandSync)",
        "description": "Execute addDirNumberAliasLookupandSync AXL operation (addDirNumberAliasLookupandSync)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `dirNumberAliasLookupandSync` as the resource key (not `dirnumberaliaslookupandsync`).\n    For example: `{ \"dirNumberAliasLookupandSync\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "dirNumberAliasLookupandSync": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/dirnumberaliaslookupandsync (getDirNumberAliasLookupandSync)",
        "description": "Returns all available dirnumberaliaslookupandsync resources - Returns all available dirnumberaliaslookupandsync resources (getDirNumberAliasLookupandSync)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dirnumberaliaslookupandsync (removeDirNumberAliasLookupandSync)",
        "description": "Execute removeDirNumberAliasLookupandSync AXL operation (removeDirNumberAliasLookupandSync)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dirnumberaliaslookupandsync (updateDirNumberAliasLookupandSync)",
        "description": "Execute updateDirNumberAliasLookupandSync AXL operation (updateDirNumberAliasLookupandSync)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroup": {
      "put": {
        "summary": "PUT /api/axl/elingroup (addElinGroup)",
        "description": "Execute addElinGroup AXL operation (addElinGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `elinGroup` as the resource key (not `elingroup`).\n    For example: `{ \"elinGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "elinGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/elingroup (getElinGroup)",
        "description": "Returns all available elingroup resources - Returns all available elingroup resources (getElinGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/elingroup (removeElinGroup)",
        "description": "Execute removeElinGroup AXL operation (removeElinGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/elingroup (updateElinGroup)",
        "description": "Execute updateElinGroup AXL operation (updateElinGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofile": {
      "put": {
        "summary": "PUT /api/axl/endusercapfprofile (addEndUserCapfProfile)",
        "description": "Execute addEndUserCapfProfile AXL operation (addEndUserCapfProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `endUserCapfProfile` as the resource key (not `endusercapfprofile`).\n    For example: `{ \"endUserCapfProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "endUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/endusercapfprofile (getEndUserCapfProfile)",
        "description": "Returns all available endusercapfprofile resources - Returns all available endusercapfprofile resources (getEndUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/endusercapfprofile (removeEndUserCapfProfile)",
        "description": "Execute removeEndUserCapfProfile AXL operation (removeEndUserCapfProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/endusercapfprofile (updateEndUserCapfProfile)",
        "description": "Execute updateEndUserCapfProfile AXL operation (updateEndUserCapfProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfiguration": {
      "put": {
        "summary": "PUT /api/axl/enterprisefeatureaccessconfiguration (addEnterpriseFeatureAccessConfiguration)",
        "description": "Execute addEnterpriseFeatureAccessConfiguration AXL operation (addEnterpriseFeatureAccessConfiguration)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `enterpriseFeatureAccessConfiguration` as the resource key (not `enterprisefeatureaccessconfiguration`).\n    For example: `{ \"enterpriseFeatureAccessConfiguration\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "enterpriseFeatureAccessConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/enterprisefeatureaccessconfiguration (getEnterpriseFeatureAccessConfiguration)",
        "description": "Returns all available enterprisefeatureaccessconfiguration resources - Returns all available enterprisefeatureaccessconfiguration resources (getEnterpriseFeatureAccessConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/enterprisefeatureaccessconfiguration (removeEnterpriseFeatureAccessConfiguration)",
        "description": "Execute removeEnterpriseFeatureAccessConfiguration AXL operation (removeEnterpriseFeatureAccessConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/enterprisefeatureaccessconfiguration (updateEnterpriseFeatureAccessConfiguration)",
        "description": "Execute updateEnterpriseFeatureAccessConfiguration AXL operation (updateEnterpriseFeatureAccessConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfiguration": {
      "put": {
        "summary": "PUT /api/axl/expresswaycconfiguration (addExpresswayCConfiguration)",
        "description": "Execute addExpresswayCConfiguration AXL operation (addExpresswayCConfiguration)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `expresswayCConfiguration` as the resource key (not `expresswaycconfiguration`).\n    For example: `{ \"expresswayCConfiguration\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "expresswayCConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/expresswaycconfiguration (getExpresswayCConfiguration)",
        "description": "Returns all available expresswaycconfiguration resources - Returns all available expresswaycconfiguration resources (getExpresswayCConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/expresswaycconfiguration (removeExpresswayCConfiguration)",
        "description": "Execute removeExpresswayCConfiguration AXL operation (removeExpresswayCConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/expresswaycconfiguration (updateExpresswayCConfiguration)",
        "description": "Execute updateExpresswayCConfiguration AXL operation (updateExpresswayCConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofile": {
      "put": {
        "summary": "PUT /api/axl/externalcallcontrolprofile (addExternalCallControlProfile)",
        "description": "Execute addExternalCallControlProfile AXL operation (addExternalCallControlProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `externalCallControlProfile` as the resource key (not `externalcallcontrolprofile`).\n    For example: `{ \"externalCallControlProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "externalCallControlProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/externalcallcontrolprofile (getExternalCallControlProfile)",
        "description": "Returns all available externalcallcontrolprofile resources - Returns all available externalcallcontrolprofile resources (getExternalCallControlProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/externalcallcontrolprofile (removeExternalCallControlProfile)",
        "description": "Execute removeExternalCallControlProfile AXL operation (removeExternalCallControlProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/externalcallcontrolprofile (updateExternalCallControlProfile)",
        "description": "Execute updateExternalCallControlProfile AXL operation (updateExternalCallControlProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfo": {
      "put": {
        "summary": "PUT /api/axl/facinfo (addFacInfo)",
        "description": "Execute addFacInfo AXL operation (addFacInfo)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `facInfo` as the resource key (not `facinfo`).\n    For example: `{ \"facInfo\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "facInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/facinfo (getFacInfo)",
        "description": "Returns all available facinfo resources - Returns all available facinfo resources (getFacInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/facinfo (removeFacInfo)",
        "description": "Execute removeFacInfo AXL operation (removeFacInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/facinfo (updateFacInfo)",
        "description": "Execute updateFacInfo AXL operation (updateFacInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofile": {
      "put": {
        "summary": "PUT /api/axl/fallbackprofile (addFallbackProfile)",
        "description": "Execute addFallbackProfile AXL operation (addFallbackProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `fallbackProfile` as the resource key (not `fallbackprofile`).\n    For example: `{ \"fallbackProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "fallbackProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/fallbackprofile (getFallbackProfile)",
        "description": "Returns all available fallbackprofile resources - Returns all available fallbackprofile resources (getFallbackProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/fallbackprofile (removeFallbackProfile)",
        "description": "Execute removeFallbackProfile AXL operation (removeFallbackProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fallbackprofile (updateFallbackProfile)",
        "description": "Execute updateFallbackProfile AXL operation (updateFallbackProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicy": {
      "put": {
        "summary": "PUT /api/axl/featurecontrolpolicy (addFeatureControlPolicy)",
        "description": "Execute addFeatureControlPolicy AXL operation (addFeatureControlPolicy)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `featureControlPolicy` as the resource key (not `featurecontrolpolicy`).\n    For example: `{ \"featureControlPolicy\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "featureControlPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/featurecontrolpolicy (getFeatureControlPolicy)",
        "description": "Returns all available featurecontrolpolicy resources - Returns all available featurecontrolpolicy resources (getFeatureControlPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/featurecontrolpolicy (removeFeatureControlPolicy)",
        "description": "Execute removeFeatureControlPolicy AXL operation (removeFeatureControlPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/featurecontrolpolicy (updateFeatureControlPolicy)",
        "description": "Execute updateFeatureControlPolicy AXL operation (updateFeatureControlPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplate": {
      "put": {
        "summary": "PUT /api/axl/featuregrouptemplate (addFeatureGroupTemplate)",
        "description": "Execute addFeatureGroupTemplate AXL operation (addFeatureGroupTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `featureGroupTemplate` as the resource key (not `featuregrouptemplate`).\n    For example: `{ \"featureGroupTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "featureGroupTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/featuregrouptemplate (getFeatureGroupTemplate)",
        "description": "Returns all available featuregrouptemplate resources - Returns all available featuregrouptemplate resources (getFeatureGroupTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/featuregrouptemplate (removeFeatureGroupTemplate)",
        "description": "Execute removeFeatureGroupTemplate AXL operation (removeFeatureGroupTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/featuregrouptemplate (updateFeatureGroupTemplate)",
        "description": "Execute updateFeatureGroupTemplate AXL operation (updateFeatureGroupTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeeper": {
      "put": {
        "summary": "PUT /api/axl/gatekeeper (addGatekeeper)",
        "description": "Execute addGatekeeper AXL operation (addGatekeeper)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatekeeper` as the resource key (not `gatekeeper`).\n    For example: `{ \"gatekeeper\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatekeeper (getGatekeeper)",
        "description": "Returns all available gatekeeper resources - Returns all available gatekeeper resources (getGatekeeper)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatekeeper (removeGatekeeper)",
        "description": "Execute removeGatekeeper AXL operation (removeGatekeeper)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatekeeper (updateGatekeeper)",
        "description": "Execute updateGatekeeper AXL operation (updateGatekeeper)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateway": {
      "put": {
        "summary": "PUT /api/axl/gateway (addGateway)",
        "description": "Execute addGateway AXL operation (addGateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gateway` as the resource key (not `gateway`).\n    For example: `{ \"gateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGateway operation.",
        "tags": [
          "gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gateway (getGateway)",
        "description": "Returns all available gateway resources - Returns all available gateway resources (getGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGateway operation.",
        "tags": [
          "gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gateway (removeGateway)",
        "description": "Execute removeGateway AXL operation (removeGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGateway operation.",
        "tags": [
          "gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gateway (updateGateway)",
        "description": "Execute updateGateway AXL operation (updateGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGateway operation.",
        "tags": [
          "gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointanalogaccess": {
      "put": {
        "summary": "PUT /api/axl/gatewayendpointanalogaccess (addGatewayEndpointAnalogAccess)",
        "description": "Execute addGatewayEndpointAnalogAccess AXL operation (addGatewayEndpointAnalogAccess)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewayEndpointAnalogAccess` as the resource key (not `gatewayendpointanalogaccess`).\n    For example: `{ \"gatewayEndpointAnalogAccess\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewayEndpointAnalogAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatewayendpointanalogaccess (getGatewayEndpointAnalogAccess)",
        "description": "Returns all available gatewayendpointanalogaccess resources - Returns all available gatewayendpointanalogaccess resources (getGatewayEndpointAnalogAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointanalogaccess (removeGatewayEndpointAnalogAccess)",
        "description": "Execute removeGatewayEndpointAnalogAccess AXL operation (removeGatewayEndpointAnalogAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointanalogaccess (updateGatewayEndpointAnalogAccess)",
        "description": "Execute updateGatewayEndpointAnalogAccess AXL operation (updateGatewayEndpointAnalogAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccessbri": {
      "put": {
        "summary": "PUT /api/axl/gatewayendpointdigitalaccessbri (addGatewayEndpointDigitalAccessBri)",
        "description": "Execute addGatewayEndpointDigitalAccessBri AXL operation (addGatewayEndpointDigitalAccessBri)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewayEndpointDigitalAccessBri` as the resource key (not `gatewayendpointdigitalaccessbri`).\n    For example: `{ \"gatewayEndpointDigitalAccessBri\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewayEndpointDigitalAccessBri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccessbri (getGatewayEndpointDigitalAccessBri)",
        "description": "Returns all available gatewayendpointdigitalaccessbri resources - Returns all available gatewayendpointdigitalaccessbri resources (getGatewayEndpointDigitalAccessBri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccessbri (removeGatewayEndpointDigitalAccessBri)",
        "description": "Execute removeGatewayEndpointDigitalAccessBri AXL operation (removeGatewayEndpointDigitalAccessBri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccessbri (updateGatewayEndpointDigitalAccessBri)",
        "description": "Execute updateGatewayEndpointDigitalAccessBri AXL operation (updateGatewayEndpointDigitalAccessBri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesspri": {
      "put": {
        "summary": "PUT /api/axl/gatewayendpointdigitalaccesspri (addGatewayEndpointDigitalAccessPri)",
        "description": "Execute addGatewayEndpointDigitalAccessPri AXL operation (addGatewayEndpointDigitalAccessPri)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewayEndpointDigitalAccessPri` as the resource key (not `gatewayendpointdigitalaccesspri`).\n    For example: `{ \"gatewayEndpointDigitalAccessPri\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewayEndpointDigitalAccessPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccesspri (getGatewayEndpointDigitalAccessPri)",
        "description": "Returns all available gatewayendpointdigitalaccesspri resources - Returns all available gatewayendpointdigitalaccesspri resources (getGatewayEndpointDigitalAccessPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccesspri (removeGatewayEndpointDigitalAccessPri)",
        "description": "Execute removeGatewayEndpointDigitalAccessPri AXL operation (removeGatewayEndpointDigitalAccessPri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccesspri (updateGatewayEndpointDigitalAccessPri)",
        "description": "Execute updateGatewayEndpointDigitalAccessPri AXL operation (updateGatewayEndpointDigitalAccessPri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesst1": {
      "put": {
        "summary": "PUT /api/axl/gatewayendpointdigitalaccesst1 (addGatewayEndpointDigitalAccessT1)",
        "description": "Execute addGatewayEndpointDigitalAccessT1 AXL operation (addGatewayEndpointDigitalAccessT1)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewayEndpointDigitalAccessT1` as the resource key (not `gatewayendpointdigitalaccesst1`).\n    For example: `{ \"gatewayEndpointDigitalAccessT1\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewayEndpointDigitalAccessT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccesst1 (getGatewayEndpointDigitalAccessT1)",
        "description": "Returns all available gatewayendpointdigitalaccesst1 resources - Returns all available gatewayendpointdigitalaccesst1 resources (getGatewayEndpointDigitalAccessT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccesst1 (removeGatewayEndpointDigitalAccessT1)",
        "description": "Execute removeGatewayEndpointDigitalAccessT1 AXL operation (removeGatewayEndpointDigitalAccessT1)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccesst1 (updateGatewayEndpointDigitalAccessT1)",
        "description": "Execute updateGatewayEndpointDigitalAccessT1 AXL operation (updateGatewayEndpointDigitalAccessT1)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysccpendpoints": {
      "put": {
        "summary": "PUT /api/axl/gatewaysccpendpoints (addGatewaySccpEndpoints)",
        "description": "Execute addGatewaySccpEndpoints AXL operation (addGatewaySccpEndpoints)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewaySccpEndpoints` as the resource key (not `gatewaysccpendpoints`).\n    For example: `{ \"gatewaySccpEndpoints\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewaySccpEndpoints": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/gatewaysccpendpoints (getGatewaySccpEndpoints)",
        "description": "Returns all available gatewaysccpendpoints resources - Returns all available gatewaysccpendpoints resources (getGatewaySccpEndpoints)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewaysccpendpoints (removeGatewaySccpEndpoints)",
        "description": "Execute removeGatewaySccpEndpoints AXL operation (removeGatewaySccpEndpoints)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewaysccpendpoints (updateGatewaySccpEndpoints)",
        "description": "Execute updateGatewaySccpEndpoints AXL operation (updateGatewaySccpEndpoints)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysubunits": {
      "put": {
        "summary": "PUT /api/axl/gatewaysubunits (addGatewaySubunits)",
        "description": "Execute addGatewaySubunits AXL operation (addGatewaySubunits)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `gatewaySubunits` as the resource key (not `gatewaysubunits`).\n    For example: `{ \"gatewaySubunits\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGatewaySubunits operation.",
        "tags": [
          "gatewaysubunit"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "gatewaySubunits": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewaysubunits (removeGatewaySubunits)",
        "description": "Execute removeGatewaySubunits AXL operation (removeGatewaySubunits)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewaySubunits operation.",
        "tags": [
          "gatewaysubunit"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocation": {
      "put": {
        "summary": "PUT /api/axl/geolocation (addGeoLocation)",
        "description": "Execute addGeoLocation AXL operation (addGeoLocation)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `geoLocation` as the resource key (not `geolocation`).\n    For example: `{ \"geoLocation\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "geoLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/geolocation (getGeoLocation)",
        "description": "Returns all available geolocation resources - Returns all available geolocation resources (getGeoLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocation (removeGeoLocation)",
        "description": "Execute removeGeoLocation AXL operation (removeGeoLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocation (updateGeoLocation)",
        "description": "Execute updateGeoLocation AXL operation (updateGeoLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilter": {
      "put": {
        "summary": "PUT /api/axl/geolocationfilter (addGeoLocationFilter)",
        "description": "Execute addGeoLocationFilter AXL operation (addGeoLocationFilter)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `geoLocationFilter` as the resource key (not `geolocationfilter`).\n    For example: `{ \"geoLocationFilter\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "geoLocationFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/geolocationfilter (getGeoLocationFilter)",
        "description": "Returns all available geolocationfilter resources - Returns all available geolocationfilter resources (getGeoLocationFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocationfilter (removeGeoLocationFilter)",
        "description": "Execute removeGeoLocationFilter AXL operation (removeGeoLocationFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocationfilter (updateGeoLocationFilter)",
        "description": "Execute updateGeoLocationFilter AXL operation (updateGeoLocationFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicy": {
      "put": {
        "summary": "PUT /api/axl/geolocationpolicy (addGeoLocationPolicy)",
        "description": "Execute addGeoLocationPolicy AXL operation (addGeoLocationPolicy)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `geoLocationPolicy` as the resource key (not `geolocationpolicy`).\n    For example: `{ \"geoLocationPolicy\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "geoLocationPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/geolocationpolicy (getGeoLocationPolicy)",
        "description": "Returns all available geolocationpolicy resources - Returns all available geolocationpolicy resources (getGeoLocationPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocationpolicy (removeGeoLocationPolicy)",
        "description": "Execute removeGeoLocationPolicy AXL operation (removeGeoLocationPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocationpolicy (updateGeoLocationPolicy)",
        "description": "Execute updateGeoLocationPolicy AXL operation (updateGeoLocationPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateway": {
      "put": {
        "summary": "PUT /api/axl/h323gateway (addH323Gateway)",
        "description": "Execute addH323Gateway AXL operation (addH323Gateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `h323Gateway` as the resource key (not `h323gateway`).\n    For example: `{ \"h323Gateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "h323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/h323gateway (getH323Gateway)",
        "description": "Returns all available h323gateway resources - Returns all available h323gateway resources (getH323Gateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323gateway (removeH323Gateway)",
        "description": "Execute removeH323Gateway AXL operation (removeH323Gateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323gateway (updateH323Gateway)",
        "description": "Execute updateH323Gateway AXL operation (updateH323Gateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phone": {
      "put": {
        "summary": "PUT /api/axl/h323phone (addH323Phone)",
        "description": "Execute addH323Phone AXL operation (addH323Phone)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `h323Phone` as the resource key (not `h323phone`).\n    For example: `{ \"h323Phone\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "h323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/h323phone (getH323Phone)",
        "description": "Returns all available h323phone resources - Returns all available h323phone resources (getH323Phone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323phone (removeH323Phone)",
        "description": "Execute removeH323Phone AXL operation (removeH323Phone)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323phone (updateH323Phone)",
        "description": "Execute updateH323Phone AXL operation (updateH323Phone)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunk": {
      "put": {
        "summary": "PUT /api/axl/h323trunk (addH323Trunk)",
        "description": "Execute addH323Trunk AXL operation (addH323Trunk)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `h323Trunk` as the resource key (not `h323trunk`).\n    For example: `{ \"h323Trunk\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "h323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/h323trunk (getH323Trunk)",
        "description": "Returns all available h323trunk resources - Returns all available h323trunk resources (getH323Trunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323trunk (removeH323Trunk)",
        "description": "Execute removeH323Trunk AXL operation (removeH323Trunk)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323trunk (updateH323Trunk)",
        "description": "Execute updateH323Trunk AXL operation (updateH323Trunk)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/handoffconfiguration": {
      "put": {
        "summary": "PUT /api/axl/handoffconfiguration (addHandoffConfiguration)",
        "description": "Execute addHandoffConfiguration AXL operation (addHandoffConfiguration)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `handoffConfiguration` as the resource key (not `handoffconfiguration`).\n    For example: `{ \"handoffConfiguration\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "handoffConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/handoffconfiguration (getHandoffConfiguration)",
        "description": "Returns all available handoffconfiguration resources - Returns all available handoffconfiguration resources (getHandoffConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/handoffconfiguration (removeHandoffConfiguration)",
        "description": "Execute removeHandoffConfiguration AXL operation (removeHandoffConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/handoffconfiguration (updateHandoffConfiguration)",
        "description": "Execute updateHandoffConfiguration AXL operation (updateHandoffConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/httpprofile": {
      "put": {
        "summary": "PUT /api/axl/httpprofile (addHttpProfile)",
        "description": "Execute addHttpProfile AXL operation (addHttpProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `httpProfile` as the resource key (not `httpprofile`).\n    For example: `{ \"httpProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "httpProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/httpprofile (getHttpProfile)",
        "description": "Returns all available httpprofile resources - Returns all available httpprofile resources (getHttpProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/httpprofile (removeHttpProfile)",
        "description": "Execute removeHttpProfile AXL operation (removeHttpProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/httpprofile (updateHttpProfile)",
        "description": "Execute updateHttpProfile AXL operation (updateHttpProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlist": {
      "put": {
        "summary": "PUT /api/axl/huntlist (addHuntList)",
        "description": "Execute addHuntList AXL operation (addHuntList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `huntList` as the resource key (not `huntlist`).\n    For example: `{ \"huntList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "huntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/huntlist (getHuntList)",
        "description": "Returns all available huntlist resources - Returns all available huntlist resources (getHuntList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/huntlist (removeHuntList)",
        "description": "Execute removeHuntList AXL operation (removeHuntList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/huntlist (updateHuntList)",
        "description": "Execute updateHuntList AXL operation (updateHuntList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilot": {
      "put": {
        "summary": "PUT /api/axl/huntpilot (addHuntPilot)",
        "description": "Execute addHuntPilot AXL operation (addHuntPilot)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `huntPilot` as the resource key (not `huntpilot`).\n    For example: `{ \"huntPilot\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "huntPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/huntpilot (getHuntPilot)",
        "description": "Returns all available huntpilot resources - Returns all available huntpilot resources (getHuntPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/huntpilot (removeHuntPilot)",
        "description": "Execute removeHuntPilot AXL operation (removeHuntPilot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/huntpilot (updateHuntPilot)",
        "description": "Execute updateHuntPilot AXL operation (updateHuntPilot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclient": {
      "put": {
        "summary": "PUT /api/axl/imeclient (addImeClient)",
        "description": "Execute addImeClient AXL operation (addImeClient)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeClient` as the resource key (not `imeclient`).\n    For example: `{ \"imeClient\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeClient": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeclient (getImeClient)",
        "description": "Returns all available imeclient resources - Returns all available imeclient resources (getImeClient)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeclient (removeImeClient)",
        "description": "Execute removeImeClient AXL operation (removeImeClient)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeclient (updateImeClient)",
        "description": "Execute updateImeClient AXL operation (updateImeClient)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformation": {
      "put": {
        "summary": "PUT /api/axl/imee164transformation (addImeE164Transformation)",
        "description": "Execute addImeE164Transformation AXL operation (addImeE164Transformation)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeE164Transformation` as the resource key (not `imee164transformation`).\n    For example: `{ \"imeE164Transformation\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeE164Transformation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imee164transformation (getImeE164Transformation)",
        "description": "Returns all available imee164transformation resources - Returns all available imee164transformation resources (getImeE164Transformation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imee164transformation (removeImeE164Transformation)",
        "description": "Execute removeImeE164Transformation AXL operation (removeImeE164Transformation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imee164transformation (updateImeE164Transformation)",
        "description": "Execute updateImeE164Transformation AXL operation (updateImeE164Transformation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpattern": {
      "put": {
        "summary": "PUT /api/axl/imeenrolledpattern (addImeEnrolledPattern)",
        "description": "Execute addImeEnrolledPattern AXL operation (addImeEnrolledPattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeEnrolledPattern` as the resource key (not `imeenrolledpattern`).\n    For example: `{ \"imeEnrolledPattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeEnrolledPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeenrolledpattern (getImeEnrolledPattern)",
        "description": "Returns all available imeenrolledpattern resources - Returns all available imeenrolledpattern resources (getImeEnrolledPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeenrolledpattern (removeImeEnrolledPattern)",
        "description": "Execute removeImeEnrolledPattern AXL operation (removeImeEnrolledPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeenrolledpattern (updateImeEnrolledPattern)",
        "description": "Execute updateImeEnrolledPattern AXL operation (updateImeEnrolledPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroup": {
      "put": {
        "summary": "PUT /api/axl/imeenrolledpatterngroup (addImeEnrolledPatternGroup)",
        "description": "Execute addImeEnrolledPatternGroup AXL operation (addImeEnrolledPatternGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeEnrolledPatternGroup` as the resource key (not `imeenrolledpatterngroup`).\n    For example: `{ \"imeEnrolledPatternGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeEnrolledPatternGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterngroup (getImeEnrolledPatternGroup)",
        "description": "Returns all available imeenrolledpatterngroup resources - Returns all available imeenrolledpatterngroup resources (getImeEnrolledPatternGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeenrolledpatterngroup (removeImeEnrolledPatternGroup)",
        "description": "Execute removeImeEnrolledPatternGroup AXL operation (removeImeEnrolledPatternGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeenrolledpatterngroup (updateImeEnrolledPatternGroup)",
        "description": "Execute updateImeEnrolledPatternGroup AXL operation (updateImeEnrolledPatternGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumber": {
      "put": {
        "summary": "PUT /api/axl/imeexclusionnumber (addImeExclusionNumber)",
        "description": "Execute addImeExclusionNumber AXL operation (addImeExclusionNumber)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeExclusionNumber` as the resource key (not `imeexclusionnumber`).\n    For example: `{ \"imeExclusionNumber\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeExclusionNumber": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeexclusionnumber (getImeExclusionNumber)",
        "description": "Returns all available imeexclusionnumber resources - Returns all available imeexclusionnumber resources (getImeExclusionNumber)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeexclusionnumber (removeImeExclusionNumber)",
        "description": "Execute removeImeExclusionNumber AXL operation (removeImeExclusionNumber)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeexclusionnumber (updateImeExclusionNumber)",
        "description": "Execute updateImeExclusionNumber AXL operation (updateImeExclusionNumber)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroup": {
      "put": {
        "summary": "PUT /api/axl/imeexclusionnumbergroup (addImeExclusionNumberGroup)",
        "description": "Execute addImeExclusionNumberGroup AXL operation (addImeExclusionNumberGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeExclusionNumberGroup` as the resource key (not `imeexclusionnumbergroup`).\n    For example: `{ \"imeExclusionNumberGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeExclusionNumberGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbergroup (getImeExclusionNumberGroup)",
        "description": "Returns all available imeexclusionnumbergroup resources - Returns all available imeexclusionnumbergroup resources (getImeExclusionNumberGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeexclusionnumbergroup (removeImeExclusionNumberGroup)",
        "description": "Execute removeImeExclusionNumberGroup AXL operation (removeImeExclusionNumberGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeexclusionnumbergroup (updateImeExclusionNumberGroup)",
        "description": "Execute updateImeExclusionNumberGroup AXL operation (updateImeExclusionNumberGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewall": {
      "put": {
        "summary": "PUT /api/axl/imefirewall (addImeFirewall)",
        "description": "Execute addImeFirewall AXL operation (addImeFirewall)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeFirewall` as the resource key (not `imefirewall`).\n    For example: `{ \"imeFirewall\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeFirewall": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imefirewall (getImeFirewall)",
        "description": "Returns all available imefirewall resources - Returns all available imefirewall resources (getImeFirewall)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imefirewall (removeImeFirewall)",
        "description": "Execute removeImeFirewall AXL operation (removeImeFirewall)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imefirewall (updateImeFirewall)",
        "description": "Execute updateImeFirewall AXL operation (updateImeFirewall)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelement": {
      "put": {
        "summary": "PUT /api/axl/imeroutefilterelement (addImeRouteFilterElement)",
        "description": "Execute addImeRouteFilterElement AXL operation (addImeRouteFilterElement)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeRouteFilterElement` as the resource key (not `imeroutefilterelement`).\n    For example: `{ \"imeRouteFilterElement\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeRouteFilterElement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeroutefilterelement (getImeRouteFilterElement)",
        "description": "Returns all available imeroutefilterelement resources - Returns all available imeroutefilterelement resources (getImeRouteFilterElement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeroutefilterelement (removeImeRouteFilterElement)",
        "description": "Execute removeImeRouteFilterElement AXL operation (removeImeRouteFilterElement)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeroutefilterelement (updateImeRouteFilterElement)",
        "description": "Execute updateImeRouteFilterElement AXL operation (updateImeRouteFilterElement)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroup": {
      "put": {
        "summary": "PUT /api/axl/imeroutefiltergroup (addImeRouteFilterGroup)",
        "description": "Execute addImeRouteFilterGroup AXL operation (addImeRouteFilterGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeRouteFilterGroup` as the resource key (not `imeroutefiltergroup`).\n    For example: `{ \"imeRouteFilterGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeRouteFilterGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeroutefiltergroup (getImeRouteFilterGroup)",
        "description": "Returns all available imeroutefiltergroup resources - Returns all available imeroutefiltergroup resources (getImeRouteFilterGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeroutefiltergroup (removeImeRouteFilterGroup)",
        "description": "Execute removeImeRouteFilterGroup AXL operation (removeImeRouteFilterGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeroutefiltergroup (updateImeRouteFilterGroup)",
        "description": "Execute updateImeRouteFilterGroup AXL operation (updateImeRouteFilterGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeserver": {
      "put": {
        "summary": "PUT /api/axl/imeserver (addImeServer)",
        "description": "Execute addImeServer AXL operation (addImeServer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `imeServer` as the resource key (not `imeserver`).\n    For example: `{ \"imeServer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "imeServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/imeserver (getImeServer)",
        "description": "Returns all available imeserver resources - Returns all available imeserver resources (getImeServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeserver (removeImeServer)",
        "description": "Execute removeImeServer AXL operation (removeImeServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeserver (updateImeServer)",
        "description": "Execute updateImeServer AXL operation (updateImeServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/importeddirectoryuricatalogs": {
      "put": {
        "summary": "PUT /api/axl/importeddirectoryuricatalogs (addImportedDirectoryUriCatalogs)",
        "description": "Execute addImportedDirectoryUriCatalogs AXL operation (addImportedDirectoryUriCatalogs)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `importedDirectoryUriCatalogs` as the resource key (not `importeddirectoryuricatalogs`).\n    For example: `{ \"importedDirectoryUriCatalogs\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "importedDirectoryUriCatalogs": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/importeddirectoryuricatalogs (listImportedDirectoryUriCatalogs)",
        "description": "Returns all available importeddirectoryuricatalogs resources - Returns all available importeddirectoryuricatalogs resources (listImportedDirectoryUriCatalogs)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/importeddirectoryuricatalogs (removeImportedDirectoryUriCatalogs)",
        "description": "Execute removeImportedDirectoryUriCatalogs AXL operation (removeImportedDirectoryUriCatalogs)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/importeddirectoryuricatalogs (updateImportedDirectoryUriCatalogs)",
        "description": "Execute updateImportedDirectoryUriCatalogs AXL operation (updateImportedDirectoryUriCatalogs)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevice": {
      "put": {
        "summary": "PUT /api/axl/infrastructuredevice (addInfrastructureDevice)",
        "description": "Execute addInfrastructureDevice AXL operation (addInfrastructureDevice)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `infrastructureDevice` as the resource key (not `infrastructuredevice`).\n    For example: `{ \"infrastructureDevice\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "infrastructureDevice": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/infrastructuredevice (getInfrastructureDevice)",
        "description": "Returns all available infrastructuredevice resources - Returns all available infrastructuredevice resources (getInfrastructureDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/infrastructuredevice (removeInfrastructureDevice)",
        "description": "Execute removeInfrastructureDevice AXL operation (removeInfrastructureDevice)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/infrastructuredevice (updateInfrastructureDevice)",
        "description": "Execute updateInfrastructureDevice AXL operation (updateInfrastructureDevice)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ipphoneservices": {
      "put": {
        "summary": "PUT /api/axl/ipphoneservices (addIpPhoneServices)",
        "description": "Execute addIpPhoneServices AXL operation (addIpPhoneServices)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ipPhoneServices` as the resource key (not `ipphoneservices`).\n    For example: `{ \"ipPhoneServices\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ipPhoneServices": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ipphoneservices (listIpPhoneServices)",
        "description": "Returns all available ipphoneservices resources - Returns all available ipphoneservices resources (listIpPhoneServices)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ipphoneservices (removeIpPhoneServices)",
        "description": "Execute removeIpPhoneServices AXL operation (removeIpPhoneServices)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ipphoneservices (updateIpPhoneServices)",
        "description": "Execute updateIpPhoneServices AXL operation (updateIpPhoneServices)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocale": {
      "put": {
        "summary": "PUT /api/axl/ivruserlocale (addIvrUserLocale)",
        "description": "Execute addIvrUserLocale AXL operation (addIvrUserLocale)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ivrUserLocale` as the resource key (not `ivruserlocale`).\n    For example: `{ \"ivrUserLocale\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ivrUserLocale": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ivruserlocale (getIvrUserLocale)",
        "description": "Returns all available ivruserlocale resources - Returns all available ivruserlocale resources (getIvrUserLocale)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ivruserlocale (removeIvrUserLocale)",
        "description": "Execute removeIvrUserLocale AXL operation (removeIvrUserLocale)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ivruserlocale (updateIvrUserLocale)",
        "description": "Execute updateIvrUserLocale AXL operation (updateIvrUserLocale)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroup": {
      "put": {
        "summary": "PUT /api/axl/lbmgroup (addLbmGroup)",
        "description": "Execute addLbmGroup AXL operation (addLbmGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `lbmGroup` as the resource key (not `lbmgroup`).\n    For example: `{ \"lbmGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "lbmGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/lbmgroup (getLbmGroup)",
        "description": "Returns all available lbmgroup resources - Returns all available lbmgroup resources (getLbmGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/lbmgroup (removeLbmGroup)",
        "description": "Execute removeLbmGroup AXL operation (removeLbmGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/lbmgroup (updateLbmGroup)",
        "description": "Execute updateLbmGroup AXL operation (updateLbmGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroup": {
      "put": {
        "summary": "PUT /api/axl/lbmhubgroup (addLbmHubGroup)",
        "description": "Execute addLbmHubGroup AXL operation (addLbmHubGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `lbmHubGroup` as the resource key (not `lbmhubgroup`).\n    For example: `{ \"lbmHubGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "lbmHubGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/lbmhubgroup (getLbmHubGroup)",
        "description": "Returns all available lbmhubgroup resources - Returns all available lbmhubgroup resources (getLbmHubGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/lbmhubgroup (removeLbmHubGroup)",
        "description": "Execute removeLbmHubGroup AXL operation (removeLbmHubGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/lbmhubgroup (updateLbmHubGroup)",
        "description": "Execute updateLbmHubGroup AXL operation (updateLbmHubGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectory": {
      "put": {
        "summary": "PUT /api/axl/ldapdirectory (addLdapDirectory)",
        "description": "Execute addLdapDirectory AXL operation (addLdapDirectory)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ldapDirectory` as the resource key (not `ldapdirectory`).\n    For example: `{ \"ldapDirectory\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ldapDirectory": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ldapdirectory (getLdapDirectory)",
        "description": "Returns all available ldapdirectory resources - Returns all available ldapdirectory resources (getLdapDirectory)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapdirectory (removeLdapDirectory)",
        "description": "Execute removeLdapDirectory AXL operation (removeLdapDirectory)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapdirectory (updateLdapDirectory)",
        "description": "Execute updateLdapDirectory AXL operation (updateLdapDirectory)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilter": {
      "put": {
        "summary": "PUT /api/axl/ldapfilter (addLdapFilter)",
        "description": "Execute addLdapFilter AXL operation (addLdapFilter)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ldapFilter` as the resource key (not `ldapfilter`).\n    For example: `{ \"ldapFilter\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ldapFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ldapfilter (getLdapFilter)",
        "description": "Returns all available ldapfilter resources - Returns all available ldapfilter resources (getLdapFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapfilter (removeLdapFilter)",
        "description": "Execute removeLdapFilter AXL operation (removeLdapFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapfilter (updateLdapFilter)",
        "description": "Execute updateLdapFilter AXL operation (updateLdapFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfield": {
      "put": {
        "summary": "PUT /api/axl/ldapsynccustomfield (addLdapSyncCustomField)",
        "description": "Execute addLdapSyncCustomField AXL operation (addLdapSyncCustomField)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ldapSyncCustomField` as the resource key (not `ldapsynccustomfield`).\n    For example: `{ \"ldapSyncCustomField\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ldapSyncCustomField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ldapsynccustomfield (getLdapSyncCustomField)",
        "description": "Returns all available ldapsynccustomfield resources - Returns all available ldapsynccustomfield resources (getLdapSyncCustomField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapsynccustomfield (removeLdapSyncCustomField)",
        "description": "Execute removeLdapSyncCustomField AXL operation (removeLdapSyncCustomField)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsynccustomfield (updateLdapSyncCustomField)",
        "description": "Execute updateLdapSyncCustomField AXL operation (updateLdapSyncCustomField)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/line": {
      "put": {
        "summary": "PUT /api/axl/line (addLine)",
        "description": "Execute addLine AXL operation (addLine)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `line` as the resource key (not `line`).\n    For example: `{ \"line\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLine operation.",
        "tags": [
          "line"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "line": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/line (getLine)",
        "description": "Returns all available line resources - Returns all available line resources (getLine)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLine operation.",
        "tags": [
          "line"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/line (removeLine)",
        "description": "Execute removeLine AXL operation (removeLine)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLine operation.",
        "tags": [
          "line"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/line (updateLine)",
        "description": "Execute updateLine AXL operation (updateLine)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLine operation.",
        "tags": [
          "line"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroup": {
      "put": {
        "summary": "PUT /api/axl/linegroup (addLineGroup)",
        "description": "Execute addLineGroup AXL operation (addLineGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `lineGroup` as the resource key (not `linegroup`).\n    For example: `{ \"lineGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "lineGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/linegroup (getLineGroup)",
        "description": "Returns all available linegroup resources - Returns all available linegroup resources (getLineGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/linegroup (removeLineGroup)",
        "description": "Execute removeLineGroup AXL operation (removeLineGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/linegroup (updateLineGroup)",
        "description": "Execute updateLineGroup AXL operation (updateLineGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroup": {
      "put": {
        "summary": "PUT /api/axl/localroutegroup (addLocalRouteGroup)",
        "description": "Execute addLocalRouteGroup AXL operation (addLocalRouteGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `localRouteGroup` as the resource key (not `localroutegroup`).\n    For example: `{ \"localRouteGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "localRouteGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/localroutegroup (getLocalRouteGroup)",
        "description": "Returns all available localroutegroup resources - Returns all available localroutegroup resources (getLocalRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/localroutegroup (removeLocalRouteGroup)",
        "description": "Execute removeLocalRouteGroup AXL operation (removeLocalRouteGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/localroutegroup (updateLocalRouteGroup)",
        "description": "Execute updateLocalRouteGroup AXL operation (updateLocalRouteGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/location": {
      "put": {
        "summary": "PUT /api/axl/location (addLocation)",
        "description": "Execute addLocation AXL operation (addLocation)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `location` as the resource key (not `location`).\n    For example: `{ \"location\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addLocation operation.",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "location": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/location (getLocation)",
        "description": "Returns all available location resources - Returns all available location resources (getLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLocation operation.",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/location (removeLocation)",
        "description": "Execute removeLocation AXL operation (removeLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLocation operation.",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/location (updateLocation)",
        "description": "Execute updateLocation AXL operation (updateLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLocation operation.",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroup": {
      "put": {
        "summary": "PUT /api/axl/mediaresourcegroup (addMediaResourceGroup)",
        "description": "Execute addMediaResourceGroup AXL operation (addMediaResourceGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mediaResourceGroup` as the resource key (not `mediaresourcegroup`).\n    For example: `{ \"mediaResourceGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mediaResourceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mediaresourcegroup (getMediaResourceGroup)",
        "description": "Returns all available mediaresourcegroup resources - Returns all available mediaresourcegroup resources (getMediaResourceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mediaresourcegroup (removeMediaResourceGroup)",
        "description": "Execute removeMediaResourceGroup AXL operation (removeMediaResourceGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mediaresourcegroup (updateMediaResourceGroup)",
        "description": "Execute updateMediaResourceGroup AXL operation (updateMediaResourceGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelist": {
      "put": {
        "summary": "PUT /api/axl/mediaresourcelist (addMediaResourceList)",
        "description": "Execute addMediaResourceList AXL operation (addMediaResourceList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mediaResourceList` as the resource key (not `mediaresourcelist`).\n    For example: `{ \"mediaResourceList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mediaResourceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mediaresourcelist (getMediaResourceList)",
        "description": "Returns all available mediaresourcelist resources - Returns all available mediaresourcelist resources (getMediaResourceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mediaresourcelist (removeMediaResourceList)",
        "description": "Execute removeMediaResourceList AXL operation (removeMediaResourceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mediaresourcelist (updateMediaResourceList)",
        "description": "Execute updateMediaResourceList AXL operation (updateMediaResourceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetme": {
      "put": {
        "summary": "PUT /api/axl/meetme (addMeetMe)",
        "description": "Execute addMeetMe AXL operation (addMeetMe)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `meetMe` as the resource key (not `meetme`).\n    For example: `{ \"meetMe\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "meetMe": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/meetme (getMeetMe)",
        "description": "Returns all available meetme resources - Returns all available meetme resources (getMeetMe)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/meetme (removeMeetMe)",
        "description": "Execute removeMeetMe AXL operation (removeMeetMe)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/meetme (updateMeetMe)",
        "description": "Execute updateMeetMe AXL operation (updateMeetMe)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaiting": {
      "put": {
        "summary": "PUT /api/axl/messagewaiting (addMessageWaiting)",
        "description": "Execute addMessageWaiting AXL operation (addMessageWaiting)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `messageWaiting` as the resource key (not `messagewaiting`).\n    For example: `{ \"messageWaiting\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "messageWaiting": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/messagewaiting (getMessageWaiting)",
        "description": "Returns all available messagewaiting resources - Returns all available messagewaiting resources (getMessageWaiting)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/messagewaiting (removeMessageWaiting)",
        "description": "Execute removeMessageWaiting AXL operation (removeMessageWaiting)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/messagewaiting (updateMessageWaiting)",
        "description": "Execute updateMessageWaiting AXL operation (updateMessageWaiting)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomain": {
      "put": {
        "summary": "PUT /api/axl/mlppdomain (addMlppDomain)",
        "description": "Execute addMlppDomain AXL operation (addMlppDomain)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mlppDomain` as the resource key (not `mlppdomain`).\n    For example: `{ \"mlppDomain\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mlppDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mlppdomain (getMlppDomain)",
        "description": "Returns all available mlppdomain resources - Returns all available mlppdomain resources (getMlppDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mlppdomain (removeMlppDomain)",
        "description": "Execute removeMlppDomain AXL operation (removeMlppDomain)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mlppdomain (updateMlppDomain)",
        "description": "Execute updateMlppDomain AXL operation (updateMlppDomain)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilevoiceaccess": {
      "put": {
        "summary": "PUT /api/axl/mobilevoiceaccess (addMobileVoiceAccess)",
        "description": "Execute addMobileVoiceAccess AXL operation (addMobileVoiceAccess)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mobileVoiceAccess` as the resource key (not `mobilevoiceaccess`).\n    For example: `{ \"mobileVoiceAccess\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mobileVoiceAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mobilevoiceaccess (getMobileVoiceAccess)",
        "description": "Returns all available mobilevoiceaccess resources - Returns all available mobilevoiceaccess resources (getMobileVoiceAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mobilevoiceaccess (removeMobileVoiceAccess)",
        "description": "Execute removeMobileVoiceAccess AXL operation (removeMobileVoiceAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobilevoiceaccess (updateMobileVoiceAccess)",
        "description": "Execute updateMobileVoiceAccess AXL operation (updateMobileVoiceAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobility": {
      "put": {
        "summary": "PUT /api/axl/mobility (addMobility)",
        "description": "Execute addMobility AXL operation (addMobility)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mobility` as the resource key (not `mobility`).\n    For example: `{ \"mobility\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMobility operation.",
        "tags": [
          "mobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mobility (getMobility)",
        "description": "Returns all available mobility resources - Returns all available mobility resources (getMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobility operation.",
        "tags": [
          "mobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobility (updateMobility)",
        "description": "Execute updateMobility AXL operation (updateMobility)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobility operation.",
        "tags": [
          "mobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofile": {
      "put": {
        "summary": "PUT /api/axl/mobilityprofile (addMobilityProfile)",
        "description": "Execute addMobilityProfile AXL operation (addMobilityProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mobilityProfile` as the resource key (not `mobilityprofile`).\n    For example: `{ \"mobilityProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mobilityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mobilityprofile (getMobilityProfile)",
        "description": "Returns all available mobilityprofile resources - Returns all available mobilityprofile resources (getMobilityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mobilityprofile (removeMobilityProfile)",
        "description": "Execute removeMobilityProfile AXL operation (removeMobilityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobilityprofile (updateMobilityProfile)",
        "description": "Execute updateMobilityProfile AXL operation (updateMobilityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomain": {
      "put": {
        "summary": "PUT /api/axl/mraservicedomain (addMraServiceDomain)",
        "description": "Execute addMraServiceDomain AXL operation (addMraServiceDomain)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mraServiceDomain` as the resource key (not `mraservicedomain`).\n    For example: `{ \"mraServiceDomain\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mraServiceDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mraservicedomain (getMraServiceDomain)",
        "description": "Returns all available mraservicedomain resources - Returns all available mraservicedomain resources (getMraServiceDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mraservicedomain (removeMraServiceDomain)",
        "description": "Execute removeMraServiceDomain AXL operation (removeMraServiceDomain)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mraservicedomain (updateMraServiceDomain)",
        "description": "Execute updateMraServiceDomain AXL operation (updateMraServiceDomain)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtp": {
      "put": {
        "summary": "PUT /api/axl/mtp (addMtp)",
        "description": "Execute addMtp AXL operation (addMtp)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `mtp` as the resource key (not `mtp`).\n    For example: `{ \"mtp\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addMtp operation.",
        "tags": [
          "mtp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "mtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/mtp (getMtp)",
        "description": "Returns all available mtp resources - Returns all available mtp resources (getMtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMtp operation.",
        "tags": [
          "mtp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mtp (removeMtp)",
        "description": "Execute removeMtp AXL operation (removeMtp)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMtp operation.",
        "tags": [
          "mtp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mtp (updateMtp)",
        "description": "Execute updateMtp AXL operation (updateMtp)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMtp operation.",
        "tags": [
          "mtp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofile": {
      "put": {
        "summary": "PUT /api/axl/networkaccessprofile (addNetworkAccessProfile)",
        "description": "Execute addNetworkAccessProfile AXL operation (addNetworkAccessProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `networkAccessProfile` as the resource key (not `networkaccessprofile`).\n    For example: `{ \"networkAccessProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "networkAccessProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/networkaccessprofile (getNetworkAccessProfile)",
        "description": "Returns all available networkaccessprofile resources - Returns all available networkaccessprofile resources (getNetworkAccessProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/networkaccessprofile (removeNetworkAccessProfile)",
        "description": "Execute removeNetworkAccessProfile AXL operation (removeNetworkAccessProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/networkaccessprofile (updateNetworkAccessProfile)",
        "description": "Execute updateNetworkAccessProfile AXL operation (updateNetworkAccessProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phone": {
      "put": {
        "summary": "PUT /api/axl/phone (addPhone)",
        "description": "Execute addPhone AXL operation (addPhone)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `phone` as the resource key (not `phone`).\n    For example: `{ \"phone\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhone operation.",
        "tags": [
          "phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/phone (getPhone)",
        "description": "Returns all available phone resources - Returns all available phone resources (getPhone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhone operation.",
        "tags": [
          "phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phone (removePhone)",
        "description": "Execute removePhone AXL operation (removePhone)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhone operation.",
        "tags": [
          "phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phone (updatePhone)",
        "description": "Execute updatePhone AXL operation (updatePhone)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhone operation.",
        "tags": [
          "phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcode": {
      "put": {
        "summary": "PUT /api/axl/phoneactivationcode (addPhoneActivationCode)",
        "description": "Execute addPhoneActivationCode AXL operation (addPhoneActivationCode)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `phoneActivationCode` as the resource key (not `phoneactivationcode`).\n    For example: `{ \"phoneActivationCode\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhoneActivationCode operation.",
        "tags": [
          "phoneactivationcode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "phoneActivationCode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phoneactivationcode (removePhoneActivationCode)",
        "description": "Execute removePhoneActivationCode AXL operation (removePhoneActivationCode)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneActivationCode operation.",
        "tags": [
          "phoneactivationcode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplate": {
      "put": {
        "summary": "PUT /api/axl/phonebuttontemplate (addPhoneButtonTemplate)",
        "description": "Execute addPhoneButtonTemplate AXL operation (addPhoneButtonTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `phoneButtonTemplate` as the resource key (not `phonebuttontemplate`).\n    For example: `{ \"phoneButtonTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "phoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/phonebuttontemplate (getPhoneButtonTemplate)",
        "description": "Returns all available phonebuttontemplate resources - Returns all available phonebuttontemplate resources (getPhoneButtonTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonebuttontemplate (removePhoneButtonTemplate)",
        "description": "Execute removePhoneButtonTemplate AXL operation (removePhoneButtonTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonebuttontemplate (updatePhoneButtonTemplate)",
        "description": "Execute updatePhoneButtonTemplate AXL operation (updatePhoneButtonTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentp": {
      "put": {
        "summary": "PUT /api/axl/phonentp (addPhoneNtp)",
        "description": "Execute addPhoneNtp AXL operation (addPhoneNtp)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `phoneNtp` as the resource key (not `phonentp`).\n    For example: `{ \"phoneNtp\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "phoneNtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/phonentp (getPhoneNtp)",
        "description": "Returns all available phonentp resources - Returns all available phonentp resources (getPhoneNtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonentp (removePhoneNtp)",
        "description": "Execute removePhoneNtp AXL operation (removePhoneNtp)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonentp (updatePhoneNtp)",
        "description": "Execute updatePhoneNtp AXL operation (updatePhoneNtp)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofile": {
      "put": {
        "summary": "PUT /api/axl/phonesecurityprofile (addPhoneSecurityProfile)",
        "description": "Execute addPhoneSecurityProfile AXL operation (addPhoneSecurityProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `phoneSecurityProfile` as the resource key (not `phonesecurityprofile`).\n    For example: `{ \"phoneSecurityProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "phoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/phonesecurityprofile (getPhoneSecurityProfile)",
        "description": "Returns all available phonesecurityprofile resources - Returns all available phonesecurityprofile resources (getPhoneSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonesecurityprofile (removePhoneSecurityProfile)",
        "description": "Execute removePhoneSecurityProfile AXL operation (removePhoneSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonesecurityprofile (updatePhoneSecurityProfile)",
        "description": "Execute updatePhoneSecurityProfile AXL operation (updatePhoneSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocation": {
      "put": {
        "summary": "PUT /api/axl/physicallocation (addPhysicalLocation)",
        "description": "Execute addPhysicalLocation AXL operation (addPhysicalLocation)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `physicalLocation` as the resource key (not `physicallocation`).\n    For example: `{ \"physicalLocation\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "physicalLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/physicallocation (getPhysicalLocation)",
        "description": "Returns all available physicallocation resources - Returns all available physicallocation resources (getPhysicalLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/physicallocation (removePhysicalLocation)",
        "description": "Execute removePhysicalLocation AXL operation (removePhysicalLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/physicallocation (updatePhysicalLocation)",
        "description": "Execute updatePhysicalLocation AXL operation (updatePhysicalLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroup": {
      "put": {
        "summary": "PUT /api/axl/presencegroup (addPresenceGroup)",
        "description": "Execute addPresenceGroup AXL operation (addPresenceGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `presenceGroup` as the resource key (not `presencegroup`).\n    For example: `{ \"presenceGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "presenceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/presencegroup (getPresenceGroup)",
        "description": "Returns all available presencegroup resources - Returns all available presencegroup resources (getPresenceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/presencegroup (removePresenceGroup)",
        "description": "Execute removePresenceGroup AXL operation (removePresenceGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/presencegroup (updatePresenceGroup)",
        "description": "Execute updatePresenceGroup AXL operation (updatePresenceGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroup": {
      "put": {
        "summary": "PUT /api/axl/presenceredundancygroup (addPresenceRedundancyGroup)",
        "description": "Execute addPresenceRedundancyGroup AXL operation (addPresenceRedundancyGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `presenceRedundancyGroup` as the resource key (not `presenceredundancygroup`).\n    For example: `{ \"presenceRedundancyGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addPresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "presenceRedundancyGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/presenceredundancygroup (getPresenceRedundancyGroup)",
        "description": "Returns all available presenceredundancygroup resources - Returns all available presenceredundancygroup resources (getPresenceRedundancyGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/presenceredundancygroup (removePresenceRedundancyGroup)",
        "description": "Execute removePresenceRedundancyGroup AXL operation (removePresenceRedundancyGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/presenceredundancygroup (updatePresenceRedundancyGroup)",
        "description": "Execute updatePresenceRedundancyGroup AXL operation (updatePresenceRedundancyGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnode": {
      "put": {
        "summary": "PUT /api/axl/processnode (addProcessNode)",
        "description": "Execute addProcessNode AXL operation (addProcessNode)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `processNode` as the resource key (not `processnode`).\n    For example: `{ \"processNode\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "processNode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/processnode (getProcessNode)",
        "description": "Returns all available processnode resources - Returns all available processnode resources (getProcessNode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/processnode (removeProcessNode)",
        "description": "Execute removeProcessNode AXL operation (removeProcessNode)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/processnode (updateProcessNode)",
        "description": "Execute updateProcessNode AXL operation (updateProcessNode)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofile": {
      "put": {
        "summary": "PUT /api/axl/recordingprofile (addRecordingProfile)",
        "description": "Execute addRecordingProfile AXL operation (addRecordingProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `recordingProfile` as the resource key (not `recordingprofile`).\n    For example: `{ \"recordingProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "recordingProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/recordingprofile (getRecordingProfile)",
        "description": "Returns all available recordingprofile resources - Returns all available recordingprofile resources (getRecordingProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/recordingprofile (removeRecordingProfile)",
        "description": "Execute removeRecordingProfile AXL operation (removeRecordingProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/recordingprofile (updateRecordingProfile)",
        "description": "Execute updateRecordingProfile AXL operation (updateRecordingProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/region": {
      "put": {
        "summary": "PUT /api/axl/region (addRegion)",
        "description": "Execute addRegion AXL operation (addRegion)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `region` as the resource key (not `region`).\n    For example: `{ \"region\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRegion operation.",
        "tags": [
          "region"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "region": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/region (getRegion)",
        "description": "Returns all available region resources - Returns all available region resources (getRegion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRegion operation.",
        "tags": [
          "region"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/region (removeRegion)",
        "description": "Execute removeRegion AXL operation (removeRegion)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRegion operation.",
        "tags": [
          "region"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/region (updateRegion)",
        "description": "Execute updateRegion AXL operation (updateRegion)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRegion operation.",
        "tags": [
          "region"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotecluster": {
      "put": {
        "summary": "PUT /api/axl/remotecluster (addRemoteCluster)",
        "description": "Execute addRemoteCluster AXL operation (addRemoteCluster)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `remoteCluster` as the resource key (not `remotecluster`).\n    For example: `{ \"remoteCluster\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "remoteCluster": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/remotecluster (getRemoteCluster)",
        "description": "Returns all available remotecluster resources - Returns all available remotecluster resources (getRemoteCluster)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotecluster (removeRemoteCluster)",
        "description": "Execute removeRemoteCluster AXL operation (removeRemoteCluster)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotecluster (updateRemoteCluster)",
        "description": "Execute updateRemoteCluster AXL operation (updateRemoteCluster)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestination": {
      "put": {
        "summary": "PUT /api/axl/remotedestination (addRemoteDestination)",
        "description": "Execute addRemoteDestination AXL operation (addRemoteDestination)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `remoteDestination` as the resource key (not `remotedestination`).\n    For example: `{ \"remoteDestination\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "remoteDestination": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/remotedestination (getRemoteDestination)",
        "description": "Returns all available remotedestination resources - Returns all available remotedestination resources (getRemoteDestination)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotedestination (removeRemoteDestination)",
        "description": "Execute removeRemoteDestination AXL operation (removeRemoteDestination)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotedestination (updateRemoteDestination)",
        "description": "Execute updateRemoteDestination AXL operation (updateRemoteDestination)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofile": {
      "put": {
        "summary": "PUT /api/axl/remotedestinationprofile (addRemoteDestinationProfile)",
        "description": "Execute addRemoteDestinationProfile AXL operation (addRemoteDestinationProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `remoteDestinationProfile` as the resource key (not `remotedestinationprofile`).\n    For example: `{ \"remoteDestinationProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "remoteDestinationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/remotedestinationprofile (getRemoteDestinationProfile)",
        "description": "Returns all available remotedestinationprofile resources - Returns all available remotedestinationprofile resources (getRemoteDestinationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotedestinationprofile (removeRemoteDestinationProfile)",
        "description": "Execute removeRemoteDestinationProfile AXL operation (removeRemoteDestinationProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotedestinationprofile (updateRemoteDestinationProfile)",
        "description": "Execute updateRemoteDestinationProfile AXL operation (updateRemoteDestinationProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespace": {
      "put": {
        "summary": "PUT /api/axl/resourceprioritynamespace (addResourcePriorityNamespace)",
        "description": "Execute addResourcePriorityNamespace AXL operation (addResourcePriorityNamespace)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `resourcePriorityNamespace` as the resource key (not `resourceprioritynamespace`).\n    For example: `{ \"resourcePriorityNamespace\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "resourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespace (getResourcePriorityNamespace)",
        "description": "Returns all available resourceprioritynamespace resources - Returns all available resourceprioritynamespace resources (getResourcePriorityNamespace)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/resourceprioritynamespace (removeResourcePriorityNamespace)",
        "description": "Execute removeResourcePriorityNamespace AXL operation (removeResourcePriorityNamespace)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/resourceprioritynamespace (updateResourcePriorityNamespace)",
        "description": "Execute updateResourcePriorityNamespace AXL operation (updateResourcePriorityNamespace)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelist": {
      "put": {
        "summary": "PUT /api/axl/resourceprioritynamespacelist (addResourcePriorityNamespaceList)",
        "description": "Execute addResourcePriorityNamespaceList AXL operation (addResourcePriorityNamespaceList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `resourcePriorityNamespaceList` as the resource key (not `resourceprioritynamespacelist`).\n    For example: `{ \"resourcePriorityNamespaceList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "resourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespacelist (getResourcePriorityNamespaceList)",
        "description": "Returns all available resourceprioritynamespacelist resources - Returns all available resourceprioritynamespacelist resources (getResourcePriorityNamespaceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/resourceprioritynamespacelist (removeResourcePriorityNamespaceList)",
        "description": "Execute removeResourcePriorityNamespaceList AXL operation (removeResourcePriorityNamespaceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/resourceprioritynamespacelist (updateResourcePriorityNamespaceList)",
        "description": "Execute updateResourcePriorityNamespaceList AXL operation (updateResourcePriorityNamespaceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilter": {
      "put": {
        "summary": "PUT /api/axl/routefilter (addRouteFilter)",
        "description": "Execute addRouteFilter AXL operation (addRouteFilter)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `routeFilter` as the resource key (not `routefilter`).\n    For example: `{ \"routeFilter\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "routeFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/routefilter (getRouteFilter)",
        "description": "Returns all available routefilter resources - Returns all available routefilter resources (getRouteFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routefilter (removeRouteFilter)",
        "description": "Execute removeRouteFilter AXL operation (removeRouteFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routefilter (updateRouteFilter)",
        "description": "Execute updateRouteFilter AXL operation (updateRouteFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroup": {
      "put": {
        "summary": "PUT /api/axl/routegroup (addRouteGroup)",
        "description": "Execute addRouteGroup AXL operation (addRouteGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `routeGroup` as the resource key (not `routegroup`).\n    For example: `{ \"routeGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "routeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/routegroup (getRouteGroup)",
        "description": "Returns all available routegroup resources - Returns all available routegroup resources (getRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routegroup (removeRouteGroup)",
        "description": "Execute removeRouteGroup AXL operation (removeRouteGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routegroup (updateRouteGroup)",
        "description": "Execute updateRouteGroup AXL operation (updateRouteGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelist": {
      "put": {
        "summary": "PUT /api/axl/routelist (addRouteList)",
        "description": "Execute addRouteList AXL operation (addRouteList)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `routeList` as the resource key (not `routelist`).\n    For example: `{ \"routeList\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRouteList operation.",
        "tags": [
          "routelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "routeList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/routelist (getRouteList)",
        "description": "Returns all available routelist resources - Returns all available routelist resources (getRouteList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteList operation.",
        "tags": [
          "routelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routelist (removeRouteList)",
        "description": "Execute removeRouteList AXL operation (removeRouteList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteList operation.",
        "tags": [
          "routelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routelist (updateRouteList)",
        "description": "Execute updateRouteList AXL operation (updateRouteList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteList operation.",
        "tags": [
          "routelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartition": {
      "put": {
        "summary": "PUT /api/axl/routepartition (addRoutePartition)",
        "description": "Execute addRoutePartition AXL operation (addRoutePartition)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `routePartition` as the resource key (not `routepartition`).\n    For example: `{ \"routePartition\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "routePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/routepartition (getRoutePartition)",
        "description": "Returns all available routepartition resources - Returns all available routepartition resources (getRoutePartition)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routepartition (removeRoutePartition)",
        "description": "Execute removeRoutePartition AXL operation (removeRoutePartition)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routepartition (updateRoutePartition)",
        "description": "Execute updateRoutePartition AXL operation (updateRoutePartition)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepattern": {
      "put": {
        "summary": "PUT /api/axl/routepattern (addRoutePattern)",
        "description": "Execute addRoutePattern AXL operation (addRoutePattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `routePattern` as the resource key (not `routepattern`).\n    For example: `{ \"routePattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "routePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/routepattern (getRoutePattern)",
        "description": "Returns all available routepattern resources - Returns all available routepattern resources (getRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routepattern (removeRoutePattern)",
        "description": "Execute removeRoutePattern AXL operation (removeRoutePattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routepattern (updateRoutePattern)",
        "description": "Execute updateRoutePattern AXL operation (updateRoutePattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safccdpurgeblocklearnedroutes": {
      "put": {
        "summary": "PUT /api/axl/safccdpurgeblocklearnedroutes (addSafCcdPurgeBlockLearnedRoutes)",
        "description": "Execute addSafCcdPurgeBlockLearnedRoutes AXL operation (addSafCcdPurgeBlockLearnedRoutes)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `safCcdPurgeBlockLearnedRoutes` as the resource key (not `safccdpurgeblocklearnedroutes`).\n    For example: `{ \"safCcdPurgeBlockLearnedRoutes\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "safCcdPurgeBlockLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/safccdpurgeblocklearnedroutes (listSafCcdPurgeBlockLearnedRoutes)",
        "description": "Returns all available safccdpurgeblocklearnedroutes resources - Returns all available safccdpurgeblocklearnedroutes resources (listSafCcdPurgeBlockLearnedRoutes)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safccdpurgeblocklearnedroutes (removeSafCcdPurgeBlockLearnedRoutes)",
        "description": "Execute removeSafCcdPurgeBlockLearnedRoutes AXL operation (removeSafCcdPurgeBlockLearnedRoutes)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safccdpurgeblocklearnedroutes (updateSafCcdPurgeBlockLearnedRoutes)",
        "description": "Execute updateSafCcdPurgeBlockLearnedRoutes AXL operation (updateSafCcdPurgeBlockLearnedRoutes)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarder": {
      "put": {
        "summary": "PUT /api/axl/safforwarder (addSafForwarder)",
        "description": "Execute addSafForwarder AXL operation (addSafForwarder)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `safForwarder` as the resource key (not `safforwarder`).\n    For example: `{ \"safForwarder\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "safForwarder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/safforwarder (getSafForwarder)",
        "description": "Returns all available safforwarder resources - Returns all available safforwarder resources (getSafForwarder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safforwarder (removeSafForwarder)",
        "description": "Execute removeSafForwarder AXL operation (removeSafForwarder)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safforwarder (updateSafForwarder)",
        "description": "Execute updateSafForwarder AXL operation (updateSafForwarder)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofile": {
      "put": {
        "summary": "PUT /api/axl/safsecurityprofile (addSafSecurityProfile)",
        "description": "Execute addSafSecurityProfile AXL operation (addSafSecurityProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `safSecurityProfile` as the resource key (not `safsecurityprofile`).\n    For example: `{ \"safSecurityProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "safSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/safsecurityprofile (getSafSecurityProfile)",
        "description": "Returns all available safsecurityprofile resources - Returns all available safsecurityprofile resources (getSafSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safsecurityprofile (removeSafSecurityProfile)",
        "description": "Execute removeSafSecurityProfile AXL operation (removeSafSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safsecurityprofile (updateSafSecurityProfile)",
        "description": "Execute updateSafSecurityProfile AXL operation (updateSafSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofile": {
      "put": {
        "summary": "PUT /api/axl/sdptransparencyprofile (addSdpTransparencyProfile)",
        "description": "Execute addSdpTransparencyProfile AXL operation (addSdpTransparencyProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sdpTransparencyProfile` as the resource key (not `sdptransparencyprofile`).\n    For example: `{ \"sdpTransparencyProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sdpTransparencyProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/sdptransparencyprofile (getSdpTransparencyProfile)",
        "description": "Returns all available sdptransparencyprofile resources - Returns all available sdptransparencyprofile resources (getSdpTransparencyProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sdptransparencyprofile (removeSdpTransparencyProfile)",
        "description": "Execute removeSdpTransparencyProfile AXL operation (removeSdpTransparencyProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sdptransparencyprofile (updateSdpTransparencyProfile)",
        "description": "Execute updateSdpTransparencyProfile AXL operation (updateSdpTransparencyProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofile": {
      "put": {
        "summary": "PUT /api/axl/serviceprofile (addServiceProfile)",
        "description": "Execute addServiceProfile AXL operation (addServiceProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `serviceProfile` as the resource key (not `serviceprofile`).\n    For example: `{ \"serviceProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "serviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/serviceprofile (getServiceProfile)",
        "description": "Returns all available serviceprofile resources - Returns all available serviceprofile resources (getServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/serviceprofile (removeServiceProfile)",
        "description": "Execute removeServiceProfile AXL operation (removeServiceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/serviceprofile (updateServiceProfile)",
        "description": "Execute updateServiceProfile AXL operation (updateServiceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipdialrules": {
      "put": {
        "summary": "PUT /api/axl/sipdialrules (addSipDialRules)",
        "description": "Execute addSipDialRules AXL operation (addSipDialRules)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipDialRules` as the resource key (not `sipdialrules`).\n    For example: `{ \"sipDialRules\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/sipdialrules (listSipDialRules)",
        "description": "Returns all available sipdialrules resources - Returns all available sipdialrules resources (listSipDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipdialrules (removeSipDialRules)",
        "description": "Execute removeSipDialRules AXL operation (removeSipDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipdialrules (updateSipDialRules)",
        "description": "Execute updateSipDialRules AXL operation (updateSipDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscript": {
      "put": {
        "summary": "PUT /api/axl/sipnormalizationscript (addSIPNormalizationScript)",
        "description": "Execute addSIPNormalizationScript AXL operation (addSIPNormalizationScript)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sIPNormalizationScript` as the resource key (not `sipnormalizationscript`).\n    For example: `{ \"sIPNormalizationScript\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sIPNormalizationScript": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/sipnormalizationscript (getSIPNormalizationScript)",
        "description": "Returns all available sipnormalizationscript resources - Returns all available sipnormalizationscript resources (getSIPNormalizationScript)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipnormalizationscript (removeSIPNormalizationScript)",
        "description": "Execute removeSIPNormalizationScript AXL operation (removeSIPNormalizationScript)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipnormalizationscript (updateSIPNormalizationScript)",
        "description": "Execute updateSIPNormalizationScript AXL operation (updateSIPNormalizationScript)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofile": {
      "put": {
        "summary": "PUT /api/axl/sipprofile (addSipProfile)",
        "description": "Execute addSipProfile AXL operation (addSipProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipProfile` as the resource key (not `sipprofile`).\n    For example: `{ \"sipProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/sipprofile (getSipProfile)",
        "description": "Returns all available sipprofile resources - Returns all available sipprofile resources (getSipProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipprofile (removeSipProfile)",
        "description": "Execute removeSipProfile AXL operation (removeSipProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipprofile (updateSipProfile)",
        "description": "Execute updateSipProfile AXL operation (updateSipProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealm": {
      "put": {
        "summary": "PUT /api/axl/siprealm (addSipRealm)",
        "description": "Execute addSipRealm AXL operation (addSipRealm)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipRealm` as the resource key (not `siprealm`).\n    For example: `{ \"sipRealm\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipRealm": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/siprealm (getSipRealm)",
        "description": "Returns all available siprealm resources - Returns all available siprealm resources (getSipRealm)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siprealm (removeSipRealm)",
        "description": "Execute removeSipRealm AXL operation (removeSipRealm)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siprealm (updateSipRealm)",
        "description": "Execute updateSipRealm AXL operation (updateSipRealm)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepattern": {
      "put": {
        "summary": "PUT /api/axl/siproutepattern (addSipRoutePattern)",
        "description": "Execute addSipRoutePattern AXL operation (addSipRoutePattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipRoutePattern` as the resource key (not `siproutepattern`).\n    For example: `{ \"sipRoutePattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipRoutePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/siproutepattern (getSipRoutePattern)",
        "description": "Returns all available siproutepattern resources - Returns all available siproutepattern resources (getSipRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siproutepattern (removeSipRoutePattern)",
        "description": "Execute removeSipRoutePattern AXL operation (removeSipRoutePattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siproutepattern (updateSipRoutePattern)",
        "description": "Execute updateSipRoutePattern AXL operation (updateSipRoutePattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunk": {
      "put": {
        "summary": "PUT /api/axl/siptrunk (addSipTrunk)",
        "description": "Execute addSipTrunk AXL operation (addSipTrunk)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipTrunk` as the resource key (not `siptrunk`).\n    For example: `{ \"sipTrunk\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/siptrunk (getSipTrunk)",
        "description": "Returns all available siptrunk resources - Returns all available siptrunk resources (getSipTrunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siptrunk (removeSipTrunk)",
        "description": "Execute removeSipTrunk AXL operation (removeSipTrunk)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siptrunk (updateSipTrunk)",
        "description": "Execute updateSipTrunk AXL operation (updateSipTrunk)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofile": {
      "put": {
        "summary": "PUT /api/axl/siptrunksecurityprofile (addSipTrunkSecurityProfile)",
        "description": "Execute addSipTrunkSecurityProfile AXL operation (addSipTrunkSecurityProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sipTrunkSecurityProfile` as the resource key (not `siptrunksecurityprofile`).\n    For example: `{ \"sipTrunkSecurityProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/siptrunksecurityprofile (getSipTrunkSecurityProfile)",
        "description": "Returns all available siptrunksecurityprofile resources - Returns all available siptrunksecurityprofile resources (getSipTrunkSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siptrunksecurityprofile (removeSipTrunkSecurityProfile)",
        "description": "Execute removeSipTrunkSecurityProfile AXL operation (removeSipTrunkSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siptrunksecurityprofile (updateSipTrunkSecurityProfile)",
        "description": "Execute updateSipTrunkSecurityProfile AXL operation (updateSipTrunkSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpcommunitystring": {
      "put": {
        "summary": "PUT /api/axl/snmpcommunitystring (addSNMPCommunityString)",
        "description": "Execute addSNMPCommunityString AXL operation (addSNMPCommunityString)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sNMPCommunityString` as the resource key (not `snmpcommunitystring`).\n    For example: `{ \"sNMPCommunityString\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sNMPCommunityString": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/snmpcommunitystring (getSNMPCommunityString)",
        "description": "Returns all available snmpcommunitystring resources - Returns all available snmpcommunitystring resources (getSNMPCommunityString)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/snmpcommunitystring (removeSNMPCommunityString)",
        "description": "Execute removeSNMPCommunityString AXL operation (removeSNMPCommunityString)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpcommunitystring (updateSNMPCommunityString)",
        "description": "Execute updateSNMPCommunityString AXL operation (updateSNMPCommunityString)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpuser": {
      "put": {
        "summary": "PUT /api/axl/snmpuser (addSNMPUser)",
        "description": "Execute addSNMPUser AXL operation (addSNMPUser)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `sNMPUser` as the resource key (not `snmpuser`).\n    For example: `{ \"sNMPUser\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "sNMPUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/snmpuser (getSNMPUser)",
        "description": "Returns all available snmpuser resources - Returns all available snmpuser resources (getSNMPUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/snmpuser (removeSNMPUser)",
        "description": "Execute removeSNMPUser AXL operation (removeSNMPUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpuser (updateSNMPUser)",
        "description": "Execute updateSNMPUser AXL operation (updateSNMPUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplate": {
      "put": {
        "summary": "PUT /api/axl/softkeytemplate (addSoftKeyTemplate)",
        "description": "Execute addSoftKeyTemplate AXL operation (addSoftKeyTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `softKeyTemplate` as the resource key (not `softkeytemplate`).\n    For example: `{ \"softKeyTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "softKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/softkeytemplate (getSoftKeyTemplate)",
        "description": "Returns all available softkeytemplate resources - Returns all available softkeytemplate resources (getSoftKeyTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/softkeytemplate (removeSoftKeyTemplate)",
        "description": "Execute removeSoftKeyTemplate AXL operation (removeSoftKeyTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/softkeytemplate (updateSoftKeyTemplate)",
        "description": "Execute updateSoftKeyTemplate AXL operation (updateSoftKeyTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srst": {
      "put": {
        "summary": "PUT /api/axl/srst (addSrst)",
        "description": "Execute addSrst AXL operation (addSrst)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `srst` as the resource key (not `srst`).\n    For example: `{ \"srst\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addSrst operation.",
        "tags": [
          "srst"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "srst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/srst (getSrst)",
        "description": "Returns all available srst resources - Returns all available srst resources (getSrst)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSrst operation.",
        "tags": [
          "srst"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/srst (removeSrst)",
        "description": "Execute removeSrst AXL operation (removeSrst)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSrst operation.",
        "tags": [
          "srst"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/srst (updateSrst)",
        "description": "Execute updateSrst AXL operation (updateSrst)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSrst operation.",
        "tags": [
          "srst"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiod": {
      "put": {
        "summary": "PUT /api/axl/timeperiod (addTimePeriod)",
        "description": "Execute addTimePeriod AXL operation (addTimePeriod)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `timePeriod` as the resource key (not `timeperiod`).\n    For example: `{ \"timePeriod\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "timePeriod": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/timeperiod (getTimePeriod)",
        "description": "Returns all available timeperiod resources - Returns all available timeperiod resources (getTimePeriod)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/timeperiod (removeTimePeriod)",
        "description": "Execute removeTimePeriod AXL operation (removeTimePeriod)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/timeperiod (updateTimePeriod)",
        "description": "Execute updateTimePeriod AXL operation (updateTimePeriod)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedule": {
      "put": {
        "summary": "PUT /api/axl/timeschedule (addTimeSchedule)",
        "description": "Execute addTimeSchedule AXL operation (addTimeSchedule)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `timeSchedule` as the resource key (not `timeschedule`).\n    For example: `{ \"timeSchedule\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "timeSchedule": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/timeschedule (getTimeSchedule)",
        "description": "Returns all available timeschedule resources - Returns all available timeschedule resources (getTimeSchedule)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/timeschedule (removeTimeSchedule)",
        "description": "Execute removeTimeSchedule AXL operation (removeTimeSchedule)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/timeschedule (updateTimeSchedule)",
        "description": "Execute updateTimeSchedule AXL operation (updateTimeSchedule)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/todaccess": {
      "put": {
        "summary": "PUT /api/axl/todaccess (addTodAccess)",
        "description": "Execute addTodAccess AXL operation (addTodAccess)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `todAccess` as the resource key (not `todaccess`).\n    For example: `{ \"todAccess\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "todAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/todaccess (listTodAccess)",
        "description": "Returns all available todaccess resources - Returns all available todaccess resources (listTodAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/todaccess (removeTodAccess)",
        "description": "Execute removeTodAccess AXL operation (removeTodAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/todaccess (updateTodAccess)",
        "description": "Execute updateTodAccess AXL operation (updateTodAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoder": {
      "put": {
        "summary": "PUT /api/axl/transcoder (addTranscoder)",
        "description": "Execute addTranscoder AXL operation (addTranscoder)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `transcoder` as the resource key (not `transcoder`).\n    For example: `{ \"transcoder\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "transcoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/transcoder (getTranscoder)",
        "description": "Returns all available transcoder resources - Returns all available transcoder resources (getTranscoder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transcoder (removeTranscoder)",
        "description": "Execute removeTranscoder AXL operation (removeTranscoder)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transcoder (updateTranscoder)",
        "description": "Execute updateTranscoder AXL operation (updateTranscoder)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofile": {
      "put": {
        "summary": "PUT /api/axl/transformationprofile (addTransformationProfile)",
        "description": "Execute addTransformationProfile AXL operation (addTransformationProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `transformationProfile` as the resource key (not `transformationprofile`).\n    For example: `{ \"transformationProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "transformationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/transformationprofile (getTransformationProfile)",
        "description": "Returns all available transformationprofile resources - Returns all available transformationprofile resources (getTransformationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transformationprofile (removeTransformationProfile)",
        "description": "Execute removeTransformationProfile AXL operation (removeTransformationProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transformationprofile (updateTransformationProfile)",
        "description": "Execute updateTransformationProfile AXL operation (updateTransformationProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpattern": {
      "put": {
        "summary": "PUT /api/axl/transpattern (addTransPattern)",
        "description": "Execute addTransPattern AXL operation (addTransPattern)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `transPattern` as the resource key (not `transpattern`).\n    For example: `{ \"transPattern\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "transPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/transpattern (getTransPattern)",
        "description": "Returns all available transpattern resources - Returns all available transpattern resources (getTransPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transpattern (removeTransPattern)",
        "description": "Execute removeTransPattern AXL operation (removeTransPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transpattern (updateTransPattern)",
        "description": "Execute updateTransPattern AXL operation (updateTransPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservice": {
      "put": {
        "summary": "PUT /api/axl/ucservice (addUcService)",
        "description": "Execute addUcService AXL operation (addUcService)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `ucService` as the resource key (not `ucservice`).\n    For example: `{ \"ucService\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUcService operation.",
        "tags": [
          "ucservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "ucService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/ucservice (getUcService)",
        "description": "Returns all available ucservice resources - Returns all available ucservice resources (getUcService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUcService operation.",
        "tags": [
          "ucservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ucservice (removeUcService)",
        "description": "Execute removeUcService AXL operation (removeUcService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUcService operation.",
        "tags": [
          "ucservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ucservice (updateUcService)",
        "description": "Execute updateUcService AXL operation (updateUcService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUcService operation.",
        "tags": [
          "ucservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unitstogateway": {
      "put": {
        "summary": "PUT /api/axl/unitstogateway (addUnitsToGateway)",
        "description": "Execute addUnitsToGateway AXL operation (addUnitsToGateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `unitsToGateway` as the resource key (not `unitstogateway`).\n    For example: `{ \"unitsToGateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUnitsToGateway operation.",
        "tags": [
          "unitstogateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "unitsToGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/unitstogateway (removeUnitsToGateway)",
        "description": "Execute removeUnitsToGateway AXL operation (removeUnitsToGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUnitsToGateway operation.",
        "tags": [
          "unitstogateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplate": {
      "put": {
        "summary": "PUT /api/axl/universaldevicetemplate (addUniversalDeviceTemplate)",
        "description": "Execute addUniversalDeviceTemplate AXL operation (addUniversalDeviceTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `universalDeviceTemplate` as the resource key (not `universaldevicetemplate`).\n    For example: `{ \"universalDeviceTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "universalDeviceTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/universaldevicetemplate (getUniversalDeviceTemplate)",
        "description": "Returns all available universaldevicetemplate resources - Returns all available universaldevicetemplate resources (getUniversalDeviceTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/universaldevicetemplate (removeUniversalDeviceTemplate)",
        "description": "Execute removeUniversalDeviceTemplate AXL operation (removeUniversalDeviceTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/universaldevicetemplate (updateUniversalDeviceTemplate)",
        "description": "Execute updateUniversalDeviceTemplate AXL operation (updateUniversalDeviceTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplate": {
      "put": {
        "summary": "PUT /api/axl/universallinetemplate (addUniversalLineTemplate)",
        "description": "Execute addUniversalLineTemplate AXL operation (addUniversalLineTemplate)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `universalLineTemplate` as the resource key (not `universallinetemplate`).\n    For example: `{ \"universalLineTemplate\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "universalLineTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/universallinetemplate (getUniversalLineTemplate)",
        "description": "Returns all available universallinetemplate resources - Returns all available universallinetemplate resources (getUniversalLineTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/universallinetemplate (removeUniversalLineTemplate)",
        "description": "Execute removeUniversalLineTemplate AXL operation (removeUniversalLineTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/universallinetemplate (updateUniversalLineTemplate)",
        "description": "Execute updateUniversalLineTemplate AXL operation (updateUniversalLineTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/user": {
      "put": {
        "summary": "PUT /api/axl/user (addUser)",
        "description": "Execute addUser AXL operation (addUser)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `user` as the resource key (not `user`).\n    For example: `{ \"user\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUser operation.",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "user": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/user (getUser)",
        "description": "Returns all available user resources - Returns all available user resources (getUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUser operation.",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/user (removeUser)",
        "description": "Execute removeUser AXL operation (removeUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUser operation.",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/user (updateUser)",
        "description": "Execute updateUser AXL operation (updateUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUser operation.",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroup": {
      "put": {
        "summary": "PUT /api/axl/usergroup (addUserGroup)",
        "description": "Execute addUserGroup AXL operation (addUserGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `userGroup` as the resource key (not `usergroup`).\n    For example: `{ \"userGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "userGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/usergroup (getUserGroup)",
        "description": "Returns all available usergroup resources - Returns all available usergroup resources (getUserGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/usergroup (removeUserGroup)",
        "description": "Execute removeUserGroup AXL operation (removeUserGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/usergroup (updateUserGroup)",
        "description": "Execute updateUserGroup AXL operation (updateUserGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userphoneassociation": {
      "put": {
        "summary": "PUT /api/axl/userphoneassociation (addUserPhoneAssociation)",
        "description": "Execute addUserPhoneAssociation AXL operation (addUserPhoneAssociation)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `userPhoneAssociation` as the resource key (not `userphoneassociation`).\n    For example: `{ \"userPhoneAssociation\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUserPhoneAssociation operation.",
        "tags": [
          "userphoneassociation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "userPhoneAssociation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovision": {
      "put": {
        "summary": "PUT /api/axl/userprofileprovision (addUserProfileProvision)",
        "description": "Execute addUserProfileProvision AXL operation (addUserProfileProvision)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `userProfileProvision` as the resource key (not `userprofileprovision`).\n    For example: `{ \"userProfileProvision\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "userProfileProvision": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/userprofileprovision (getUserProfileProvision)",
        "description": "Returns all available userprofileprovision resources - Returns all available userprofileprovision resources (getUserProfileProvision)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/userprofileprovision (removeUserProfileProvision)",
        "description": "Execute removeUserProfileProvision AXL operation (removeUserProfileProvision)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/userprofileprovision (updateUserProfileProvision)",
        "description": "Execute updateUserProfileProvision AXL operation (updateUserProfileProvision)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vg224": {
      "put": {
        "summary": "PUT /api/axl/vg224 (addVg224)",
        "description": "Execute addVg224 AXL operation (addVg224)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `vg224` as the resource key (not `vg224`).\n    For example: `{ \"vg224\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVg224 operation.",
        "tags": [
          "vg224"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "vg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/vg224 (getVg224)",
        "description": "Returns all available vg224 resources - Returns all available vg224 resources (getVg224)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVg224 operation.",
        "tags": [
          "vg224"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vg224 (removeVg224)",
        "description": "Execute removeVg224 AXL operation (removeVg224)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVg224 operation.",
        "tags": [
          "vg224"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vg224 (updateVg224)",
        "description": "Execute updateVg224 AXL operation (updateVg224)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVg224 operation.",
        "tags": [
          "vg224"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohserver": {
      "put": {
        "summary": "PUT /api/axl/vohserver (addVohServer)",
        "description": "Execute addVohServer AXL operation (addVohServer)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `vohServer` as the resource key (not `vohserver`).\n    For example: `{ \"vohServer\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "vohServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/vohserver (getVohServer)",
        "description": "Returns all available vohserver resources - Returns all available vohserver resources (getVohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vohserver (removeVohServer)",
        "description": "Execute removeVohServer AXL operation (removeVohServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vohserver (updateVohServer)",
        "description": "Execute updateVohServer AXL operation (updateVohServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilot": {
      "put": {
        "summary": "PUT /api/axl/voicemailpilot (addVoiceMailPilot)",
        "description": "Execute addVoiceMailPilot AXL operation (addVoiceMailPilot)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `voiceMailPilot` as the resource key (not `voicemailpilot`).\n    For example: `{ \"voiceMailPilot\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "voiceMailPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/voicemailpilot (getVoiceMailPilot)",
        "description": "Returns all available voicemailpilot resources - Returns all available voicemailpilot resources (getVoiceMailPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailpilot (removeVoiceMailPilot)",
        "description": "Execute removeVoiceMailPilot AXL operation (removeVoiceMailPilot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailpilot (updateVoiceMailPilot)",
        "description": "Execute updateVoiceMailPilot AXL operation (updateVoiceMailPilot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailport": {
      "put": {
        "summary": "PUT /api/axl/voicemailport (addVoiceMailPort)",
        "description": "Execute addVoiceMailPort AXL operation (addVoiceMailPort)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `voiceMailPort` as the resource key (not `voicemailport`).\n    For example: `{ \"voiceMailPort\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "voiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/voicemailport (getVoiceMailPort)",
        "description": "Returns all available voicemailport resources - Returns all available voicemailport resources (getVoiceMailPort)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailport (removeVoiceMailPort)",
        "description": "Execute removeVoiceMailPort AXL operation (removeVoiceMailPort)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailport (updateVoiceMailPort)",
        "description": "Execute updateVoiceMailPort AXL operation (updateVoiceMailPort)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofile": {
      "put": {
        "summary": "PUT /api/axl/voicemailprofile (addVoiceMailProfile)",
        "description": "Execute addVoiceMailProfile AXL operation (addVoiceMailProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `voiceMailProfile` as the resource key (not `voicemailprofile`).\n    For example: `{ \"voiceMailProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "voiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/voicemailprofile (getVoiceMailProfile)",
        "description": "Returns all available voicemailprofile resources - Returns all available voicemailprofile resources (getVoiceMailProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailprofile (removeVoiceMailProfile)",
        "description": "Execute removeVoiceMailProfile AXL operation (removeVoiceMailProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailprofile (updateVoiceMailProfile)",
        "description": "Execute updateVoiceMailProfile AXL operation (updateVoiceMailProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateway": {
      "put": {
        "summary": "PUT /api/axl/vpngateway (addVpnGateway)",
        "description": "Execute addVpnGateway AXL operation (addVpnGateway)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `vpnGateway` as the resource key (not `vpngateway`).\n    For example: `{ \"vpnGateway\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "vpnGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/vpngateway (getVpnGateway)",
        "description": "Returns all available vpngateway resources - Returns all available vpngateway resources (getVpnGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpngateway (removeVpnGateway)",
        "description": "Execute removeVpnGateway AXL operation (removeVpnGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpngateway (updateVpnGateway)",
        "description": "Execute updateVpnGateway AXL operation (updateVpnGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroup": {
      "put": {
        "summary": "PUT /api/axl/vpngroup (addVpnGroup)",
        "description": "Execute addVpnGroup AXL operation (addVpnGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `vpnGroup` as the resource key (not `vpngroup`).\n    For example: `{ \"vpnGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "vpnGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/vpngroup (getVpnGroup)",
        "description": "Returns all available vpngroup resources - Returns all available vpngroup resources (getVpnGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpngroup (removeVpnGroup)",
        "description": "Execute removeVpnGroup AXL operation (removeVpnGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpngroup (updateVpnGroup)",
        "description": "Execute updateVpnGroup AXL operation (updateVpnGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofile": {
      "put": {
        "summary": "PUT /api/axl/vpnprofile (addVpnProfile)",
        "description": "Execute addVpnProfile AXL operation (addVpnProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `vpnProfile` as the resource key (not `vpnprofile`).\n    For example: `{ \"vpnProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "vpnProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/vpnprofile (getVpnProfile)",
        "description": "Returns all available vpnprofile resources - Returns all available vpnprofile resources (getVpnProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpnprofile (removeVpnProfile)",
        "description": "Execute removeVpnProfile AXL operation (removeVpnProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpnprofile (updateVpnProfile)",
        "description": "Execute updateVpnProfile AXL operation (updateVpnProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspot": {
      "put": {
        "summary": "PUT /api/axl/wifihotspot (addWifiHotspot)",
        "description": "Execute addWifiHotspot AXL operation (addWifiHotspot)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `wifiHotspot` as the resource key (not `wifihotspot`).\n    For example: `{ \"wifiHotspot\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "wifiHotspot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/wifihotspot (getWifiHotspot)",
        "description": "Returns all available wifihotspot resources - Returns all available wifihotspot resources (getWifiHotspot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wifihotspot (removeWifiHotspot)",
        "description": "Execute removeWifiHotspot AXL operation (removeWifiHotspot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wifihotspot (updateWifiHotspot)",
        "description": "Execute updateWifiHotspot AXL operation (updateWifiHotspot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wirelessaccesspointcontrollers": {
      "put": {
        "summary": "PUT /api/axl/wirelessaccesspointcontrollers (addWirelessAccessPointControllers)",
        "description": "Execute addWirelessAccessPointControllers AXL operation (addWirelessAccessPointControllers)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `wirelessAccessPointControllers` as the resource key (not `wirelessaccesspointcontrollers`).\n    For example: `{ \"wirelessAccessPointControllers\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "wirelessAccessPointControllers": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/wirelessaccesspointcontrollers (listWirelessAccessPointControllers)",
        "description": "Returns all available wirelessaccesspointcontrollers resources - Returns all available wirelessaccesspointcontrollers resources (listWirelessAccessPointControllers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wirelessaccesspointcontrollers (removeWirelessAccessPointControllers)",
        "description": "Execute removeWirelessAccessPointControllers AXL operation (removeWirelessAccessPointControllers)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wirelessaccesspointcontrollers (updateWirelessAccessPointControllers)",
        "description": "Execute updateWirelessAccessPointControllers AXL operation (updateWirelessAccessPointControllers)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofile": {
      "put": {
        "summary": "PUT /api/axl/wlanprofile (addWLANProfile)",
        "description": "Execute addWLANProfile AXL operation (addWLANProfile)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `wLANProfile` as the resource key (not `wlanprofile`).\n    For example: `{ \"wLANProfile\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "wLANProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/wlanprofile (getWLANProfile)",
        "description": "Returns all available wlanprofile resources - Returns all available wlanprofile resources (getWLANProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wlanprofile (removeWLANProfile)",
        "description": "Execute removeWLANProfile AXL operation (removeWLANProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wlanprofile (updateWLANProfile)",
        "description": "Execute updateWLANProfile AXL operation (updateWLANProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroup": {
      "put": {
        "summary": "PUT /api/axl/wlanprofilegroup (addWlanProfileGroup)",
        "description": "Execute addWlanProfileGroup AXL operation (addWlanProfileGroup)\n\n**IMPORTANT - Case-Sensitive Resource Names:** For add operations (PUT), you must use the exact camelCase resource wrapper.\n    For this endpoint, use `wlanProfileGroup` as the resource key (not `wlanprofilegroup`).\n    For example: `{ \"wlanProfileGroup\": { \"name\": \"Example\" } }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the addWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With resource wrapper (required) [Generic]",
                  "description": "For add operations, you must use the resource wrapper with exact camelCase",
                  "value": {
                    "wlanProfileGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "GET /api/axl/wlanprofilegroup (getWlanProfileGroup)",
        "description": "Returns all available wlanprofilegroup resources - Returns all available wlanprofilegroup resources (getWlanProfileGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wlanprofilegroup (removeWlanProfileGroup)",
        "description": "Execute removeWlanProfileGroup AXL operation (removeWlanProfileGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wlanprofilegroup (updateWlanProfileGroup)",
        "description": "Execute updateWlanProfileGroup AXL operation (updateWlanProfileGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycallmanager": {
      "post": {
        "summary": "POST /api/axl/applycallmanager (applyCallManager)",
        "description": "Execute applyCallManager AXL operation (applyCallManager)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCallManager operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycallmanagergroup": {
      "post": {
        "summary": "POST /api/axl/applycallmanagergroup (applyCallManagerGroup)",
        "description": "Execute applyCallManagerGroup AXL operation (applyCallManagerGroup)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCallManagerGroup operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "POST /api/axl/applyciscocatalyst6000e1voipgateway (applyCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute applyCiscoCatalyst6000E1VoIPGateway AXL operation (applyCiscoCatalyst6000E1VoIPGateway)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "POST /api/axl/applyciscocatalyst6000t1voipgatewaypri (applyCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute applyCiscoCatalyst6000T1VoIPGatewayPri AXL operation (applyCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "POST /api/axl/applyciscocatalyst6000t1voipgatewayt1 (applyCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute applyCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (applyCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "POST /api/axl/applyciscocatalyst600024portfxsgateway (applyCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute applyCiscoCatalyst600024PortFXSGateway AXL operation (applyCiscoCatalyst600024PortFXSGateway)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycommondeviceconfig": {
      "post": {
        "summary": "POST /api/axl/applycommondeviceconfig (applyCommonDeviceConfig)",
        "description": "Execute applyCommonDeviceConfig AXL operation (applyCommonDeviceConfig)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCommonDeviceConfig operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycommonphoneconfig": {
      "post": {
        "summary": "POST /api/axl/applycommonphoneconfig (applyCommonPhoneConfig)",
        "description": "Execute applyCommonPhoneConfig AXL operation (applyCommonPhoneConfig)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCommonPhoneConfig operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyconferencebridge": {
      "post": {
        "summary": "POST /api/axl/applyconferencebridge (applyConferenceBridge)",
        "description": "Execute applyConferenceBridge AXL operation (applyConferenceBridge)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyConferenceBridge operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyconfigenterpriseparameters": {
      "post": {
        "summary": "POST /api/axl/applyconfigenterpriseparameters (applyConfigEnterpriseParameters)",
        "description": "Execute applyConfigEnterpriseParameters AXL operation (applyConfigEnterpriseParameters)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyConfigEnterpriseParameters operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyctiroutepoint": {
      "post": {
        "summary": "POST /api/axl/applyctiroutepoint (applyCtiRoutePoint)",
        "description": "Execute applyCtiRoutePoint AXL operation (applyCtiRoutePoint)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyCtiRoutePoint operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydatetimegroup": {
      "post": {
        "summary": "POST /api/axl/applydatetimegroup (applyDateTimeGroup)",
        "description": "Execute applyDateTimeGroup AXL operation (applyDateTimeGroup)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyDateTimeGroup operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydevicepool": {
      "post": {
        "summary": "POST /api/axl/applydevicepool (applyDevicePool)",
        "description": "Execute applyDevicePool AXL operation (applyDevicePool)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyDevicePool operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydirectedcallpark": {
      "post": {
        "summary": "POST /api/axl/applydirectedcallpark (applyDirectedCallPark)",
        "description": "Execute applyDirectedCallPark AXL operation (applyDirectedCallPark)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyDirectedCallPark operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applygatekeeper": {
      "post": {
        "summary": "POST /api/axl/applygatekeeper (applyGatekeeper)",
        "description": "Execute applyGatekeeper AXL operation (applyGatekeeper)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyGatekeeper operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applygateway": {
      "post": {
        "summary": "POST /api/axl/applygateway (applyGateway)",
        "description": "Execute applyGateway AXL operation (applyGateway)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyGateway operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyh323gateway": {
      "post": {
        "summary": "POST /api/axl/applyh323gateway (applyH323Gateway)",
        "description": "Execute applyH323Gateway AXL operation (applyH323Gateway)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyH323Gateway operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyh323phone": {
      "post": {
        "summary": "POST /api/axl/applyh323phone (applyH323Phone)",
        "description": "Execute applyH323Phone AXL operation (applyH323Phone)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyH323Phone operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyhuntlist": {
      "post": {
        "summary": "POST /api/axl/applyhuntlist (applyHuntList)",
        "description": "Execute applyHuntList AXL operation (applyHuntList)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyHuntList operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyline": {
      "post": {
        "summary": "POST /api/axl/applyline (applyLine)",
        "description": "Execute applyLine AXL operation (applyLine)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyLine operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applymtp": {
      "post": {
        "summary": "POST /api/axl/applymtp (applyMtp)",
        "description": "Execute applyMtp AXL operation (applyMtp)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyMtp operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphone": {
      "post": {
        "summary": "POST /api/axl/applyphone (applyPhone)",
        "description": "Execute applyPhone AXL operation (applyPhone)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyPhone operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphonebuttontemplate": {
      "post": {
        "summary": "POST /api/axl/applyphonebuttontemplate (applyPhoneButtonTemplate)",
        "description": "Execute applyPhoneButtonTemplate AXL operation (applyPhoneButtonTemplate)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyPhoneButtonTemplate operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphonesecurityprofile": {
      "post": {
        "summary": "POST /api/axl/applyphonesecurityprofile (applyPhoneSecurityProfile)",
        "description": "Execute applyPhoneSecurityProfile AXL operation (applyPhoneSecurityProfile)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyPhoneSecurityProfile operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyregion": {
      "post": {
        "summary": "POST /api/axl/applyregion (applyRegion)",
        "description": "Execute applyRegion AXL operation (applyRegion)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyRegion operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyresourceprioritynamespace": {
      "post": {
        "summary": "POST /api/axl/applyresourceprioritynamespace (applyResourcePriorityNamespace)",
        "description": "Execute applyResourcePriorityNamespace AXL operation (applyResourcePriorityNamespace)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyResourcePriorityNamespace operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyresourceprioritynamespacelist": {
      "post": {
        "summary": "POST /api/axl/applyresourceprioritynamespacelist (applyResourcePriorityNamespaceList)",
        "description": "Execute applyResourcePriorityNamespaceList AXL operation (applyResourcePriorityNamespaceList)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyResourcePriorityNamespaceList operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyroutelist": {
      "post": {
        "summary": "POST /api/axl/applyroutelist (applyRouteList)",
        "description": "Execute applyRouteList AXL operation (applyRouteList)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyRouteList operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyroutepartition": {
      "post": {
        "summary": "POST /api/axl/applyroutepartition (applyRoutePartition)",
        "description": "Execute applyRoutePartition AXL operation (applyRoutePartition)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyRoutePartition operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysipprofile": {
      "post": {
        "summary": "POST /api/axl/applysipprofile (applySipProfile)",
        "description": "Execute applySipProfile AXL operation (applySipProfile)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applySipProfile operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysiptrunksecurityprofile": {
      "post": {
        "summary": "POST /api/axl/applysiptrunksecurityprofile (applySipTrunkSecurityProfile)",
        "description": "Execute applySipTrunkSecurityProfile AXL operation (applySipTrunkSecurityProfile)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applySipTrunkSecurityProfile operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysoftkeytemplate": {
      "post": {
        "summary": "POST /api/axl/applysoftkeytemplate (applySoftKeyTemplate)",
        "description": "Execute applySoftKeyTemplate AXL operation (applySoftKeyTemplate)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applySoftKeyTemplate operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysrst": {
      "post": {
        "summary": "POST /api/axl/applysrst (applySrst)",
        "description": "Execute applySrst AXL operation (applySrst)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applySrst operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applytranscoder": {
      "post": {
        "summary": "POST /api/axl/applytranscoder (applyTranscoder)",
        "description": "Execute applyTranscoder AXL operation (applyTranscoder)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyTranscoder operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyucservice": {
      "post": {
        "summary": "POST /api/axl/applyucservice (applyUcService)",
        "description": "Execute applyUcService AXL operation (applyUcService)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyUcService operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyvoicemailport": {
      "post": {
        "summary": "POST /api/axl/applyvoicemailport (applyVoiceMailPort)",
        "description": "Execute applyVoiceMailPort AXL operation (applyVoiceMailPort)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyVoiceMailPort operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyvoicemailprofile": {
      "post": {
        "summary": "POST /api/axl/applyvoicemailprofile (applyVoiceMailProfile)",
        "description": "Execute applyVoiceMailProfile AXL operation (applyVoiceMailProfile)\n\n**Apply Resource:** For apply operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to apply\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the applyVoiceMailProfile operation.",
        "tags": [
          "apply"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Apply by Name",
                  "description": "Provide the name for apply operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Apply by UUID",
                  "description": "UUID is the most reliable identifier for apply operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignpresenceuser": {
      "post": {
        "summary": "POST /api/axl/assignpresenceuser (assignPresenceUser)",
        "description": "Execute assignPresenceUser AXL operation (assignPresenceUser)",
        "tags": [
          "assignpresenceuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doauthenticateuser": {
      "post": {
        "summary": "POST /api/axl/doauthenticateuser (doAuthenticateUser)",
        "description": "Execute doAuthenticateUser AXL operation (doAuthenticateUser)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doAuthenticateUser operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dochangedndstatus": {
      "post": {
        "summary": "POST /api/axl/dochangedndstatus (doChangeDNDStatus)",
        "description": "Execute doChangeDNDStatus AXL operation (doChangeDNDStatus)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doChangeDNDStatus operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicelogin": {
      "post": {
        "summary": "POST /api/axl/dodevicelogin (doDeviceLogin)",
        "description": "Execute doDeviceLogin AXL operation (doDeviceLogin)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doDeviceLogin operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicelogout": {
      "post": {
        "summary": "POST /api/axl/dodevicelogout (doDeviceLogout)",
        "description": "Execute doDeviceLogout AXL operation (doDeviceLogout)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doDeviceLogout operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicereset": {
      "post": {
        "summary": "POST /api/axl/dodevicereset (doDeviceReset)",
        "description": "Execute doDeviceReset AXL operation (doDeviceReset)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doDeviceReset operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doenterpriseparametersreset": {
      "post": {
        "summary": "POST /api/axl/doenterpriseparametersreset (doEnterpriseParametersReset)",
        "description": "Execute doEnterpriseParametersReset AXL operation (doEnterpriseParametersReset)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doEnterpriseParametersReset operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doldapsync": {
      "post": {
        "summary": "POST /api/axl/doldapsync (doLdapSync)",
        "description": "Execute doLdapSync AXL operation (doLdapSync)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doLdapSync operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doserviceparametersreset": {
      "post": {
        "summary": "POST /api/axl/doserviceparametersreset (doServiceParametersReset)",
        "description": "Execute doServiceParametersReset AXL operation (doServiceParametersReset)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doServiceParametersReset operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartentitlementrequest": {
      "post": {
        "summary": "POST /api/axl/dosmartentitlementrequest (doSmartEntitlementRequest)",
        "description": "Execute doSmartEntitlementRequest AXL operation (doSmartEntitlementRequest)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartEntitlementRequest operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicensederegister": {
      "post": {
        "summary": "POST /api/axl/dosmartlicensederegister (doSmartLicenseDeRegister)",
        "description": "Execute doSmartLicenseDeRegister AXL operation (doSmartLicenseDeRegister)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartLicenseDeRegister operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenseregister": {
      "post": {
        "summary": "POST /api/axl/dosmartlicenseregister (doSmartLicenseRegister)",
        "description": "Execute doSmartLicenseRegister AXL operation (doSmartLicenseRegister)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartLicenseRegister operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenserenewauthorization": {
      "post": {
        "summary": "POST /api/axl/dosmartlicenserenewauthorization (doSmartLicenseRenewAuthorization)",
        "description": "Execute doSmartLicenseRenewAuthorization AXL operation (doSmartLicenseRenewAuthorization)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartLicenseRenewAuthorization operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenserenewregistration": {
      "post": {
        "summary": "POST /api/axl/dosmartlicenserenewregistration (doSmartLicenseRenewRegistration)",
        "description": "Execute doSmartLicenseRenewRegistration AXL operation (doSmartLicenseRenewRegistration)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartLicenseRenewRegistration operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicensereregister": {
      "post": {
        "summary": "POST /api/axl/dosmartlicensereregister (doSmartLicenseReRegister)",
        "description": "Execute doSmartLicenseReRegister AXL operation (doSmartLicenseReRegister)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doSmartLicenseReRegister operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdatelicenseusage": {
      "post": {
        "summary": "POST /api/axl/doupdatelicenseusage (doUpdateLicenseUsage)",
        "description": "Execute doUpdateLicenseUsage AXL operation (doUpdateLicenseUsage)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doUpdateLicenseUsage operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdateremotecluster": {
      "post": {
        "summary": "POST /api/axl/doupdateremotecluster (doUpdateRemoteCluster)",
        "description": "Execute doUpdateRemoteCluster AXL operation (doUpdateRemoteCluster)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doUpdateRemoteCluster operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdatetransportsettings": {
      "post": {
        "summary": "POST /api/axl/doupdatetransportsettings (doUpdateTransportSettings)",
        "description": "Execute doUpdateTransportSettings AXL operation (doUpdateTransportSettings)\n\n**Do Resource:** For do operations:\n      - Some operations may work with an empty request body: `{}`\n      - Others may require identifiers at the root level: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }`\n      - Additional parameters can be included at the root level (like loginDuration for doDeviceLogin)\n      - No nesting or wrapper objects - all properties must be at the root level\n      - The API will return appropriate error messages if the request format is incorrect\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the doUpdateTransportSettings operation.",
        "tags": [
          "do"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Do by Name",
                  "description": "Provide the name for do operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Do by UUID",
                  "description": "UUID is the most reliable identifier for do operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                },
                "example3": {
                  "summary": "Empty request body",
                  "description": "Some do operations can be called with an empty request body (refer to AXL documentation for details)",
                  "value": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlquery": {
      "post": {
        "summary": "POST /api/axl/executesqlquery (executeSQLQuery)",
        "description": "Execute executeSQLQuery AXL operation (executeSQLQuery)",
        "tags": [
          "executesqlquery"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlqueryinactive": {
      "post": {
        "summary": "POST /api/axl/executesqlqueryinactive (executeSQLQueryInactive)",
        "description": "Execute executeSQLQueryInactive AXL operation (executeSQLQueryInactive)",
        "tags": [
          "executesqlqueryinactive"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlupdate": {
      "post": {
        "summary": "POST /api/axl/executesqlupdate (executeSQLUpdate)",
        "description": "Execute executeSQLUpdate AXL operation (executeSQLUpdate)",
        "tags": [
          "executesqlupdate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/aargroup/{parameter}/{value} (getAarGroup)",
        "description": "Filter aargroup resources by specified parameter type and value (getAarGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/aargroup/{parameter}/{value} (removeAarGroup)",
        "description": "Filter aargroup resources by specified parameter type and value (removeAarGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/aargroup/{parameter}/{value} (updateAarGroup)",
        "description": "Filter aargroup resources by specified parameter type and value (updateAarGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/advertisedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/advertisedpatterns/{parameter}/{value} (listAdvertisedPatterns)",
        "description": "Filter advertisedpatterns resources by specified parameter type and value (listAdvertisedPatterns)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/advertisedpatterns/{parameter}/{value} (removeAdvertisedPatterns)",
        "description": "Filter advertisedpatterns resources by specified parameter type and value (removeAdvertisedPatterns)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/advertisedpatterns/{parameter}/{value} (updateAdvertisedPatterns)",
        "description": "Filter advertisedpatterns resources by specified parameter type and value (updateAdvertisedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAdvertisedPatterns operation.",
        "tags": [
          "advertisedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcement/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/announcement/{parameter}/{value} (getAnnouncement)",
        "description": "Filter announcement resources by specified parameter type and value (getAnnouncement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/announcement/{parameter}/{value} (removeAnnouncement)",
        "description": "Filter announcement resources by specified parameter type and value (removeAnnouncement)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/announcement/{parameter}/{value} (updateAnnouncement)",
        "description": "Filter announcement resources by specified parameter type and value (updateAnnouncement)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciator": {
      "get": {
        "summary": "GET /api/axl/annunciator (getAnnunciator)",
        "description": "Returns all available annunciator resources - Returns all available annunciator resources (getAnnunciator)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/annunciator (updateAnnunciator)",
        "description": "Execute updateAnnunciator AXL operation (updateAnnunciator)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciator/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/annunciator/{parameter}/{value} (getAnnunciator)",
        "description": "Filter annunciator resources by specified parameter type and value (getAnnunciator)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/annunciator/{parameter}/{value} (updateAnnunciator)",
        "description": "Filter annunciator resources by specified parameter type and value (updateAnnunciator)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationdialrules/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/applicationdialrules/{parameter}/{value} (listApplicationDialRules)",
        "description": "Filter applicationdialrules resources by specified parameter type and value (listApplicationDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationdialrules/{parameter}/{value} (removeApplicationDialRules)",
        "description": "Filter applicationdialrules resources by specified parameter type and value (removeApplicationDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationdialrules/{parameter}/{value} (updateApplicationDialRules)",
        "description": "Filter applicationdialrules resources by specified parameter type and value (updateApplicationDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationDialRules operation.",
        "tags": [
          "applicationdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/applicationserver/{parameter}/{value} (getApplicationServer)",
        "description": "Filter applicationserver resources by specified parameter type and value (getApplicationServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationserver/{parameter}/{value} (removeApplicationServer)",
        "description": "Filter applicationserver resources by specified parameter type and value (removeApplicationServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationserver/{parameter}/{value} (updateApplicationServer)",
        "description": "Filter applicationserver resources by specified parameter type and value (updateApplicationServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/applicationusercapfprofile/{parameter}/{value} (getApplicationUserCapfProfile)",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value (getApplicationUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/applicationusercapfprofile/{parameter}/{value} (removeApplicationUserCapfProfile)",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value (removeApplicationUserCapfProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/applicationusercapfprofile/{parameter}/{value} (updateApplicationUserCapfProfile)",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value (updateApplicationUserCapfProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appserverinfo/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/appserverinfo/{parameter}/{value} (getAppServerInfo)",
        "description": "Filter appserverinfo resources by specified parameter type and value (getAppServerInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/appserverinfo/{parameter}/{value} (removeAppServerInfo)",
        "description": "Filter appserverinfo resources by specified parameter type and value (removeAppServerInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/appserverinfo/{parameter}/{value} (updateAppServerInfo)",
        "description": "Filter appserverinfo resources by specified parameter type and value (updateAppServerInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAppServerInfo operation.",
        "tags": [
          "appserverinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appuser/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/appuser/{parameter}/{value} (getAppUser)",
        "description": "Filter appuser resources by specified parameter type and value (getAppUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAppUser operation.",
        "tags": [
          "appuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/appuser/{parameter}/{value} (removeAppUser)",
        "description": "Filter appuser resources by specified parameter type and value (removeAppUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAppUser operation.",
        "tags": [
          "appuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/appuser/{parameter}/{value} (updateAppUser)",
        "description": "Filter appuser resources by specified parameter type and value (updateAppUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAppUser operation.",
        "tags": [
          "appuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/audiocodecpreferencelist/{parameter}/{value} (getAudioCodecPreferenceList)",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value (getAudioCodecPreferenceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/audiocodecpreferencelist/{parameter}/{value} (removeAudioCodecPreferenceList)",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value (removeAudioCodecPreferenceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/audiocodecpreferencelist/{parameter}/{value} (updateAudioCodecPreferenceList)",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value (updateAudioCodecPreferenceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/billingserver/{parameter}/{value} (getBillingServer)",
        "description": "Filter billingserver resources by specified parameter type and value (getBillingServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/billingserver/{parameter}/{value} (removeBillingServer)",
        "description": "Filter billingserver resources by specified parameter type and value (removeBillingServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/billingserver/{parameter}/{value} (updateBillingServer)",
        "description": "Filter billingserver resources by specified parameter type and value (updateBillingServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/blockedlearnedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/blockedlearnedpatterns/{parameter}/{value} (listBlockedLearnedPatterns)",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value (listBlockedLearnedPatterns)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/blockedlearnedpatterns/{parameter}/{value} (removeBlockedLearnedPatterns)",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value (removeBlockedLearnedPatterns)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/blockedlearnedpatterns/{parameter}/{value} (updateBlockedLearnedPatterns)",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value (updateBlockedLearnedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateBlockedLearnedPatterns operation.",
        "tags": [
          "blockedlearnedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/calledpartytransformationpattern/{parameter}/{value} (getCalledPartyTransformationPattern)",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value (getCalledPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/calledpartytransformationpattern/{parameter}/{value} (removeCalledPartyTransformationPattern)",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value (removeCalledPartyTransformationPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/calledpartytransformationpattern/{parameter}/{value} (updateCalledPartyTransformationPattern)",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value (updateCalledPartyTransformationPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callerfilterlist/{parameter}/{value} (getCallerFilterList)",
        "description": "Filter callerfilterlist resources by specified parameter type and value (getCallerFilterList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callerfilterlist/{parameter}/{value} (removeCallerFilterList)",
        "description": "Filter callerfilterlist resources by specified parameter type and value (removeCallerFilterList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callerfilterlist/{parameter}/{value} (updateCallerFilterList)",
        "description": "Filter callerfilterlist resources by specified parameter type and value (updateCallerFilterList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callingpartytransformationpattern/{parameter}/{value} (getCallingPartyTransformationPattern)",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value (getCallingPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callingpartytransformationpattern/{parameter}/{value} (removeCallingPartyTransformationPattern)",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value (removeCallingPartyTransformationPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callingpartytransformationpattern/{parameter}/{value} (updateCallingPartyTransformationPattern)",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value (updateCallingPartyTransformationPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanager": {
      "get": {
        "summary": "GET /api/axl/callmanager (getCallManager)",
        "description": "Returns all available callmanager resources - Returns all available callmanager resources (getCallManager)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callmanager (updateCallManager)",
        "description": "Execute updateCallManager AXL operation (updateCallManager)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanager/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callmanager/{parameter}/{value} (getCallManager)",
        "description": "Filter callmanager resources by specified parameter type and value (getCallManager)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callmanager/{parameter}/{value} (updateCallManager)",
        "description": "Filter callmanager resources by specified parameter type and value (updateCallManager)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callmanagergroup/{parameter}/{value} (getCallManagerGroup)",
        "description": "Filter callmanagergroup resources by specified parameter type and value (getCallManagerGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callmanagergroup/{parameter}/{value} (removeCallManagerGroup)",
        "description": "Filter callmanagergroup resources by specified parameter type and value (removeCallManagerGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callmanagergroup/{parameter}/{value} (updateCallManagerGroup)",
        "description": "Filter callmanagergroup resources by specified parameter type and value (updateCallManagerGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpark/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callpark/{parameter}/{value} (getCallPark)",
        "description": "Filter callpark resources by specified parameter type and value (getCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallPark operation.",
        "tags": [
          "callpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callpark/{parameter}/{value} (removeCallPark)",
        "description": "Filter callpark resources by specified parameter type and value (removeCallPark)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallPark operation.",
        "tags": [
          "callpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callpark/{parameter}/{value} (updateCallPark)",
        "description": "Filter callpark resources by specified parameter type and value (updateCallPark)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallPark operation.",
        "tags": [
          "callpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callpickupgroup/{parameter}/{value} (getCallPickupGroup)",
        "description": "Filter callpickupgroup resources by specified parameter type and value (getCallPickupGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/callpickupgroup/{parameter}/{value} (removeCallPickupGroup)",
        "description": "Filter callpickupgroup resources by specified parameter type and value (removeCallPickupGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/callpickupgroup/{parameter}/{value} (updateCallPickupGroup)",
        "description": "Filter callpickupgroup resources by specified parameter type and value (updateCallPickupGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccaprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccaprofiles/{parameter}/{value} (listCCAProfiles)",
        "description": "Filter ccaprofiles resources by specified parameter type and value (listCCAProfiles)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccaprofiles/{parameter}/{value} (removeCCAProfiles)",
        "description": "Filter ccaprofiles resources by specified parameter type and value (removeCCAProfiles)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccaprofiles/{parameter}/{value} (updateCCAProfiles)",
        "description": "Filter ccaprofiles resources by specified parameter type and value (updateCCAProfiles)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCCAProfiles operation.",
        "tags": [
          "ccaprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservice/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdadvertisingservice/{parameter}/{value} (getCcdAdvertisingService)",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value (getCcdAdvertisingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdadvertisingservice/{parameter}/{value} (removeCcdAdvertisingService)",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value (removeCcdAdvertisingService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdadvertisingservice/{parameter}/{value} (updateCcdAdvertisingService)",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value (updateCcdAdvertisingService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdfeatureconfig": {
      "get": {
        "summary": "GET /api/axl/ccdfeatureconfig (getCcdFeatureConfig)",
        "description": "Returns all available ccdfeatureconfig resources - Returns all available ccdfeatureconfig resources (getCcdFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdFeatureConfig operation.",
        "tags": [
          "ccdfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdfeatureconfig (updateCcdFeatureConfig)",
        "description": "Execute updateCcdFeatureConfig AXL operation (updateCcdFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdFeatureConfig operation.",
        "tags": [
          "ccdfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdfeatureconfig/{parameter}/{value} (getCcdFeatureConfig)",
        "description": "Filter ccdfeatureconfig resources by specified parameter type and value (getCcdFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdFeatureConfig operation.",
        "tags": [
          "ccdfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdfeatureconfig/{parameter}/{value} (updateCcdFeatureConfig)",
        "description": "Filter ccdfeatureconfig resources by specified parameter type and value (updateCcdFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdFeatureConfig operation.",
        "tags": [
          "ccdfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddn/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddn/{parameter}/{value} (getCcdHostedDN)",
        "description": "Filter ccdhosteddn resources by specified parameter type and value (getCcdHostedDN)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdhosteddn/{parameter}/{value} (removeCcdHostedDN)",
        "description": "Filter ccdhosteddn resources by specified parameter type and value (removeCcdHostedDN)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdhosteddn/{parameter}/{value} (updateCcdHostedDN)",
        "description": "Filter ccdhosteddn resources by specified parameter type and value (updateCcdHostedDN)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddngroup/{parameter}/{value} (getCcdHostedDNGroup)",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value (getCcdHostedDNGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdhosteddngroup/{parameter}/{value} (removeCcdHostedDNGroup)",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value (removeCcdHostedDNGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdhosteddngroup/{parameter}/{value} (updateCcdHostedDNGroup)",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value (updateCcdHostedDNGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdrequestingservice/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdrequestingservice/{parameter}/{value} (getCcdRequestingService)",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value (getCcdRequestingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ccdrequestingservice/{parameter}/{value} (removeCcdRequestingService)",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value (removeCcdRequestingService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ccdrequestingservice/{parameter}/{value} (updateCcdRequestingService)",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value (updateCcdRequestingService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCcdRequestingService operation.",
        "tags": [
          "ccdrequestingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccmversion": {
      "get": {
        "summary": "GET /api/axl/ccmversion (getCCMVersion)",
        "description": "Returns all available ccmversion resources - Returns all available ccmversion resources (getCCMVersion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCCMVersion operation.",
        "tags": [
          "ccmversion"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccmversion/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccmversion/{parameter}/{value} (getCCMVersion)",
        "description": "Filter ccmversion resources by specified parameter type and value (getCCMVersion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCCMVersion operation.",
        "tags": [
          "ccmversion"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateway/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000e1voipgateway/{parameter}/{value} (getCiscoCatalyst6000E1VoIPGateway)",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value (getCiscoCatalyst6000E1VoIPGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000e1voipgateway/{parameter}/{value} (removeCiscoCatalyst6000E1VoIPGateway)",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value (removeCiscoCatalyst6000E1VoIPGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000e1voipgateway/{parameter}/{value} (updateCiscoCatalyst6000E1VoIPGateway)",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value (updateCiscoCatalyst6000E1VoIPGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypri/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewaypri/{parameter}/{value} (getCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value (getCiscoCatalyst6000T1VoIPGatewayPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000t1voipgatewaypri/{parameter}/{value} (removeCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value (removeCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000t1voipgatewaypri/{parameter}/{value} (updateCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value (updateCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewayt1/{parameter}/{value} (getCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value (getCiscoCatalyst6000T1VoIPGatewayT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst6000t1voipgatewayt1/{parameter}/{value} (removeCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value (removeCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst6000t1voipgatewayt1/{parameter}/{value} (updateCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value (updateCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateway/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst600024portfxsgateway/{parameter}/{value} (getCiscoCatalyst600024PortFXSGateway)",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value (getCiscoCatalyst600024PortFXSGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ciscocatalyst600024portfxsgateway/{parameter}/{value} (removeCiscoCatalyst600024PortFXSGateway)",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value (removeCiscoCatalyst600024PortFXSGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ciscocatalyst600024portfxsgateway/{parameter}/{value} (updateCiscoCatalyst600024PortFXSGateway)",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value (updateCiscoCatalyst600024PortFXSGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfo/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/cmcinfo/{parameter}/{value} (getCmcInfo)",
        "description": "Filter cmcinfo resources by specified parameter type and value (getCmcInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/cmcinfo/{parameter}/{value} (removeCmcInfo)",
        "description": "Filter cmcinfo resources by specified parameter type and value (removeCmcInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/cmcinfo/{parameter}/{value} (updateCmcInfo)",
        "description": "Filter cmcinfo resources by specified parameter type and value (updateCmcInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/commondeviceconfig/{parameter}/{value} (getCommonDeviceConfig)",
        "description": "Filter commondeviceconfig resources by specified parameter type and value (getCommonDeviceConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/commondeviceconfig/{parameter}/{value} (removeCommonDeviceConfig)",
        "description": "Filter commondeviceconfig resources by specified parameter type and value (removeCommonDeviceConfig)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/commondeviceconfig/{parameter}/{value} (updateCommonDeviceConfig)",
        "description": "Filter commondeviceconfig resources by specified parameter type and value (updateCommonDeviceConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/commonphoneconfig/{parameter}/{value} (getCommonPhoneConfig)",
        "description": "Filter commonphoneconfig resources by specified parameter type and value (getCommonPhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/commonphoneconfig/{parameter}/{value} (removeCommonPhoneConfig)",
        "description": "Filter commonphoneconfig resources by specified parameter type and value (removeCommonPhoneConfig)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/commonphoneconfig/{parameter}/{value} (updateCommonPhoneConfig)",
        "description": "Filter commonphoneconfig resources by specified parameter type and value (updateCommonPhoneConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridge/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/conferencebridge/{parameter}/{value} (getConferenceBridge)",
        "description": "Filter conferencebridge resources by specified parameter type and value (getConferenceBridge)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/conferencebridge/{parameter}/{value} (removeConferenceBridge)",
        "description": "Filter conferencebridge resources by specified parameter type and value (removeConferenceBridge)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/conferencebridge/{parameter}/{value} (updateConferenceBridge)",
        "description": "Filter conferencebridge resources by specified parameter type and value (updateConferenceBridge)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenow/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/conferencenow/{parameter}/{value} (getConferenceNow)",
        "description": "Filter conferencenow resources by specified parameter type and value (getConferenceNow)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/conferencenow/{parameter}/{value} (removeConferenceNow)",
        "description": "Filter conferencenow resources by specified parameter type and value (removeConferenceNow)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/conferencenow/{parameter}/{value} (updateConferenceNow)",
        "description": "Filter conferencenow resources by specified parameter type and value (updateConferenceNow)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicy/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/credentialpolicy/{parameter}/{value} (getCredentialPolicy)",
        "description": "Filter credentialpolicy resources by specified parameter type and value (getCredentialPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/credentialpolicy/{parameter}/{value} (removeCredentialPolicy)",
        "description": "Filter credentialpolicy resources by specified parameter type and value (removeCredentialPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/credentialpolicy/{parameter}/{value} (updateCredentialPolicy)",
        "description": "Filter credentialpolicy resources by specified parameter type and value (updateCredentialPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicydefault": {
      "get": {
        "summary": "GET /api/axl/credentialpolicydefault (getCredentialPolicyDefault)",
        "description": "Returns all available credentialpolicydefault resources - Returns all available credentialpolicydefault resources (getCredentialPolicyDefault)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCredentialPolicyDefault operation.",
        "tags": [
          "credentialpolicydefault"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/credentialpolicydefault (updateCredentialPolicyDefault)",
        "description": "Execute updateCredentialPolicyDefault AXL operation (updateCredentialPolicyDefault)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCredentialPolicyDefault operation.",
        "tags": [
          "credentialpolicydefault"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicydefault/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/credentialpolicydefault/{parameter}/{value} (getCredentialPolicyDefault)",
        "description": "Filter credentialpolicydefault resources by specified parameter type and value (getCredentialPolicyDefault)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCredentialPolicyDefault operation.",
        "tags": [
          "credentialpolicydefault"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/credentialpolicydefault/{parameter}/{value} (updateCredentialPolicyDefault)",
        "description": "Filter credentialpolicydefault resources by specified parameter type and value (updateCredentialPolicyDefault)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCredentialPolicyDefault operation.",
        "tags": [
          "credentialpolicydefault"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/css/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/css/{parameter}/{value} (listCss)",
        "description": "Filter css resources by specified parameter type and value (listCss)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCss operation.",
        "tags": [
          "css"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/css/{parameter}/{value} (removeCss)",
        "description": "Filter css resources by specified parameter type and value (removeCss)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCss operation.",
        "tags": [
          "css"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/css/{parameter}/{value} (updateCss)",
        "description": "Filter css resources by specified parameter type and value (updateCss)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCss operation.",
        "tags": [
          "css"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoint/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ctiroutepoint/{parameter}/{value} (getCtiRoutePoint)",
        "description": "Filter ctiroutepoint resources by specified parameter type and value (getCtiRoutePoint)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ctiroutepoint/{parameter}/{value} (removeCtiRoutePoint)",
        "description": "Filter ctiroutepoint resources by specified parameter type and value (removeCtiRoutePoint)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ctiroutepoint/{parameter}/{value} (updateCtiRoutePoint)",
        "description": "Filter ctiroutepoint resources by specified parameter type and value (updateCtiRoutePoint)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/cumaserversecurityprofile/{parameter}/{value} (getCumaServerSecurityProfile)",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value (getCumaServerSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/cumaserversecurityprofile/{parameter}/{value} (removeCumaServerSecurityProfile)",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value (removeCumaServerSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/cumaserversecurityprofile/{parameter}/{value} (updateCumaServerSecurityProfile)",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value (updateCumaServerSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customer/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/customer/{parameter}/{value} (getCustomer)",
        "description": "Filter customer resources by specified parameter type and value (getCustomer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCustomer operation.",
        "tags": [
          "customer"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/customer/{parameter}/{value} (removeCustomer)",
        "description": "Filter customer resources by specified parameter type and value (removeCustomer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCustomer operation.",
        "tags": [
          "customer"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/customer/{parameter}/{value} (updateCustomer)",
        "description": "Filter customer resources by specified parameter type and value (updateCustomer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCustomer operation.",
        "tags": [
          "customer"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfield/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/customuserfield/{parameter}/{value} (getCustomUserField)",
        "description": "Filter customuserfield resources by specified parameter type and value (getCustomUserField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/customuserfield/{parameter}/{value} (removeCustomUserField)",
        "description": "Filter customuserfield resources by specified parameter type and value (removeCustomUserField)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/customuserfield/{parameter}/{value} (updateCustomUserField)",
        "description": "Filter customuserfield resources by specified parameter type and value (updateCustomUserField)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/datetimegroup/{parameter}/{value} (getDateTimeGroup)",
        "description": "Filter datetimegroup resources by specified parameter type and value (getDateTimeGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/datetimegroup/{parameter}/{value} (removeDateTimeGroup)",
        "description": "Filter datetimegroup resources by specified parameter type and value (removeDateTimeGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/datetimegroup/{parameter}/{value} (updateDateTimeGroup)",
        "description": "Filter datetimegroup resources by specified parameter type and value (updateDateTimeGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddi": {
      "get": {
        "summary": "GET /api/axl/ddi (getDdi)",
        "description": "Returns all available ddi resources - Returns all available ddi resources (getDdi)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDdi operation.",
        "tags": [
          "ddi"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddi/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ddi/{parameter}/{value} (getDdi)",
        "description": "Filter ddi resources by specified parameter type and value (getDdi)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDdi operation.",
        "tags": [
          "ddi"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/defaultdeviceprofile/{parameter}/{value} (getDefaultDeviceProfile)",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value (getDefaultDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/defaultdeviceprofile/{parameter}/{value} (removeDefaultDeviceProfile)",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value (removeDefaultDeviceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/defaultdeviceprofile/{parameter}/{value} (updateDefaultDeviceProfile)",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value (updateDefaultDeviceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicedefaults": {
      "get": {
        "summary": "GET /api/axl/devicedefaults (listDeviceDefaults)",
        "description": "Returns all available devicedefaults resources - Returns all available devicedefaults resources (listDeviceDefaults)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceDefaults operation.",
        "tags": [
          "devicedefault"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicedefaults (updateDeviceDefaults)",
        "description": "Execute updateDeviceDefaults AXL operation (updateDeviceDefaults)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceDefaults operation.",
        "tags": [
          "devicedefault"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicedefaults/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicedefaults/{parameter}/{value} (listDeviceDefaults)",
        "description": "Filter devicedefaults resources by specified parameter type and value (listDeviceDefaults)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceDefaults operation.",
        "tags": [
          "devicedefault"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicedefaults/{parameter}/{value} (updateDeviceDefaults)",
        "description": "Filter devicedefaults resources by specified parameter type and value (updateDeviceDefaults)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceDefaults operation.",
        "tags": [
          "devicedefault"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobility/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicemobility/{parameter}/{value} (getDeviceMobility)",
        "description": "Filter devicemobility resources by specified parameter type and value (getDeviceMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicemobility/{parameter}/{value} (removeDeviceMobility)",
        "description": "Filter devicemobility resources by specified parameter type and value (removeDeviceMobility)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicemobility/{parameter}/{value} (updateDeviceMobility)",
        "description": "Filter devicemobility resources by specified parameter type and value (updateDeviceMobility)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicemobilitygroup/{parameter}/{value} (getDeviceMobilityGroup)",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value (getDeviceMobilityGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicemobilitygroup/{parameter}/{value} (removeDeviceMobilityGroup)",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value (removeDeviceMobilityGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicemobilitygroup/{parameter}/{value} (updateDeviceMobilityGroup)",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value (updateDeviceMobilityGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepool/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicepool/{parameter}/{value} (getDevicePool)",
        "description": "Filter devicepool resources by specified parameter type and value (getDevicePool)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/devicepool/{parameter}/{value} (removeDevicePool)",
        "description": "Filter devicepool resources by specified parameter type and value (removeDevicePool)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/devicepool/{parameter}/{value} (updateDevicePool)",
        "description": "Filter devicepool resources by specified parameter type and value (updateDevicePool)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/deviceprofile/{parameter}/{value} (getDeviceProfile)",
        "description": "Filter deviceprofile resources by specified parameter type and value (getDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/deviceprofile/{parameter}/{value} (removeDeviceProfile)",
        "description": "Filter deviceprofile resources by specified parameter type and value (removeDeviceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/deviceprofile/{parameter}/{value} (updateDeviceProfile)",
        "description": "Filter deviceprofile resources by specified parameter type and value (updateDeviceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofileoptions": {
      "get": {
        "summary": "GET /api/axl/deviceprofileoptions (getDeviceProfileOptions)",
        "description": "Returns all available deviceprofileoptions resources - Returns all available deviceprofileoptions resources (getDeviceProfileOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceProfileOptions operation.",
        "tags": [
          "deviceprofileoption"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/deviceprofileoptions/{parameter}/{value} (getDeviceProfileOptions)",
        "description": "Filter deviceprofileoptions resources by specified parameter type and value (getDeviceProfileOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDeviceProfileOptions operation.",
        "tags": [
          "deviceprofileoption"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dhcpserver/{parameter}/{value} (getDhcpServer)",
        "description": "Filter dhcpserver resources by specified parameter type and value (getDhcpServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dhcpserver/{parameter}/{value} (removeDhcpServer)",
        "description": "Filter dhcpserver resources by specified parameter type and value (removeDhcpServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dhcpserver/{parameter}/{value} (updateDhcpServer)",
        "description": "Filter dhcpserver resources by specified parameter type and value (updateDhcpServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnet/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dhcpsubnet/{parameter}/{value} (getDhcpSubnet)",
        "description": "Filter dhcpsubnet resources by specified parameter type and value (getDhcpSubnet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dhcpsubnet/{parameter}/{value} (removeDhcpSubnet)",
        "description": "Filter dhcpsubnet resources by specified parameter type and value (removeDhcpSubnet)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dhcpsubnet/{parameter}/{value} (updateDhcpSubnet)",
        "description": "Filter dhcpsubnet resources by specified parameter type and value (updateDhcpSubnet)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplan": {
      "get": {
        "summary": "GET /api/axl/dialplan (getDialPlan)",
        "description": "Returns all available dialplan resources - Returns all available dialplan resources (getDialPlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDialPlan operation.",
        "tags": [
          "dialplan"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplan/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dialplan/{parameter}/{value} (getDialPlan)",
        "description": "Filter dialplan resources by specified parameter type and value (getDialPlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDialPlan operation.",
        "tags": [
          "dialplan"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantag": {
      "get": {
        "summary": "GET /api/axl/dialplantag (getDialPlanTag)",
        "description": "Returns all available dialplantag resources - Returns all available dialplantag resources (getDialPlanTag)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDialPlanTag operation.",
        "tags": [
          "dialplantag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantag/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dialplantag/{parameter}/{value} (getDialPlanTag)",
        "description": "Filter dialplantag resources by specified parameter type and value (getDialPlanTag)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDialPlanTag operation.",
        "tags": [
          "dialplantag"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallpark/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/directedcallpark/{parameter}/{value} (getDirectedCallPark)",
        "description": "Filter directedcallpark resources by specified parameter type and value (getDirectedCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/directedcallpark/{parameter}/{value} (removeDirectedCallPark)",
        "description": "Filter directedcallpark resources by specified parameter type and value (removeDirectedCallPark)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/directedcallpark/{parameter}/{value} (updateDirectedCallPark)",
        "description": "Filter directedcallpark resources by specified parameter type and value (updateDirectedCallPark)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directorylookupdialrules/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/directorylookupdialrules/{parameter}/{value} (listDirectoryLookupDialRules)",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value (listDirectoryLookupDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/directorylookupdialrules/{parameter}/{value} (removeDirectoryLookupDialRules)",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value (removeDirectoryLookupDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/directorylookupdialrules/{parameter}/{value} (updateDirectoryLookupDialRules)",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value (updateDirectoryLookupDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirectoryLookupDialRules operation.",
        "tags": [
          "directorylookupdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsync/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dirnumberaliaslookupandsync/{parameter}/{value} (getDirNumberAliasLookupandSync)",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value (getDirNumberAliasLookupandSync)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/dirnumberaliaslookupandsync/{parameter}/{value} (removeDirNumberAliasLookupandSync)",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value (removeDirNumberAliasLookupandSync)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/dirnumberaliaslookupandsync/{parameter}/{value} (updateDirNumberAliasLookupandSync)",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value (updateDirNumberAliasLookupandSync)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/elingroup/{parameter}/{value} (getElinGroup)",
        "description": "Filter elingroup resources by specified parameter type and value (getElinGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/elingroup/{parameter}/{value} (removeElinGroup)",
        "description": "Filter elingroup resources by specified parameter type and value (removeElinGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/elingroup/{parameter}/{value} (updateElinGroup)",
        "description": "Filter elingroup resources by specified parameter type and value (updateElinGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/emccfeatureconfig": {
      "get": {
        "summary": "GET /api/axl/emccfeatureconfig (getEmccFeatureConfig)",
        "description": "Returns all available emccfeatureconfig resources - Returns all available emccfeatureconfig resources (getEmccFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEmccFeatureConfig operation.",
        "tags": [
          "emccfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/emccfeatureconfig (updateEmccFeatureConfig)",
        "description": "Execute updateEmccFeatureConfig AXL operation (updateEmccFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEmccFeatureConfig operation.",
        "tags": [
          "emccfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/emccfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/emccfeatureconfig/{parameter}/{value} (getEmccFeatureConfig)",
        "description": "Filter emccfeatureconfig resources by specified parameter type and value (getEmccFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEmccFeatureConfig operation.",
        "tags": [
          "emccfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/emccfeatureconfig/{parameter}/{value} (updateEmccFeatureConfig)",
        "description": "Filter emccfeatureconfig resources by specified parameter type and value (updateEmccFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEmccFeatureConfig operation.",
        "tags": [
          "emccfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/endusercapfprofile/{parameter}/{value} (getEndUserCapfProfile)",
        "description": "Filter endusercapfprofile resources by specified parameter type and value (getEndUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/endusercapfprofile/{parameter}/{value} (removeEndUserCapfProfile)",
        "description": "Filter endusercapfprofile resources by specified parameter type and value (removeEndUserCapfProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/endusercapfprofile/{parameter}/{value} (updateEndUserCapfProfile)",
        "description": "Filter endusercapfprofile resources by specified parameter type and value (updateEndUserCapfProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/enterprisefeatureaccessconfiguration/{parameter}/{value} (getEnterpriseFeatureAccessConfiguration)",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value (getEnterpriseFeatureAccessConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/enterprisefeatureaccessconfiguration/{parameter}/{value} (removeEnterpriseFeatureAccessConfiguration)",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value (removeEnterpriseFeatureAccessConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/enterprisefeatureaccessconfiguration/{parameter}/{value} (updateEnterpriseFeatureAccessConfiguration)",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value (updateEnterpriseFeatureAccessConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisephoneconfig": {
      "get": {
        "summary": "GET /api/axl/enterprisephoneconfig (getEnterprisePhoneConfig)",
        "description": "Returns all available enterprisephoneconfig resources - Returns all available enterprisephoneconfig resources (getEnterprisePhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEnterprisePhoneConfig operation.",
        "tags": [
          "enterprisephoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/enterprisephoneconfig (updateEnterprisePhoneConfig)",
        "description": "Execute updateEnterprisePhoneConfig AXL operation (updateEnterprisePhoneConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEnterprisePhoneConfig operation.",
        "tags": [
          "enterprisephoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisephoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/enterprisephoneconfig/{parameter}/{value} (getEnterprisePhoneConfig)",
        "description": "Filter enterprisephoneconfig resources by specified parameter type and value (getEnterprisePhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getEnterprisePhoneConfig operation.",
        "tags": [
          "enterprisephoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/enterprisephoneconfig/{parameter}/{value} (updateEnterprisePhoneConfig)",
        "description": "Filter enterprisephoneconfig resources by specified parameter type and value (updateEnterprisePhoneConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateEnterprisePhoneConfig operation.",
        "tags": [
          "enterprisephoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/expresswaycconfiguration/{parameter}/{value} (getExpresswayCConfiguration)",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value (getExpresswayCConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/expresswaycconfiguration/{parameter}/{value} (removeExpresswayCConfiguration)",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value (removeExpresswayCConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/expresswaycconfiguration/{parameter}/{value} (updateExpresswayCConfiguration)",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value (updateExpresswayCConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/externalcallcontrolprofile/{parameter}/{value} (getExternalCallControlProfile)",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value (getExternalCallControlProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/externalcallcontrolprofile/{parameter}/{value} (removeExternalCallControlProfile)",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value (removeExternalCallControlProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/externalcallcontrolprofile/{parameter}/{value} (updateExternalCallControlProfile)",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value (updateExternalCallControlProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfo/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/facinfo/{parameter}/{value} (getFacInfo)",
        "description": "Filter facinfo resources by specified parameter type and value (getFacInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/facinfo/{parameter}/{value} (removeFacInfo)",
        "description": "Filter facinfo resources by specified parameter type and value (removeFacInfo)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/facinfo/{parameter}/{value} (updateFacInfo)",
        "description": "Filter facinfo resources by specified parameter type and value (updateFacInfo)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackfeatureconfig": {
      "get": {
        "summary": "GET /api/axl/fallbackfeatureconfig (getFallbackFeatureConfig)",
        "description": "Returns all available fallbackfeatureconfig resources - Returns all available fallbackfeatureconfig resources (getFallbackFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFallbackFeatureConfig operation.",
        "tags": [
          "fallbackfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fallbackfeatureconfig (updateFallbackFeatureConfig)",
        "description": "Execute updateFallbackFeatureConfig AXL operation (updateFallbackFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFallbackFeatureConfig operation.",
        "tags": [
          "fallbackfeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/fallbackfeatureconfig/{parameter}/{value} (getFallbackFeatureConfig)",
        "description": "Filter fallbackfeatureconfig resources by specified parameter type and value (getFallbackFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFallbackFeatureConfig operation.",
        "tags": [
          "fallbackfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fallbackfeatureconfig/{parameter}/{value} (updateFallbackFeatureConfig)",
        "description": "Filter fallbackfeatureconfig resources by specified parameter type and value (updateFallbackFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFallbackFeatureConfig operation.",
        "tags": [
          "fallbackfeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/fallbackprofile/{parameter}/{value} (getFallbackProfile)",
        "description": "Filter fallbackprofile resources by specified parameter type and value (getFallbackProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/fallbackprofile/{parameter}/{value} (removeFallbackProfile)",
        "description": "Filter fallbackprofile resources by specified parameter type and value (removeFallbackProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fallbackprofile/{parameter}/{value} (updateFallbackProfile)",
        "description": "Filter fallbackprofile resources by specified parameter type and value (updateFallbackProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicy/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/featurecontrolpolicy/{parameter}/{value} (getFeatureControlPolicy)",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value (getFeatureControlPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/featurecontrolpolicy/{parameter}/{value} (removeFeatureControlPolicy)",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value (removeFeatureControlPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/featurecontrolpolicy/{parameter}/{value} (updateFeatureControlPolicy)",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value (updateFeatureControlPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/featuregrouptemplate/{parameter}/{value} (getFeatureGroupTemplate)",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value (getFeatureGroupTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/featuregrouptemplate/{parameter}/{value} (removeFeatureGroupTemplate)",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value (removeFeatureGroupTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/featuregrouptemplate/{parameter}/{value} (updateFeatureGroupTemplate)",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value (updateFeatureGroupTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fixedmohaudiosource": {
      "get": {
        "summary": "GET /api/axl/fixedmohaudiosource (getFixedMohAudioSource)",
        "description": "Returns all available fixedmohaudiosource resources - Returns all available fixedmohaudiosource resources (getFixedMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFixedMohAudioSource operation.",
        "tags": [
          "fixedmohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fixedmohaudiosource (updateFixedMohAudioSource)",
        "description": "Execute updateFixedMohAudioSource AXL operation (updateFixedMohAudioSource)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFixedMohAudioSource operation.",
        "tags": [
          "fixedmohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fixedmohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/fixedmohaudiosource/{parameter}/{value} (getFixedMohAudioSource)",
        "description": "Filter fixedmohaudiosource resources by specified parameter type and value (getFixedMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getFixedMohAudioSource operation.",
        "tags": [
          "fixedmohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/fixedmohaudiosource/{parameter}/{value} (updateFixedMohAudioSource)",
        "description": "Filter fixedmohaudiosource resources by specified parameter type and value (updateFixedMohAudioSource)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateFixedMohAudioSource operation.",
        "tags": [
          "fixedmohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeeper/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatekeeper/{parameter}/{value} (getGatekeeper)",
        "description": "Filter gatekeeper resources by specified parameter type and value (getGatekeeper)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatekeeper/{parameter}/{value} (removeGatekeeper)",
        "description": "Filter gatekeeper resources by specified parameter type and value (removeGatekeeper)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatekeeper/{parameter}/{value} (updateGatekeeper)",
        "description": "Filter gatekeeper resources by specified parameter type and value (updateGatekeeper)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateway/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gateway/{parameter}/{value} (getGateway)",
        "description": "Filter gateway resources by specified parameter type and value (getGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGateway operation.",
        "tags": [
          "gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gateway/{parameter}/{value} (removeGateway)",
        "description": "Filter gateway resources by specified parameter type and value (removeGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGateway operation.",
        "tags": [
          "gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gateway/{parameter}/{value} (updateGateway)",
        "description": "Filter gateway resources by specified parameter type and value (updateGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGateway operation.",
        "tags": [
          "gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointanalogaccess/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatewayendpointanalogaccess/{parameter}/{value} (getGatewayEndpointAnalogAccess)",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value (getGatewayEndpointAnalogAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointanalogaccess/{parameter}/{value} (removeGatewayEndpointAnalogAccess)",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value (removeGatewayEndpointAnalogAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointanalogaccess/{parameter}/{value} (updateGatewayEndpointAnalogAccess)",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value (updateGatewayEndpointAnalogAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointAnalogAccess operation.",
        "tags": [
          "gatewayendpointanalogacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccessbri/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccessbri/{parameter}/{value} (getGatewayEndpointDigitalAccessBri)",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value (getGatewayEndpointDigitalAccessBri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccessbri/{parameter}/{value} (removeGatewayEndpointDigitalAccessBri)",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value (removeGatewayEndpointDigitalAccessBri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccessbri/{parameter}/{value} (updateGatewayEndpointDigitalAccessBri)",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value (updateGatewayEndpointDigitalAccessBri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessBri operation.",
        "tags": [
          "gatewayendpointdigitalaccessbri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesspri/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccesspri/{parameter}/{value} (getGatewayEndpointDigitalAccessPri)",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value (getGatewayEndpointDigitalAccessPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccesspri/{parameter}/{value} (removeGatewayEndpointDigitalAccessPri)",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value (removeGatewayEndpointDigitalAccessPri)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccesspri/{parameter}/{value} (updateGatewayEndpointDigitalAccessPri)",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value (updateGatewayEndpointDigitalAccessPri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessPri operation.",
        "tags": [
          "gatewayendpointdigitalaccesspri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesst1/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatewayendpointdigitalaccesst1/{parameter}/{value} (getGatewayEndpointDigitalAccessT1)",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value (getGatewayEndpointDigitalAccessT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewayendpointdigitalaccesst1/{parameter}/{value} (removeGatewayEndpointDigitalAccessT1)",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value (removeGatewayEndpointDigitalAccessT1)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewayendpointdigitalaccesst1/{parameter}/{value} (updateGatewayEndpointDigitalAccessT1)",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value (updateGatewayEndpointDigitalAccessT1)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewayEndpointDigitalAccessT1 operation.",
        "tags": [
          "gatewayendpointdigitalaccesst1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysccpendpoints/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatewaysccpendpoints/{parameter}/{value} (getGatewaySccpEndpoints)",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value (getGatewaySccpEndpoints)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/gatewaysccpendpoints/{parameter}/{value} (removeGatewaySccpEndpoints)",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value (removeGatewaySccpEndpoints)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/gatewaysccpendpoints/{parameter}/{value} (updateGatewaySccpEndpoints)",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value (updateGatewaySccpEndpoints)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGatewaySccpEndpoints operation.",
        "tags": [
          "gatewaysccpendpoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocation/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocation/{parameter}/{value} (getGeoLocation)",
        "description": "Filter geolocation resources by specified parameter type and value (getGeoLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocation/{parameter}/{value} (removeGeoLocation)",
        "description": "Filter geolocation resources by specified parameter type and value (removeGeoLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocation/{parameter}/{value} (updateGeoLocation)",
        "description": "Filter geolocation resources by specified parameter type and value (updateGeoLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilter/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocationfilter/{parameter}/{value} (getGeoLocationFilter)",
        "description": "Filter geolocationfilter resources by specified parameter type and value (getGeoLocationFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocationfilter/{parameter}/{value} (removeGeoLocationFilter)",
        "description": "Filter geolocationfilter resources by specified parameter type and value (removeGeoLocationFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocationfilter/{parameter}/{value} (updateGeoLocationFilter)",
        "description": "Filter geolocationfilter resources by specified parameter type and value (updateGeoLocationFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicy/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocationpolicy/{parameter}/{value} (getGeoLocationPolicy)",
        "description": "Filter geolocationpolicy resources by specified parameter type and value (getGeoLocationPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/geolocationpolicy/{parameter}/{value} (removeGeoLocationPolicy)",
        "description": "Filter geolocationpolicy resources by specified parameter type and value (removeGeoLocationPolicy)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/geolocationpolicy/{parameter}/{value} (updateGeoLocationPolicy)",
        "description": "Filter geolocationpolicy resources by specified parameter type and value (updateGeoLocationPolicy)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateway/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323gateway/{parameter}/{value} (getH323Gateway)",
        "description": "Filter h323gateway resources by specified parameter type and value (getH323Gateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323gateway/{parameter}/{value} (removeH323Gateway)",
        "description": "Filter h323gateway resources by specified parameter type and value (removeH323Gateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323gateway/{parameter}/{value} (updateH323Gateway)",
        "description": "Filter h323gateway resources by specified parameter type and value (updateH323Gateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phone/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323phone/{parameter}/{value} (getH323Phone)",
        "description": "Filter h323phone resources by specified parameter type and value (getH323Phone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323phone/{parameter}/{value} (removeH323Phone)",
        "description": "Filter h323phone resources by specified parameter type and value (removeH323Phone)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323phone/{parameter}/{value} (updateH323Phone)",
        "description": "Filter h323phone resources by specified parameter type and value (updateH323Phone)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunk/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323trunk/{parameter}/{value} (getH323Trunk)",
        "description": "Filter h323trunk resources by specified parameter type and value (getH323Trunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/h323trunk/{parameter}/{value} (removeH323Trunk)",
        "description": "Filter h323trunk resources by specified parameter type and value (removeH323Trunk)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/h323trunk/{parameter}/{value} (updateH323Trunk)",
        "description": "Filter h323trunk resources by specified parameter type and value (updateH323Trunk)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/handoffconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/handoffconfiguration/{parameter}/{value} (getHandoffConfiguration)",
        "description": "Filter handoffconfiguration resources by specified parameter type and value (getHandoffConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/handoffconfiguration/{parameter}/{value} (removeHandoffConfiguration)",
        "description": "Filter handoffconfiguration resources by specified parameter type and value (removeHandoffConfiguration)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/handoffconfiguration/{parameter}/{value} (updateHandoffConfiguration)",
        "description": "Filter handoffconfiguration resources by specified parameter type and value (updateHandoffConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHandoffConfiguration operation.",
        "tags": [
          "handoffconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/httpprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/httpprofile/{parameter}/{value} (getHttpProfile)",
        "description": "Filter httpprofile resources by specified parameter type and value (getHttpProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/httpprofile/{parameter}/{value} (removeHttpProfile)",
        "description": "Filter httpprofile resources by specified parameter type and value (removeHttpProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/httpprofile/{parameter}/{value} (updateHttpProfile)",
        "description": "Filter httpprofile resources by specified parameter type and value (updateHttpProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHttpProfile operation.",
        "tags": [
          "httpprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/huntlist/{parameter}/{value} (getHuntList)",
        "description": "Filter huntlist resources by specified parameter type and value (getHuntList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/huntlist/{parameter}/{value} (removeHuntList)",
        "description": "Filter huntlist resources by specified parameter type and value (removeHuntList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/huntlist/{parameter}/{value} (updateHuntList)",
        "description": "Filter huntlist resources by specified parameter type and value (updateHuntList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilot/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/huntpilot/{parameter}/{value} (getHuntPilot)",
        "description": "Filter huntpilot resources by specified parameter type and value (getHuntPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/huntpilot/{parameter}/{value} (removeHuntPilot)",
        "description": "Filter huntpilot resources by specified parameter type and value (removeHuntPilot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/huntpilot/{parameter}/{value} (updateHuntPilot)",
        "description": "Filter huntpilot resources by specified parameter type and value (updateHuntPilot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ilsconfig": {
      "get": {
        "summary": "GET /api/axl/ilsconfig (getIlsConfig)",
        "description": "Returns all available ilsconfig resources - Returns all available ilsconfig resources (getIlsConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getIlsConfig operation.",
        "tags": [
          "ilsconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ilsconfig (updateIlsConfig)",
        "description": "Execute updateIlsConfig AXL operation (updateIlsConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIlsConfig operation.",
        "tags": [
          "ilsconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ilsconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ilsconfig/{parameter}/{value} (getIlsConfig)",
        "description": "Filter ilsconfig resources by specified parameter type and value (getIlsConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getIlsConfig operation.",
        "tags": [
          "ilsconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ilsconfig/{parameter}/{value} (updateIlsConfig)",
        "description": "Filter ilsconfig resources by specified parameter type and value (updateIlsConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIlsConfig operation.",
        "tags": [
          "ilsconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclient/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeclient/{parameter}/{value} (getImeClient)",
        "description": "Filter imeclient resources by specified parameter type and value (getImeClient)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeclient/{parameter}/{value} (removeImeClient)",
        "description": "Filter imeclient resources by specified parameter type and value (removeImeClient)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeclient/{parameter}/{value} (updateImeClient)",
        "description": "Filter imeclient resources by specified parameter type and value (updateImeClient)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformation/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imee164transformation/{parameter}/{value} (getImeE164Transformation)",
        "description": "Filter imee164transformation resources by specified parameter type and value (getImeE164Transformation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imee164transformation/{parameter}/{value} (removeImeE164Transformation)",
        "description": "Filter imee164transformation resources by specified parameter type and value (removeImeE164Transformation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imee164transformation/{parameter}/{value} (updateImeE164Transformation)",
        "description": "Filter imee164transformation resources by specified parameter type and value (updateImeE164Transformation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpattern/{parameter}/{value} (getImeEnrolledPattern)",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value (getImeEnrolledPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeenrolledpattern/{parameter}/{value} (removeImeEnrolledPattern)",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value (removeImeEnrolledPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeenrolledpattern/{parameter}/{value} (updateImeEnrolledPattern)",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value (updateImeEnrolledPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterngroup/{parameter}/{value} (getImeEnrolledPatternGroup)",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value (getImeEnrolledPatternGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeenrolledpatterngroup/{parameter}/{value} (removeImeEnrolledPatternGroup)",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value (removeImeEnrolledPatternGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeenrolledpatterngroup/{parameter}/{value} (updateImeEnrolledPatternGroup)",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value (updateImeEnrolledPatternGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumber/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumber/{parameter}/{value} (getImeExclusionNumber)",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value (getImeExclusionNumber)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeexclusionnumber/{parameter}/{value} (removeImeExclusionNumber)",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value (removeImeExclusionNumber)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeexclusionnumber/{parameter}/{value} (updateImeExclusionNumber)",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value (updateImeExclusionNumber)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbergroup/{parameter}/{value} (getImeExclusionNumberGroup)",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value (getImeExclusionNumberGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeexclusionnumbergroup/{parameter}/{value} (removeImeExclusionNumberGroup)",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value (removeImeExclusionNumberGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeexclusionnumbergroup/{parameter}/{value} (updateImeExclusionNumberGroup)",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value (updateImeExclusionNumberGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefeatureconfig": {
      "get": {
        "summary": "GET /api/axl/imefeatureconfig (getImeFeatureConfig)",
        "description": "Returns all available imefeatureconfig resources - Returns all available imefeatureconfig resources (getImeFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeFeatureConfig operation.",
        "tags": [
          "imefeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imefeatureconfig (updateImeFeatureConfig)",
        "description": "Execute updateImeFeatureConfig AXL operation (updateImeFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeFeatureConfig operation.",
        "tags": [
          "imefeatureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imefeatureconfig/{parameter}/{value} (getImeFeatureConfig)",
        "description": "Filter imefeatureconfig resources by specified parameter type and value (getImeFeatureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeFeatureConfig operation.",
        "tags": [
          "imefeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imefeatureconfig/{parameter}/{value} (updateImeFeatureConfig)",
        "description": "Filter imefeatureconfig resources by specified parameter type and value (updateImeFeatureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeFeatureConfig operation.",
        "tags": [
          "imefeatureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewall/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imefirewall/{parameter}/{value} (getImeFirewall)",
        "description": "Filter imefirewall resources by specified parameter type and value (getImeFirewall)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imefirewall/{parameter}/{value} (removeImeFirewall)",
        "description": "Filter imefirewall resources by specified parameter type and value (removeImeFirewall)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imefirewall/{parameter}/{value} (updateImeFirewall)",
        "description": "Filter imefirewall resources by specified parameter type and value (updateImeFirewall)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imelearnedroutes": {
      "get": {
        "summary": "GET /api/axl/imelearnedroutes (getImeLearnedRoutes)",
        "description": "Returns all available imelearnedroutes resources - Returns all available imelearnedroutes resources (getImeLearnedRoutes)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imelearnedroutes (removeImeLearnedRoutes)",
        "description": "Execute removeImeLearnedRoutes AXL operation (removeImeLearnedRoutes)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imelearnedroutes (updateImeLearnedRoutes)",
        "description": "Execute updateImeLearnedRoutes AXL operation (updateImeLearnedRoutes)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imelearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imelearnedroutes/{parameter}/{value} (getImeLearnedRoutes)",
        "description": "Filter imelearnedroutes resources by specified parameter type and value (getImeLearnedRoutes)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imelearnedroutes/{parameter}/{value} (removeImeLearnedRoutes)",
        "description": "Filter imelearnedroutes resources by specified parameter type and value (removeImeLearnedRoutes)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imelearnedroutes/{parameter}/{value} (updateImeLearnedRoutes)",
        "description": "Filter imelearnedroutes resources by specified parameter type and value (updateImeLearnedRoutes)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeLearnedRoutes operation.",
        "tags": [
          "imelearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelement/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeroutefilterelement/{parameter}/{value} (getImeRouteFilterElement)",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value (getImeRouteFilterElement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeroutefilterelement/{parameter}/{value} (removeImeRouteFilterElement)",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value (removeImeRouteFilterElement)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeroutefilterelement/{parameter}/{value} (updateImeRouteFilterElement)",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value (updateImeRouteFilterElement)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeroutefiltergroup/{parameter}/{value} (getImeRouteFilterGroup)",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value (getImeRouteFilterGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeroutefiltergroup/{parameter}/{value} (removeImeRouteFilterGroup)",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value (removeImeRouteFilterGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeroutefiltergroup/{parameter}/{value} (updateImeRouteFilterGroup)",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value (updateImeRouteFilterGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeserver/{parameter}/{value} (getImeServer)",
        "description": "Filter imeserver resources by specified parameter type and value (getImeServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/imeserver/{parameter}/{value} (removeImeServer)",
        "description": "Filter imeserver resources by specified parameter type and value (removeImeServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/imeserver/{parameter}/{value} (updateImeServer)",
        "description": "Filter imeserver resources by specified parameter type and value (updateImeServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/importeddirectoryuricatalogs/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/importeddirectoryuricatalogs/{parameter}/{value} (listImportedDirectoryUriCatalogs)",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value (listImportedDirectoryUriCatalogs)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/importeddirectoryuricatalogs/{parameter}/{value} (removeImportedDirectoryUriCatalogs)",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value (removeImportedDirectoryUriCatalogs)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/importeddirectoryuricatalogs/{parameter}/{value} (updateImportedDirectoryUriCatalogs)",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value (updateImportedDirectoryUriCatalogs)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateImportedDirectoryUriCatalogs operation.",
        "tags": [
          "importeddirectoryuricatalog"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevice/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/infrastructuredevice/{parameter}/{value} (getInfrastructureDevice)",
        "description": "Filter infrastructuredevice resources by specified parameter type and value (getInfrastructureDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/infrastructuredevice/{parameter}/{value} (removeInfrastructureDevice)",
        "description": "Filter infrastructuredevice resources by specified parameter type and value (removeInfrastructureDevice)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/infrastructuredevice/{parameter}/{value} (updateInfrastructureDevice)",
        "description": "Filter infrastructuredevice resources by specified parameter type and value (updateInfrastructureDevice)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponse": {
      "get": {
        "summary": "GET /api/axl/interactivevoiceresponse (getInteractiveVoiceResponse)",
        "description": "Returns all available interactivevoiceresponse resources - Returns all available interactivevoiceresponse resources (getInteractiveVoiceResponse)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/interactivevoiceresponse (updateInteractiveVoiceResponse)",
        "description": "Execute updateInteractiveVoiceResponse AXL operation (updateInteractiveVoiceResponse)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponse/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/interactivevoiceresponse/{parameter}/{value} (getInteractiveVoiceResponse)",
        "description": "Filter interactivevoiceresponse resources by specified parameter type and value (getInteractiveVoiceResponse)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/interactivevoiceresponse/{parameter}/{value} (updateInteractiveVoiceResponse)",
        "description": "Filter interactivevoiceresponse resources by specified parameter type and value (updateInteractiveVoiceResponse)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterserviceprofile": {
      "get": {
        "summary": "GET /api/axl/interclusterserviceprofile (getInterClusterServiceProfile)",
        "description": "Returns all available interclusterserviceprofile resources - Returns all available interclusterserviceprofile resources (getInterClusterServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInterClusterServiceProfile operation.",
        "tags": [
          "interclusterserviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/interclusterserviceprofile (updateInterClusterServiceProfile)",
        "description": "Execute updateInterClusterServiceProfile AXL operation (updateInterClusterServiceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInterClusterServiceProfile operation.",
        "tags": [
          "interclusterserviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterserviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/interclusterserviceprofile/{parameter}/{value} (getInterClusterServiceProfile)",
        "description": "Filter interclusterserviceprofile resources by specified parameter type and value (getInterClusterServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getInterClusterServiceProfile operation.",
        "tags": [
          "interclusterserviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/interclusterserviceprofile/{parameter}/{value} (updateInterClusterServiceProfile)",
        "description": "Filter interclusterserviceprofile resources by specified parameter type and value (updateInterClusterServiceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInterClusterServiceProfile operation.",
        "tags": [
          "interclusterserviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ipphoneservices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ipphoneservices/{parameter}/{value} (listIpPhoneServices)",
        "description": "Filter ipphoneservices resources by specified parameter type and value (listIpPhoneServices)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ipphoneservices/{parameter}/{value} (removeIpPhoneServices)",
        "description": "Filter ipphoneservices resources by specified parameter type and value (removeIpPhoneServices)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ipphoneservices/{parameter}/{value} (updateIpPhoneServices)",
        "description": "Filter ipphoneservices resources by specified parameter type and value (updateIpPhoneServices)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIpPhoneServices operation.",
        "tags": [
          "ipphoneservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocale/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ivruserlocale/{parameter}/{value} (getIvrUserLocale)",
        "description": "Filter ivruserlocale resources by specified parameter type and value (getIvrUserLocale)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ivruserlocale/{parameter}/{value} (removeIvrUserLocale)",
        "description": "Filter ivruserlocale resources by specified parameter type and value (removeIvrUserLocale)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ivruserlocale/{parameter}/{value} (updateIvrUserLocale)",
        "description": "Filter ivruserlocale resources by specified parameter type and value (updateIvrUserLocale)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lbmgroup/{parameter}/{value} (getLbmGroup)",
        "description": "Filter lbmgroup resources by specified parameter type and value (getLbmGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/lbmgroup/{parameter}/{value} (removeLbmGroup)",
        "description": "Filter lbmgroup resources by specified parameter type and value (removeLbmGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/lbmgroup/{parameter}/{value} (updateLbmGroup)",
        "description": "Filter lbmgroup resources by specified parameter type and value (updateLbmGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lbmhubgroup/{parameter}/{value} (getLbmHubGroup)",
        "description": "Filter lbmhubgroup resources by specified parameter type and value (getLbmHubGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/lbmhubgroup/{parameter}/{value} (removeLbmHubGroup)",
        "description": "Filter lbmhubgroup resources by specified parameter type and value (removeLbmHubGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/lbmhubgroup/{parameter}/{value} (updateLbmHubGroup)",
        "description": "Filter lbmhubgroup resources by specified parameter type and value (updateLbmHubGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapauthentication": {
      "get": {
        "summary": "GET /api/axl/ldapauthentication (getLdapAuthentication)",
        "description": "Returns all available ldapauthentication resources - Returns all available ldapauthentication resources (getLdapAuthentication)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapAuthentication operation.",
        "tags": [
          "ldapauthentication"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapauthentication (updateLdapAuthentication)",
        "description": "Execute updateLdapAuthentication AXL operation (updateLdapAuthentication)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapAuthentication operation.",
        "tags": [
          "ldapauthentication"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapauthentication/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapauthentication/{parameter}/{value} (getLdapAuthentication)",
        "description": "Filter ldapauthentication resources by specified parameter type and value (getLdapAuthentication)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapAuthentication operation.",
        "tags": [
          "ldapauthentication"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapauthentication/{parameter}/{value} (updateLdapAuthentication)",
        "description": "Filter ldapauthentication resources by specified parameter type and value (updateLdapAuthentication)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapAuthentication operation.",
        "tags": [
          "ldapauthentication"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectory/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapdirectory/{parameter}/{value} (getLdapDirectory)",
        "description": "Filter ldapdirectory resources by specified parameter type and value (getLdapDirectory)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapdirectory/{parameter}/{value} (removeLdapDirectory)",
        "description": "Filter ldapdirectory resources by specified parameter type and value (removeLdapDirectory)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapdirectory/{parameter}/{value} (updateLdapDirectory)",
        "description": "Filter ldapdirectory resources by specified parameter type and value (updateLdapDirectory)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilter/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapfilter/{parameter}/{value} (getLdapFilter)",
        "description": "Filter ldapfilter resources by specified parameter type and value (getLdapFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapfilter/{parameter}/{value} (removeLdapFilter)",
        "description": "Filter ldapfilter resources by specified parameter type and value (removeLdapFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapfilter/{parameter}/{value} (updateLdapFilter)",
        "description": "Filter ldapfilter resources by specified parameter type and value (updateLdapFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearch": {
      "get": {
        "summary": "GET /api/axl/ldapsearch (getLdapSearch)",
        "description": "Returns all available ldapsearch resources - Returns all available ldapsearch resources (getLdapSearch)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsearch (updateLdapSearch)",
        "description": "Execute updateLdapSearch AXL operation (updateLdapSearch)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearch/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsearch/{parameter}/{value} (getLdapSearch)",
        "description": "Filter ldapsearch resources by specified parameter type and value (getLdapSearch)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsearch/{parameter}/{value} (updateLdapSearch)",
        "description": "Filter ldapsearch resources by specified parameter type and value (updateLdapSearch)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfield/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsynccustomfield/{parameter}/{value} (getLdapSyncCustomField)",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value (getLdapSyncCustomField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ldapsynccustomfield/{parameter}/{value} (removeLdapSyncCustomField)",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value (removeLdapSyncCustomField)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsynccustomfield/{parameter}/{value} (updateLdapSyncCustomField)",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value (updateLdapSyncCustomField)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsyncstatus": {
      "get": {
        "summary": "GET /api/axl/ldapsyncstatus (getLdapSyncStatus)",
        "description": "Returns all available ldapsyncstatus resources - Returns all available ldapsyncstatus resources (getLdapSyncStatus)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSyncStatus operation.",
        "tags": [
          "ldapsyncstatu"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsyncstatus/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsyncstatus/{parameter}/{value} (getLdapSyncStatus)",
        "description": "Filter ldapsyncstatus resources by specified parameter type and value (getLdapSyncStatus)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSyncStatus operation.",
        "tags": [
          "ldapsyncstatu"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsystem": {
      "get": {
        "summary": "GET /api/axl/ldapsystem (getLdapSystem)",
        "description": "Returns all available ldapsystem resources - Returns all available ldapsystem resources (getLdapSystem)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSystem operation.",
        "tags": [
          "ldapsystem"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsystem (updateLdapSystem)",
        "description": "Execute updateLdapSystem AXL operation (updateLdapSystem)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSystem operation.",
        "tags": [
          "ldapsystem"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsystem/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsystem/{parameter}/{value} (getLdapSystem)",
        "description": "Filter ldapsystem resources by specified parameter type and value (getLdapSystem)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLdapSystem operation.",
        "tags": [
          "ldapsystem"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ldapsystem/{parameter}/{value} (updateLdapSystem)",
        "description": "Filter ldapsystem resources by specified parameter type and value (updateLdapSystem)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLdapSystem operation.",
        "tags": [
          "ldapsystem"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licenseduser": {
      "get": {
        "summary": "GET /api/axl/licenseduser (getLicensedUser)",
        "description": "Returns all available licenseduser resources - Returns all available licenseduser resources (getLicensedUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLicensedUser operation.",
        "tags": [
          "licenseduser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licenseduser/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/licenseduser/{parameter}/{value} (getLicensedUser)",
        "description": "Filter licenseduser resources by specified parameter type and value (getLicensedUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLicensedUser operation.",
        "tags": [
          "licenseduser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/line/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/line/{parameter}/{value} (getLine)",
        "description": "Filter line resources by specified parameter type and value (getLine)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLine operation.",
        "tags": [
          "line"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/line/{parameter}/{value} (removeLine)",
        "description": "Filter line resources by specified parameter type and value (removeLine)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLine operation.",
        "tags": [
          "line"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/line/{parameter}/{value} (updateLine)",
        "description": "Filter line resources by specified parameter type and value (updateLine)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLine operation.",
        "tags": [
          "line"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/linegroup/{parameter}/{value} (getLineGroup)",
        "description": "Filter linegroup resources by specified parameter type and value (getLineGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/linegroup/{parameter}/{value} (removeLineGroup)",
        "description": "Filter linegroup resources by specified parameter type and value (removeLineGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/linegroup/{parameter}/{value} (updateLineGroup)",
        "description": "Filter linegroup resources by specified parameter type and value (updateLineGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lineoptions": {
      "get": {
        "summary": "GET /api/axl/lineoptions (getLineOptions)",
        "description": "Returns all available lineoptions resources - Returns all available lineoptions resources (getLineOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLineOptions operation.",
        "tags": [
          "lineoption"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lineoptions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lineoptions/{parameter}/{value} (getLineOptions)",
        "description": "Filter lineoptions resources by specified parameter type and value (getLineOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLineOptions operation.",
        "tags": [
          "lineoption"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/localroutegroup/{parameter}/{value} (getLocalRouteGroup)",
        "description": "Filter localroutegroup resources by specified parameter type and value (getLocalRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/localroutegroup/{parameter}/{value} (removeLocalRouteGroup)",
        "description": "Filter localroutegroup resources by specified parameter type and value (removeLocalRouteGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/localroutegroup/{parameter}/{value} (updateLocalRouteGroup)",
        "description": "Filter localroutegroup resources by specified parameter type and value (updateLocalRouteGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/location/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/location/{parameter}/{value} (getLocation)",
        "description": "Filter location resources by specified parameter type and value (getLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getLocation operation.",
        "tags": [
          "location"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/location/{parameter}/{value} (removeLocation)",
        "description": "Filter location resources by specified parameter type and value (removeLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeLocation operation.",
        "tags": [
          "location"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/location/{parameter}/{value} (updateLocation)",
        "description": "Filter location resources by specified parameter type and value (updateLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateLocation operation.",
        "tags": [
          "location"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mediaresourcegroup/{parameter}/{value} (getMediaResourceGroup)",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value (getMediaResourceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mediaresourcegroup/{parameter}/{value} (removeMediaResourceGroup)",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value (removeMediaResourceGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mediaresourcegroup/{parameter}/{value} (updateMediaResourceGroup)",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value (updateMediaResourceGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mediaresourcelist/{parameter}/{value} (getMediaResourceList)",
        "description": "Filter mediaresourcelist resources by specified parameter type and value (getMediaResourceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mediaresourcelist/{parameter}/{value} (removeMediaResourceList)",
        "description": "Filter mediaresourcelist resources by specified parameter type and value (removeMediaResourceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mediaresourcelist/{parameter}/{value} (updateMediaResourceList)",
        "description": "Filter mediaresourcelist resources by specified parameter type and value (updateMediaResourceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetme/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/meetme/{parameter}/{value} (getMeetMe)",
        "description": "Filter meetme resources by specified parameter type and value (getMeetMe)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/meetme/{parameter}/{value} (removeMeetMe)",
        "description": "Filter meetme resources by specified parameter type and value (removeMeetMe)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/meetme/{parameter}/{value} (updateMeetMe)",
        "description": "Filter meetme resources by specified parameter type and value (updateMeetMe)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaiting/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/messagewaiting/{parameter}/{value} (getMessageWaiting)",
        "description": "Filter messagewaiting resources by specified parameter type and value (getMessageWaiting)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/messagewaiting/{parameter}/{value} (removeMessageWaiting)",
        "description": "Filter messagewaiting resources by specified parameter type and value (removeMessageWaiting)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/messagewaiting/{parameter}/{value} (updateMessageWaiting)",
        "description": "Filter messagewaiting resources by specified parameter type and value (updateMessageWaiting)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomain/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mlppdomain/{parameter}/{value} (getMlppDomain)",
        "description": "Filter mlppdomain resources by specified parameter type and value (getMlppDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mlppdomain/{parameter}/{value} (removeMlppDomain)",
        "description": "Filter mlppdomain resources by specified parameter type and value (removeMlppDomain)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mlppdomain/{parameter}/{value} (updateMlppDomain)",
        "description": "Filter mlppdomain resources by specified parameter type and value (updateMlppDomain)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofile": {
      "get": {
        "summary": "GET /api/axl/mobilesmartclientprofile (getMobileSmartClientProfile)",
        "description": "Returns all available mobilesmartclientprofile resources - Returns all available mobilesmartclientprofile resources (getMobileSmartClientProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobileSmartClientProfile operation.",
        "tags": [
          "mobilesmartclientprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobilesmartclientprofile/{parameter}/{value} (getMobileSmartClientProfile)",
        "description": "Filter mobilesmartclientprofile resources by specified parameter type and value (getMobileSmartClientProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobileSmartClientProfile operation.",
        "tags": [
          "mobilesmartclientprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilevoiceaccess/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobilevoiceaccess/{parameter}/{value} (getMobileVoiceAccess)",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value (getMobileVoiceAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mobilevoiceaccess/{parameter}/{value} (removeMobileVoiceAccess)",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value (removeMobileVoiceAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobilevoiceaccess/{parameter}/{value} (updateMobileVoiceAccess)",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value (updateMobileVoiceAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobileVoiceAccess operation.",
        "tags": [
          "mobilevoiceacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobility/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobility/{parameter}/{value} (getMobility)",
        "description": "Filter mobility resources by specified parameter type and value (getMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobility operation.",
        "tags": [
          "mobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobility/{parameter}/{value} (updateMobility)",
        "description": "Filter mobility resources by specified parameter type and value (updateMobility)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobility operation.",
        "tags": [
          "mobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobilityprofile/{parameter}/{value} (getMobilityProfile)",
        "description": "Filter mobilityprofile resources by specified parameter type and value (getMobilityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mobilityprofile/{parameter}/{value} (removeMobilityProfile)",
        "description": "Filter mobilityprofile resources by specified parameter type and value (removeMobilityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mobilityprofile/{parameter}/{value} (updateMobilityProfile)",
        "description": "Filter mobilityprofile resources by specified parameter type and value (updateMobilityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosource": {
      "get": {
        "summary": "GET /api/axl/mohaudiosource (getMohAudioSource)",
        "description": "Returns all available mohaudiosource resources - Returns all available mohaudiosource resources (getMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mohaudiosource (removeMohAudioSource)",
        "description": "Execute removeMohAudioSource AXL operation (removeMohAudioSource)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Identifier options for DELETE",
                  "description": "You can specify either name or uuid in the DELETE body (or use URL parameters)",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Delete by UUID",
                  "description": "UUID is the most reliable identifier for DELETE operations",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mohaudiosource (updateMohAudioSource)",
        "description": "Execute updateMohAudioSource AXL operation (updateMohAudioSource)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mohaudiosource/{parameter}/{value} (getMohAudioSource)",
        "description": "Filter mohaudiosource resources by specified parameter type and value (getMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mohaudiosource/{parameter}/{value} (removeMohAudioSource)",
        "description": "Filter mohaudiosource resources by specified parameter type and value (removeMohAudioSource)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mohaudiosource/{parameter}/{value} (updateMohAudioSource)",
        "description": "Filter mohaudiosource resources by specified parameter type and value (updateMohAudioSource)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohserver": {
      "get": {
        "summary": "GET /api/axl/mohserver (getMohServer)",
        "description": "Returns all available mohserver resources - Returns all available mohserver resources (getMohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mohserver (updateMohServer)",
        "description": "Execute updateMohServer AXL operation (updateMohServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mohserver/{parameter}/{value} (getMohServer)",
        "description": "Filter mohserver resources by specified parameter type and value (getMohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mohserver/{parameter}/{value} (updateMohServer)",
        "description": "Filter mohserver resources by specified parameter type and value (updateMohServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomain/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mraservicedomain/{parameter}/{value} (getMraServiceDomain)",
        "description": "Filter mraservicedomain resources by specified parameter type and value (getMraServiceDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mraservicedomain/{parameter}/{value} (removeMraServiceDomain)",
        "description": "Filter mraservicedomain resources by specified parameter type and value (removeMraServiceDomain)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mraservicedomain/{parameter}/{value} (updateMraServiceDomain)",
        "description": "Filter mraservicedomain resources by specified parameter type and value (updateMraServiceDomain)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtp/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mtp/{parameter}/{value} (getMtp)",
        "description": "Filter mtp resources by specified parameter type and value (getMtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getMtp operation.",
        "tags": [
          "mtp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/mtp/{parameter}/{value} (removeMtp)",
        "description": "Filter mtp resources by specified parameter type and value (removeMtp)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeMtp operation.",
        "tags": [
          "mtp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/mtp/{parameter}/{value} (updateMtp)",
        "description": "Filter mtp resources by specified parameter type and value (updateMtp)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateMtp operation.",
        "tags": [
          "mtp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/networkaccessprofile/{parameter}/{value} (getNetworkAccessProfile)",
        "description": "Filter networkaccessprofile resources by specified parameter type and value (getNetworkAccessProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/networkaccessprofile/{parameter}/{value} (removeNetworkAccessProfile)",
        "description": "Filter networkaccessprofile resources by specified parameter type and value (removeNetworkAccessProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/networkaccessprofile/{parameter}/{value} (updateNetworkAccessProfile)",
        "description": "Filter networkaccessprofile resources by specified parameter type and value (updateNetworkAccessProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/numdevices": {
      "get": {
        "summary": "GET /api/axl/numdevices (getNumDevices)",
        "description": "Returns all available numdevices resources - Returns all available numdevices resources (getNumDevices)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getNumDevices operation.",
        "tags": [
          "numdevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/numdevices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/numdevices/{parameter}/{value} (getNumDevices)",
        "description": "Filter numdevices resources by specified parameter type and value (getNumDevices)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getNumDevices operation.",
        "tags": [
          "numdevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/osversion": {
      "get": {
        "summary": "GET /api/axl/osversion (getOSVersion)",
        "description": "Returns all available osversion resources - Returns all available osversion resources (getOSVersion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getOSVersion operation.",
        "tags": [
          "osversion"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/osversion/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/osversion/{parameter}/{value} (getOSVersion)",
        "description": "Filter osversion resources by specified parameter type and value (getOSVersion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getOSVersion operation.",
        "tags": [
          "osversion"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/pagelayoutpreferences": {
      "get": {
        "summary": "GET /api/axl/pagelayoutpreferences (getPageLayoutPreferences)",
        "description": "Returns all available pagelayoutpreferences resources - Returns all available pagelayoutpreferences resources (getPageLayoutPreferences)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPageLayoutPreferences operation.",
        "tags": [
          "pagelayoutpreference"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/pagelayoutpreferences (updatePageLayoutPreferences)",
        "description": "Execute updatePageLayoutPreferences AXL operation (updatePageLayoutPreferences)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePageLayoutPreferences operation.",
        "tags": [
          "pagelayoutpreference"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/pagelayoutpreferences/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/pagelayoutpreferences/{parameter}/{value} (getPageLayoutPreferences)",
        "description": "Filter pagelayoutpreferences resources by specified parameter type and value (getPageLayoutPreferences)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPageLayoutPreferences operation.",
        "tags": [
          "pagelayoutpreference"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/pagelayoutpreferences/{parameter}/{value} (updatePageLayoutPreferences)",
        "description": "Filter pagelayoutpreferences resources by specified parameter type and value (updatePageLayoutPreferences)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePageLayoutPreferences operation.",
        "tags": [
          "pagelayoutpreference"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phone/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phone/{parameter}/{value} (getPhone)",
        "description": "Filter phone resources by specified parameter type and value (getPhone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhone operation.",
        "tags": [
          "phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phone/{parameter}/{value} (removePhone)",
        "description": "Filter phone resources by specified parameter type and value (removePhone)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhone operation.",
        "tags": [
          "phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phone/{parameter}/{value} (updatePhone)",
        "description": "Filter phone resources by specified parameter type and value (updatePhone)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhone operation.",
        "tags": [
          "phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonebuttontemplate/{parameter}/{value} (getPhoneButtonTemplate)",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value (getPhoneButtonTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonebuttontemplate/{parameter}/{value} (removePhoneButtonTemplate)",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value (removePhoneButtonTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonebuttontemplate/{parameter}/{value} (updatePhoneButtonTemplate)",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value (updatePhoneButtonTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentp/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonentp/{parameter}/{value} (getPhoneNtp)",
        "description": "Filter phonentp resources by specified parameter type and value (getPhoneNtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonentp/{parameter}/{value} (removePhoneNtp)",
        "description": "Filter phonentp resources by specified parameter type and value (removePhoneNtp)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonentp/{parameter}/{value} (updatePhoneNtp)",
        "description": "Filter phonentp resources by specified parameter type and value (updatePhoneNtp)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneoptions": {
      "get": {
        "summary": "GET /api/axl/phoneoptions (getPhoneOptions)",
        "description": "Returns all available phoneoptions resources - Returns all available phoneoptions resources (getPhoneOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneOptions operation.",
        "tags": [
          "phoneoption"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneoptions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phoneoptions/{parameter}/{value} (getPhoneOptions)",
        "description": "Filter phoneoptions resources by specified parameter type and value (getPhoneOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneOptions operation.",
        "tags": [
          "phoneoption"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonesecurityprofile/{parameter}/{value} (getPhoneSecurityProfile)",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value (getPhoneSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/phonesecurityprofile/{parameter}/{value} (removePhoneSecurityProfile)",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value (removePhoneSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/phonesecurityprofile/{parameter}/{value} (updatePhoneSecurityProfile)",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value (updatePhoneSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonetypedisplayinstance": {
      "get": {
        "summary": "GET /api/axl/phonetypedisplayinstance (getPhoneTypeDisplayInstance)",
        "description": "Returns all available phonetypedisplayinstance resources - Returns all available phonetypedisplayinstance resources (getPhoneTypeDisplayInstance)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneTypeDisplayInstance operation.",
        "tags": [
          "phonetypedisplayinstance"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonetypedisplayinstance/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonetypedisplayinstance/{parameter}/{value} (getPhoneTypeDisplayInstance)",
        "description": "Filter phonetypedisplayinstance resources by specified parameter type and value (getPhoneTypeDisplayInstance)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhoneTypeDisplayInstance operation.",
        "tags": [
          "phonetypedisplayinstance"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocation/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/physicallocation/{parameter}/{value} (getPhysicalLocation)",
        "description": "Filter physicallocation resources by specified parameter type and value (getPhysicalLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/physicallocation/{parameter}/{value} (removePhysicalLocation)",
        "description": "Filter physicallocation resources by specified parameter type and value (removePhysicalLocation)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/physicallocation/{parameter}/{value} (updatePhysicalLocation)",
        "description": "Filter physicallocation resources by specified parameter type and value (updatePhysicalLocation)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/presencegroup/{parameter}/{value} (getPresenceGroup)",
        "description": "Filter presencegroup resources by specified parameter type and value (getPresenceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/presencegroup/{parameter}/{value} (removePresenceGroup)",
        "description": "Filter presencegroup resources by specified parameter type and value (removePresenceGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/presencegroup/{parameter}/{value} (updatePresenceGroup)",
        "description": "Filter presencegroup resources by specified parameter type and value (updatePresenceGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/presenceredundancygroup/{parameter}/{value} (getPresenceRedundancyGroup)",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value (getPresenceRedundancyGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getPresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/presenceredundancygroup/{parameter}/{value} (removePresenceRedundancyGroup)",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value (removePresenceRedundancyGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/presenceredundancygroup/{parameter}/{value} (updatePresenceRedundancyGroup)",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value (updatePresenceRedundancyGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updatePresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnode/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/processnode/{parameter}/{value} (getProcessNode)",
        "description": "Filter processnode resources by specified parameter type and value (getProcessNode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/processnode/{parameter}/{value} (removeProcessNode)",
        "description": "Filter processnode resources by specified parameter type and value (removeProcessNode)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/processnode/{parameter}/{value} (updateProcessNode)",
        "description": "Filter processnode resources by specified parameter type and value (updateProcessNode)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservice": {
      "get": {
        "summary": "GET /api/axl/processnodeservice (getProcessNodeService)",
        "description": "Returns all available processnodeservice resources - Returns all available processnodeservice resources (getProcessNodeService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/processnodeservice (updateProcessNodeService)",
        "description": "Execute updateProcessNodeService AXL operation (updateProcessNodeService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservice/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/processnodeservice/{parameter}/{value} (getProcessNodeService)",
        "description": "Filter processnodeservice resources by specified parameter type and value (getProcessNodeService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/processnodeservice/{parameter}/{value} (updateProcessNodeService)",
        "description": "Filter processnodeservice resources by specified parameter type and value (updateProcessNodeService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/recordingprofile/{parameter}/{value} (getRecordingProfile)",
        "description": "Filter recordingprofile resources by specified parameter type and value (getRecordingProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/recordingprofile/{parameter}/{value} (removeRecordingProfile)",
        "description": "Filter recordingprofile resources by specified parameter type and value (removeRecordingProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/recordingprofile/{parameter}/{value} (updateRecordingProfile)",
        "description": "Filter recordingprofile resources by specified parameter type and value (updateRecordingProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/region/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/region/{parameter}/{value} (getRegion)",
        "description": "Filter region resources by specified parameter type and value (getRegion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRegion operation.",
        "tags": [
          "region"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/region/{parameter}/{value} (removeRegion)",
        "description": "Filter region resources by specified parameter type and value (removeRegion)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRegion operation.",
        "tags": [
          "region"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/region/{parameter}/{value} (updateRegion)",
        "description": "Filter region resources by specified parameter type and value (updateRegion)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRegion operation.",
        "tags": [
          "region"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamic": {
      "get": {
        "summary": "GET /api/axl/registrationdynamic (getRegistrationDynamic)",
        "description": "Returns all available registrationdynamic resources - Returns all available registrationdynamic resources (getRegistrationDynamic)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRegistrationDynamic operation.",
        "tags": [
          "registrationdynamic"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamic/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/registrationdynamic/{parameter}/{value} (getRegistrationDynamic)",
        "description": "Filter registrationdynamic resources by specified parameter type and value (getRegistrationDynamic)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRegistrationDynamic operation.",
        "tags": [
          "registrationdynamic"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotecluster/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remotecluster/{parameter}/{value} (getRemoteCluster)",
        "description": "Filter remotecluster resources by specified parameter type and value (getRemoteCluster)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotecluster/{parameter}/{value} (removeRemoteCluster)",
        "description": "Filter remotecluster resources by specified parameter type and value (removeRemoteCluster)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotecluster/{parameter}/{value} (updateRemoteCluster)",
        "description": "Filter remotecluster resources by specified parameter type and value (updateRemoteCluster)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestination/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remotedestination/{parameter}/{value} (getRemoteDestination)",
        "description": "Filter remotedestination resources by specified parameter type and value (getRemoteDestination)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotedestination/{parameter}/{value} (removeRemoteDestination)",
        "description": "Filter remotedestination resources by specified parameter type and value (removeRemoteDestination)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotedestination/{parameter}/{value} (updateRemoteDestination)",
        "description": "Filter remotedestination resources by specified parameter type and value (updateRemoteDestination)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remotedestinationprofile/{parameter}/{value} (getRemoteDestinationProfile)",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value (getRemoteDestinationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/remotedestinationprofile/{parameter}/{value} (removeRemoteDestinationProfile)",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value (removeRemoteDestinationProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/remotedestinationprofile/{parameter}/{value} (updateRemoteDestinationProfile)",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value (updateRemoteDestinationProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespace/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespace/{parameter}/{value} (getResourcePriorityNamespace)",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value (getResourcePriorityNamespace)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/resourceprioritynamespace/{parameter}/{value} (removeResourcePriorityNamespace)",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value (removeResourcePriorityNamespace)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/resourceprioritynamespace/{parameter}/{value} (updateResourcePriorityNamespace)",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value (updateResourcePriorityNamespace)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespacelist/{parameter}/{value} (getResourcePriorityNamespaceList)",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value (getResourcePriorityNamespaceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/resourceprioritynamespacelist/{parameter}/{value} (removeResourcePriorityNamespaceList)",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value (removeResourcePriorityNamespaceList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/resourceprioritynamespacelist/{parameter}/{value} (updateResourcePriorityNamespaceList)",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value (updateResourcePriorityNamespaceList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilter/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routefilter/{parameter}/{value} (getRouteFilter)",
        "description": "Filter routefilter resources by specified parameter type and value (getRouteFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routefilter/{parameter}/{value} (removeRouteFilter)",
        "description": "Filter routefilter resources by specified parameter type and value (removeRouteFilter)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routefilter/{parameter}/{value} (updateRouteFilter)",
        "description": "Filter routefilter resources by specified parameter type and value (updateRouteFilter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routegroup/{parameter}/{value} (getRouteGroup)",
        "description": "Filter routegroup resources by specified parameter type and value (getRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routegroup/{parameter}/{value} (removeRouteGroup)",
        "description": "Filter routegroup resources by specified parameter type and value (removeRouteGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routegroup/{parameter}/{value} (updateRouteGroup)",
        "description": "Filter routegroup resources by specified parameter type and value (updateRouteGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelist/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routelist/{parameter}/{value} (getRouteList)",
        "description": "Filter routelist resources by specified parameter type and value (getRouteList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRouteList operation.",
        "tags": [
          "routelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routelist/{parameter}/{value} (removeRouteList)",
        "description": "Filter routelist resources by specified parameter type and value (removeRouteList)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRouteList operation.",
        "tags": [
          "routelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routelist/{parameter}/{value} (updateRouteList)",
        "description": "Filter routelist resources by specified parameter type and value (updateRouteList)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRouteList operation.",
        "tags": [
          "routelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartition/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routepartition/{parameter}/{value} (getRoutePartition)",
        "description": "Filter routepartition resources by specified parameter type and value (getRoutePartition)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routepartition/{parameter}/{value} (removeRoutePartition)",
        "description": "Filter routepartition resources by specified parameter type and value (removeRoutePartition)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routepartition/{parameter}/{value} (updateRoutePartition)",
        "description": "Filter routepartition resources by specified parameter type and value (updateRoutePartition)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routepattern/{parameter}/{value} (getRoutePattern)",
        "description": "Filter routepattern resources by specified parameter type and value (getRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/routepattern/{parameter}/{value} (removeRoutePattern)",
        "description": "Filter routepattern resources by specified parameter type and value (removeRoutePattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/routepattern/{parameter}/{value} (updateRoutePattern)",
        "description": "Filter routepattern resources by specified parameter type and value (updateRoutePattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safccdpurgeblocklearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/safccdpurgeblocklearnedroutes/{parameter}/{value} (listSafCcdPurgeBlockLearnedRoutes)",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value (listSafCcdPurgeBlockLearnedRoutes)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safccdpurgeblocklearnedroutes/{parameter}/{value} (removeSafCcdPurgeBlockLearnedRoutes)",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value (removeSafCcdPurgeBlockLearnedRoutes)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safccdpurgeblocklearnedroutes/{parameter}/{value} (updateSafCcdPurgeBlockLearnedRoutes)",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value (updateSafCcdPurgeBlockLearnedRoutes)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafCcdPurgeBlockLearnedRoutes operation.",
        "tags": [
          "safccdpurgeblocklearnedroute"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarder/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/safforwarder/{parameter}/{value} (getSafForwarder)",
        "description": "Filter safforwarder resources by specified parameter type and value (getSafForwarder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safforwarder/{parameter}/{value} (removeSafForwarder)",
        "description": "Filter safforwarder resources by specified parameter type and value (removeSafForwarder)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safforwarder/{parameter}/{value} (updateSafForwarder)",
        "description": "Filter safforwarder resources by specified parameter type and value (updateSafForwarder)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/safsecurityprofile/{parameter}/{value} (getSafSecurityProfile)",
        "description": "Filter safsecurityprofile resources by specified parameter type and value (getSafSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/safsecurityprofile/{parameter}/{value} (removeSafSecurityProfile)",
        "description": "Filter safsecurityprofile resources by specified parameter type and value (removeSafSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/safsecurityprofile/{parameter}/{value} (updateSafSecurityProfile)",
        "description": "Filter safsecurityprofile resources by specified parameter type and value (updateSafSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sdptransparencyprofile/{parameter}/{value} (getSdpTransparencyProfile)",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value (getSdpTransparencyProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sdptransparencyprofile/{parameter}/{value} (removeSdpTransparencyProfile)",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value (removeSdpTransparencyProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sdptransparencyprofile/{parameter}/{value} (updateSdpTransparencyProfile)",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value (updateSdpTransparencyProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/secureconfig": {
      "get": {
        "summary": "GET /api/axl/secureconfig (getSecureConfig)",
        "description": "Returns all available secureconfig resources - Returns all available secureconfig resources (getSecureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSecureConfig operation.",
        "tags": [
          "secureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/secureconfig (updateSecureConfig)",
        "description": "Execute updateSecureConfig AXL operation (updateSecureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSecureConfig operation.",
        "tags": [
          "secureconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/secureconfig/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/secureconfig/{parameter}/{value} (getSecureConfig)",
        "description": "Filter secureconfig resources by specified parameter type and value (getSecureConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSecureConfig operation.",
        "tags": [
          "secureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/secureconfig/{parameter}/{value} (updateSecureConfig)",
        "description": "Filter secureconfig resources by specified parameter type and value (updateSecureConfig)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSecureConfig operation.",
        "tags": [
          "secureconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameter": {
      "get": {
        "summary": "GET /api/axl/serviceparameter (getServiceParameter)",
        "description": "Returns all available serviceparameter resources - Returns all available serviceparameter resources (getServiceParameter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/serviceparameter (updateServiceParameter)",
        "description": "Execute updateServiceParameter AXL operation (updateServiceParameter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameter/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/serviceparameter/{parameter}/{value} (getServiceParameter)",
        "description": "Filter serviceparameter resources by specified parameter type and value (getServiceParameter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/serviceparameter/{parameter}/{value} (updateServiceParameter)",
        "description": "Filter serviceparameter resources by specified parameter type and value (updateServiceParameter)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/serviceprofile/{parameter}/{value} (getServiceProfile)",
        "description": "Filter serviceprofile resources by specified parameter type and value (getServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/serviceprofile/{parameter}/{value} (removeServiceProfile)",
        "description": "Filter serviceprofile resources by specified parameter type and value (removeServiceProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/serviceprofile/{parameter}/{value} (updateServiceProfile)",
        "description": "Filter serviceprofile resources by specified parameter type and value (updateServiceProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipdialrules/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipdialrules/{parameter}/{value} (listSipDialRules)",
        "description": "Filter sipdialrules resources by specified parameter type and value (listSipDialRules)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipdialrules/{parameter}/{value} (removeSipDialRules)",
        "description": "Filter sipdialrules resources by specified parameter type and value (removeSipDialRules)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipdialrules/{parameter}/{value} (updateSipDialRules)",
        "description": "Filter sipdialrules resources by specified parameter type and value (updateSipDialRules)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipDialRules operation.",
        "tags": [
          "sipdialrule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscript/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipnormalizationscript/{parameter}/{value} (getSIPNormalizationScript)",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value (getSIPNormalizationScript)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipnormalizationscript/{parameter}/{value} (removeSIPNormalizationScript)",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value (removeSIPNormalizationScript)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipnormalizationscript/{parameter}/{value} (updateSIPNormalizationScript)",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value (updateSIPNormalizationScript)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipprofile/{parameter}/{value} (getSipProfile)",
        "description": "Filter sipprofile resources by specified parameter type and value (getSipProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/sipprofile/{parameter}/{value} (removeSipProfile)",
        "description": "Filter sipprofile resources by specified parameter type and value (removeSipProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/sipprofile/{parameter}/{value} (updateSipProfile)",
        "description": "Filter sipprofile resources by specified parameter type and value (updateSipProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofileoptions": {
      "get": {
        "summary": "GET /api/axl/sipprofileoptions (getSipProfileOptions)",
        "description": "Returns all available sipprofileoptions resources - Returns all available sipprofileoptions resources (getSipProfileOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipProfileOptions operation.",
        "tags": [
          "sipprofileoption"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipprofileoptions/{parameter}/{value} (getSipProfileOptions)",
        "description": "Filter sipprofileoptions resources by specified parameter type and value (getSipProfileOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipProfileOptions operation.",
        "tags": [
          "sipprofileoption"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealm/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siprealm/{parameter}/{value} (getSipRealm)",
        "description": "Filter siprealm resources by specified parameter type and value (getSipRealm)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siprealm/{parameter}/{value} (removeSipRealm)",
        "description": "Filter siprealm resources by specified parameter type and value (removeSipRealm)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siprealm/{parameter}/{value} (updateSipRealm)",
        "description": "Filter siprealm resources by specified parameter type and value (updateSipRealm)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siproutepattern/{parameter}/{value} (getSipRoutePattern)",
        "description": "Filter siproutepattern resources by specified parameter type and value (getSipRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siproutepattern/{parameter}/{value} (removeSipRoutePattern)",
        "description": "Filter siproutepattern resources by specified parameter type and value (removeSipRoutePattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siproutepattern/{parameter}/{value} (updateSipRoutePattern)",
        "description": "Filter siproutepattern resources by specified parameter type and value (updateSipRoutePattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunk/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siptrunk/{parameter}/{value} (getSipTrunk)",
        "description": "Filter siptrunk resources by specified parameter type and value (getSipTrunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siptrunk/{parameter}/{value} (removeSipTrunk)",
        "description": "Filter siptrunk resources by specified parameter type and value (removeSipTrunk)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siptrunk/{parameter}/{value} (updateSipTrunk)",
        "description": "Filter siptrunk resources by specified parameter type and value (updateSipTrunk)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siptrunksecurityprofile/{parameter}/{value} (getSipTrunkSecurityProfile)",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value (getSipTrunkSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/siptrunksecurityprofile/{parameter}/{value} (removeSipTrunkSecurityProfile)",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value (removeSipTrunkSecurityProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/siptrunksecurityprofile/{parameter}/{value} (updateSipTrunkSecurityProfile)",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value (updateSipTrunkSecurityProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/smartlicensestatus": {
      "get": {
        "summary": "GET /api/axl/smartlicensestatus (getSmartLicenseStatus)",
        "description": "Returns all available smartlicensestatus resources - Returns all available smartlicensestatus resources (getSmartLicenseStatus)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSmartLicenseStatus operation.",
        "tags": [
          "smartlicensestatu"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/smartlicensestatus/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/smartlicensestatus/{parameter}/{value} (getSmartLicenseStatus)",
        "description": "Filter smartlicensestatus resources by specified parameter type and value (getSmartLicenseStatus)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSmartLicenseStatus operation.",
        "tags": [
          "smartlicensestatu"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpcommunitystring/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/snmpcommunitystring/{parameter}/{value} (getSNMPCommunityString)",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value (getSNMPCommunityString)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/snmpcommunitystring/{parameter}/{value} (removeSNMPCommunityString)",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value (removeSNMPCommunityString)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpcommunitystring/{parameter}/{value} (updateSNMPCommunityString)",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value (updateSNMPCommunityString)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPCommunityString operation.",
        "tags": [
          "snmpcommunitystring"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpmib2list": {
      "get": {
        "summary": "GET /api/axl/snmpmib2list (getSNMPMIB2List)",
        "description": "Returns all available snmpmib2list resources - Returns all available snmpmib2list resources (getSNMPMIB2List)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPMIB2List operation.",
        "tags": [
          "snmpmib2list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpmib2list (updateSNMPMIB2List)",
        "description": "Execute updateSNMPMIB2List AXL operation (updateSNMPMIB2List)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPMIB2List operation.",
        "tags": [
          "snmpmib2list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpmib2list/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/snmpmib2list/{parameter}/{value} (getSNMPMIB2List)",
        "description": "Filter snmpmib2list resources by specified parameter type and value (getSNMPMIB2List)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPMIB2List operation.",
        "tags": [
          "snmpmib2list"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpmib2list/{parameter}/{value} (updateSNMPMIB2List)",
        "description": "Filter snmpmib2list resources by specified parameter type and value (updateSNMPMIB2List)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPMIB2List operation.",
        "tags": [
          "snmpmib2list"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpuser/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/snmpuser/{parameter}/{value} (getSNMPUser)",
        "description": "Filter snmpuser resources by specified parameter type and value (getSNMPUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/snmpuser/{parameter}/{value} (removeSNMPUser)",
        "description": "Filter snmpuser resources by specified parameter type and value (removeSNMPUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/snmpuser/{parameter}/{value} (updateSNMPUser)",
        "description": "Filter snmpuser resources by specified parameter type and value (updateSNMPUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSNMPUser operation.",
        "tags": [
          "snmpuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeyset": {
      "get": {
        "summary": "GET /api/axl/softkeyset (getSoftKeySet)",
        "description": "Returns all available softkeyset resources - Returns all available softkeyset resources (getSoftKeySet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSoftKeySet operation.",
        "tags": [
          "softkeyset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/softkeyset (updateSoftKeySet)",
        "description": "Execute updateSoftKeySet AXL operation (updateSoftKeySet)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSoftKeySet operation.",
        "tags": [
          "softkeyset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeyset/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/softkeyset/{parameter}/{value} (getSoftKeySet)",
        "description": "Filter softkeyset resources by specified parameter type and value (getSoftKeySet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSoftKeySet operation.",
        "tags": [
          "softkeyset"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/softkeyset/{parameter}/{value} (updateSoftKeySet)",
        "description": "Filter softkeyset resources by specified parameter type and value (updateSoftKeySet)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSoftKeySet operation.",
        "tags": [
          "softkeyset"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/softkeytemplate/{parameter}/{value} (getSoftKeyTemplate)",
        "description": "Filter softkeytemplate resources by specified parameter type and value (getSoftKeyTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/softkeytemplate/{parameter}/{value} (removeSoftKeyTemplate)",
        "description": "Filter softkeytemplate resources by specified parameter type and value (removeSoftKeyTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/softkeytemplate/{parameter}/{value} (updateSoftKeyTemplate)",
        "description": "Filter softkeytemplate resources by specified parameter type and value (updateSoftKeyTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srst/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/srst/{parameter}/{value} (getSrst)",
        "description": "Filter srst resources by specified parameter type and value (getSrst)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSrst operation.",
        "tags": [
          "srst"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/srst/{parameter}/{value} (removeSrst)",
        "description": "Filter srst resources by specified parameter type and value (removeSrst)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeSrst operation.",
        "tags": [
          "srst"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/srst/{parameter}/{value} (updateSrst)",
        "description": "Filter srst resources by specified parameter type and value (updateSrst)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSrst operation.",
        "tags": [
          "srst"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/syslogconfiguration": {
      "get": {
        "summary": "GET /api/axl/syslogconfiguration (getSyslogConfiguration)",
        "description": "Returns all available syslogconfiguration resources - Returns all available syslogconfiguration resources (getSyslogConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSyslogConfiguration operation.",
        "tags": [
          "syslogconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/syslogconfiguration (updateSyslogConfiguration)",
        "description": "Execute updateSyslogConfiguration AXL operation (updateSyslogConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSyslogConfiguration operation.",
        "tags": [
          "syslogconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/syslogconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/syslogconfiguration/{parameter}/{value} (getSyslogConfiguration)",
        "description": "Filter syslogconfiguration resources by specified parameter type and value (getSyslogConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getSyslogConfiguration operation.",
        "tags": [
          "syslogconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/syslogconfiguration/{parameter}/{value} (updateSyslogConfiguration)",
        "description": "Filter syslogconfiguration resources by specified parameter type and value (updateSyslogConfiguration)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSyslogConfiguration operation.",
        "tags": [
          "syslogconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiod/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/timeperiod/{parameter}/{value} (getTimePeriod)",
        "description": "Filter timeperiod resources by specified parameter type and value (getTimePeriod)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/timeperiod/{parameter}/{value} (removeTimePeriod)",
        "description": "Filter timeperiod resources by specified parameter type and value (removeTimePeriod)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/timeperiod/{parameter}/{value} (updateTimePeriod)",
        "description": "Filter timeperiod resources by specified parameter type and value (updateTimePeriod)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedule/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/timeschedule/{parameter}/{value} (getTimeSchedule)",
        "description": "Filter timeschedule resources by specified parameter type and value (getTimeSchedule)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/timeschedule/{parameter}/{value} (removeTimeSchedule)",
        "description": "Filter timeschedule resources by specified parameter type and value (removeTimeSchedule)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/timeschedule/{parameter}/{value} (updateTimeSchedule)",
        "description": "Filter timeschedule resources by specified parameter type and value (updateTimeSchedule)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/todaccess/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/todaccess/{parameter}/{value} (listTodAccess)",
        "description": "Filter todaccess resources by specified parameter type and value (listTodAccess)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/todaccess/{parameter}/{value} (removeTodAccess)",
        "description": "Filter todaccess resources by specified parameter type and value (removeTodAccess)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/todaccess/{parameter}/{value} (updateTodAccess)",
        "description": "Filter todaccess resources by specified parameter type and value (updateTodAccess)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTodAccess operation.",
        "tags": [
          "todacces"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoder/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transcoder/{parameter}/{value} (getTranscoder)",
        "description": "Filter transcoder resources by specified parameter type and value (getTranscoder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transcoder/{parameter}/{value} (removeTranscoder)",
        "description": "Filter transcoder resources by specified parameter type and value (removeTranscoder)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transcoder/{parameter}/{value} (updateTranscoder)",
        "description": "Filter transcoder resources by specified parameter type and value (updateTranscoder)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transformationprofile/{parameter}/{value} (getTransformationProfile)",
        "description": "Filter transformationprofile resources by specified parameter type and value (getTransformationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transformationprofile/{parameter}/{value} (removeTransformationProfile)",
        "description": "Filter transformationprofile resources by specified parameter type and value (removeTransformationProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transformationprofile/{parameter}/{value} (updateTransformationProfile)",
        "description": "Filter transformationprofile resources by specified parameter type and value (updateTransformationProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpattern/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transpattern/{parameter}/{value} (getTransPattern)",
        "description": "Filter transpattern resources by specified parameter type and value (getTransPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/transpattern/{parameter}/{value} (removeTransPattern)",
        "description": "Filter transpattern resources by specified parameter type and value (removeTransPattern)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/transpattern/{parameter}/{value} (updateTransPattern)",
        "description": "Filter transpattern resources by specified parameter type and value (updateTransPattern)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatternoptions": {
      "get": {
        "summary": "GET /api/axl/transpatternoptions (getTransPatternOptions)",
        "description": "Returns all available transpatternoptions resources - Returns all available transpatternoptions resources (getTransPatternOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransPatternOptions operation.",
        "tags": [
          "transpatternoption"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatternoptions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transpatternoptions/{parameter}/{value} (getTransPatternOptions)",
        "description": "Filter transpatternoptions resources by specified parameter type and value (getTransPatternOptions)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransPatternOptions operation.",
        "tags": [
          "transpatternoption"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transportsettings": {
      "get": {
        "summary": "GET /api/axl/transportsettings (getTransportSettings)",
        "description": "Returns all available transportsettings resources - Returns all available transportsettings resources (getTransportSettings)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransportSettings operation.",
        "tags": [
          "transportsetting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transportsettings/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transportsettings/{parameter}/{value} (getTransportSettings)",
        "description": "Filter transportsettings resources by specified parameter type and value (getTransportSettings)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTransportSettings operation.",
        "tags": [
          "transportsetting"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificate": {
      "get": {
        "summary": "GET /api/axl/tvscertificate (getTvsCertificate)",
        "description": "Returns all available tvscertificate resources - Returns all available tvscertificate resources (getTvsCertificate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/tvscertificate (updateTvsCertificate)",
        "description": "Execute updateTvsCertificate AXL operation (updateTvsCertificate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/tvscertificate/{parameter}/{value} (getTvsCertificate)",
        "description": "Filter tvscertificate resources by specified parameter type and value (getTvsCertificate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/tvscertificate/{parameter}/{value} (updateTvsCertificate)",
        "description": "Filter tvscertificate resources by specified parameter type and value (updateTvsCertificate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservice/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ucservice/{parameter}/{value} (getUcService)",
        "description": "Filter ucservice resources by specified parameter type and value (getUcService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUcService operation.",
        "tags": [
          "ucservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/ucservice/{parameter}/{value} (removeUcService)",
        "description": "Filter ucservice resources by specified parameter type and value (removeUcService)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUcService operation.",
        "tags": [
          "ucservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/ucservice/{parameter}/{value} (updateUcService)",
        "description": "Filter ucservice resources by specified parameter type and value (updateUcService)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUcService operation.",
        "tags": [
          "ucservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/universaldevicetemplate/{parameter}/{value} (getUniversalDeviceTemplate)",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value (getUniversalDeviceTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/universaldevicetemplate/{parameter}/{value} (removeUniversalDeviceTemplate)",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value (removeUniversalDeviceTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/universaldevicetemplate/{parameter}/{value} (updateUniversalDeviceTemplate)",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value (updateUniversalDeviceTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplate/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/universallinetemplate/{parameter}/{value} (getUniversalLineTemplate)",
        "description": "Filter universallinetemplate resources by specified parameter type and value (getUniversalLineTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/universallinetemplate/{parameter}/{value} (removeUniversalLineTemplate)",
        "description": "Filter universallinetemplate resources by specified parameter type and value (removeUniversalLineTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/universallinetemplate/{parameter}/{value} (updateUniversalLineTemplate)",
        "description": "Filter universallinetemplate resources by specified parameter type and value (updateUniversalLineTemplate)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/user/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/user/{parameter}/{value} (getUser)",
        "description": "Filter user resources by specified parameter type and value (getUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUser operation.",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/user/{parameter}/{value} (removeUser)",
        "description": "Filter user resources by specified parameter type and value (removeUser)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUser operation.",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/user/{parameter}/{value} (updateUser)",
        "description": "Filter user resources by specified parameter type and value (updateUser)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUser operation.",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/usergroup/{parameter}/{value} (getUserGroup)",
        "description": "Filter usergroup resources by specified parameter type and value (getUserGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/usergroup/{parameter}/{value} (removeUserGroup)",
        "description": "Filter usergroup resources by specified parameter type and value (removeUserGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/usergroup/{parameter}/{value} (updateUserGroup)",
        "description": "Filter usergroup resources by specified parameter type and value (updateUserGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovision/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/userprofileprovision/{parameter}/{value} (getUserProfileProvision)",
        "description": "Filter userprofileprovision resources by specified parameter type and value (getUserProfileProvision)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/userprofileprovision/{parameter}/{value} (removeUserProfileProvision)",
        "description": "Filter userprofileprovision resources by specified parameter type and value (removeUserProfileProvision)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/userprofileprovision/{parameter}/{value} (updateUserProfileProvision)",
        "description": "Filter userprofileprovision resources by specified parameter type and value (updateUserProfileProvision)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vg224/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vg224/{parameter}/{value} (getVg224)",
        "description": "Filter vg224 resources by specified parameter type and value (getVg224)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVg224 operation.",
        "tags": [
          "vg224"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vg224/{parameter}/{value} (removeVg224)",
        "description": "Filter vg224 resources by specified parameter type and value (removeVg224)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVg224 operation.",
        "tags": [
          "vg224"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vg224/{parameter}/{value} (updateVg224)",
        "description": "Filter vg224 resources by specified parameter type and value (updateVg224)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVg224 operation.",
        "tags": [
          "vg224"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohserver/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vohserver/{parameter}/{value} (getVohServer)",
        "description": "Filter vohserver resources by specified parameter type and value (getVohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vohserver/{parameter}/{value} (removeVohServer)",
        "description": "Filter vohserver resources by specified parameter type and value (removeVohServer)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vohserver/{parameter}/{value} (updateVohServer)",
        "description": "Filter vohserver resources by specified parameter type and value (updateVohServer)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilot/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailpilot/{parameter}/{value} (getVoiceMailPilot)",
        "description": "Filter voicemailpilot resources by specified parameter type and value (getVoiceMailPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailpilot/{parameter}/{value} (removeVoiceMailPilot)",
        "description": "Filter voicemailpilot resources by specified parameter type and value (removeVoiceMailPilot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailpilot/{parameter}/{value} (updateVoiceMailPilot)",
        "description": "Filter voicemailpilot resources by specified parameter type and value (updateVoiceMailPilot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailport/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailport/{parameter}/{value} (getVoiceMailPort)",
        "description": "Filter voicemailport resources by specified parameter type and value (getVoiceMailPort)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailport/{parameter}/{value} (removeVoiceMailPort)",
        "description": "Filter voicemailport resources by specified parameter type and value (removeVoiceMailPort)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailport/{parameter}/{value} (updateVoiceMailPort)",
        "description": "Filter voicemailport resources by specified parameter type and value (updateVoiceMailPort)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailprofile/{parameter}/{value} (getVoiceMailProfile)",
        "description": "Filter voicemailprofile resources by specified parameter type and value (getVoiceMailProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/voicemailprofile/{parameter}/{value} (removeVoiceMailProfile)",
        "description": "Filter voicemailprofile resources by specified parameter type and value (removeVoiceMailProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/voicemailprofile/{parameter}/{value} (updateVoiceMailProfile)",
        "description": "Filter voicemailprofile resources by specified parameter type and value (updateVoiceMailProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateway/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpngateway/{parameter}/{value} (getVpnGateway)",
        "description": "Filter vpngateway resources by specified parameter type and value (getVpnGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpngateway/{parameter}/{value} (removeVpnGateway)",
        "description": "Filter vpngateway resources by specified parameter type and value (removeVpnGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpngateway/{parameter}/{value} (updateVpnGateway)",
        "description": "Filter vpngateway resources by specified parameter type and value (updateVpnGateway)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpngroup/{parameter}/{value} (getVpnGroup)",
        "description": "Filter vpngroup resources by specified parameter type and value (getVpnGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpngroup/{parameter}/{value} (removeVpnGroup)",
        "description": "Filter vpngroup resources by specified parameter type and value (removeVpnGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpngroup/{parameter}/{value} (updateVpnGroup)",
        "description": "Filter vpngroup resources by specified parameter type and value (updateVpnGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpnprofile/{parameter}/{value} (getVpnProfile)",
        "description": "Filter vpnprofile resources by specified parameter type and value (getVpnProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/vpnprofile/{parameter}/{value} (removeVpnProfile)",
        "description": "Filter vpnprofile resources by specified parameter type and value (removeVpnProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/vpnprofile/{parameter}/{value} (updateVpnProfile)",
        "description": "Filter vpnprofile resources by specified parameter type and value (updateVpnProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspot/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wifihotspot/{parameter}/{value} (getWifiHotspot)",
        "description": "Filter wifihotspot resources by specified parameter type and value (getWifiHotspot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wifihotspot/{parameter}/{value} (removeWifiHotspot)",
        "description": "Filter wifihotspot resources by specified parameter type and value (removeWifiHotspot)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wifihotspot/{parameter}/{value} (updateWifiHotspot)",
        "description": "Filter wifihotspot resources by specified parameter type and value (updateWifiHotspot)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wirelessaccesspointcontrollers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wirelessaccesspointcontrollers/{parameter}/{value} (listWirelessAccessPointControllers)",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value (listWirelessAccessPointControllers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wirelessaccesspointcontrollers/{parameter}/{value} (removeWirelessAccessPointControllers)",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value (removeWirelessAccessPointControllers)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wirelessaccesspointcontrollers/{parameter}/{value} (updateWirelessAccessPointControllers)",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value (updateWirelessAccessPointControllers)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWirelessAccessPointControllers operation.",
        "tags": [
          "wirelessaccesspointcontroller"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofile/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wlanprofile/{parameter}/{value} (getWLANProfile)",
        "description": "Filter wlanprofile resources by specified parameter type and value (getWLANProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wlanprofile/{parameter}/{value} (removeWLANProfile)",
        "description": "Filter wlanprofile resources by specified parameter type and value (removeWLANProfile)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wlanprofile/{parameter}/{value} (updateWLANProfile)",
        "description": "Filter wlanprofile resources by specified parameter type and value (updateWLANProfile)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroup/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wlanprofilegroup/{parameter}/{value} (getWlanProfileGroup)",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value (getWlanProfileGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the getWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DELETE /api/axl/wlanprofilegroup/{parameter}/{value} (removeWlanProfileGroup)",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value (removeWlanProfileGroup)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "PATCH /api/axl/wlanprofilegroup/{parameter}/{value} (updateWlanProfileGroup)",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value (updateWlanProfileGroup)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroups": {
      "get": {
        "summary": "GET /api/axl/aargroups (listAarGroup)",
        "description": "Returns all available aargroups resources - Returns all available aargroups resources (listAarGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/aargroups/{parameter}/{value} (listAarGroup)",
        "description": "Filter aargroups resources by specified parameter type and value (listAarGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAarGroup operation.",
        "tags": [
          "aargroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcements": {
      "get": {
        "summary": "GET /api/axl/announcements (listAnnouncement)",
        "description": "Returns all available announcements resources - Returns all available announcements resources (listAnnouncement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcements/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/announcements/{parameter}/{value} (listAnnouncement)",
        "description": "Filter announcements resources by specified parameter type and value (listAnnouncement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAnnouncement operation.",
        "tags": [
          "announcement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciators": {
      "get": {
        "summary": "GET /api/axl/annunciators (listAnnunciator)",
        "description": "Returns all available annunciators resources - Returns all available annunciators resources (listAnnunciator)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciators/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/annunciators/{parameter}/{value} (listAnnunciator)",
        "description": "Filter annunciators resources by specified parameter type and value (listAnnunciator)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAnnunciator operation.",
        "tags": [
          "annunciator"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationservers": {
      "get": {
        "summary": "GET /api/axl/applicationservers (listApplicationServer)",
        "description": "Returns all available applicationservers resources - Returns all available applicationservers resources (listApplicationServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/applicationservers/{parameter}/{value} (listApplicationServer)",
        "description": "Filter applicationservers resources by specified parameter type and value (listApplicationServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationServer operation.",
        "tags": [
          "applicationserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofiles": {
      "get": {
        "summary": "GET /api/axl/applicationusercapfprofiles (listApplicationUserCapfProfile)",
        "description": "Returns all available applicationusercapfprofiles resources - Returns all available applicationusercapfprofiles resources (listApplicationUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/applicationusercapfprofiles/{parameter}/{value} (listApplicationUserCapfProfile)",
        "description": "Filter applicationusercapfprofiles resources by specified parameter type and value (listApplicationUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listApplicationUserCapfProfile operation.",
        "tags": [
          "applicationusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appusers": {
      "get": {
        "summary": "GET /api/axl/appusers (listAppUser)",
        "description": "Returns all available appusers resources - Returns all available appusers resources (listAppUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAppUser operation.",
        "tags": [
          "appuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appusers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/appusers/{parameter}/{value} (listAppUser)",
        "description": "Filter appusers resources by specified parameter type and value (listAppUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAppUser operation.",
        "tags": [
          "appuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceservers": {
      "get": {
        "summary": "GET /api/axl/assignedpresenceservers (listAssignedPresenceServers)",
        "description": "Returns all available assignedpresenceservers resources - Returns all available assignedpresenceservers resources (listAssignedPresenceServers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAssignedPresenceServers operation.",
        "tags": [
          "assignedpresenceserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/assignedpresenceservers/{parameter}/{value} (listAssignedPresenceServers)",
        "description": "Filter assignedpresenceservers resources by specified parameter type and value (listAssignedPresenceServers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAssignedPresenceServers operation.",
        "tags": [
          "assignedpresenceserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceusers": {
      "get": {
        "summary": "GET /api/axl/assignedpresenceusers (listAssignedPresenceUsers)",
        "description": "Returns all available assignedpresenceusers resources - Returns all available assignedpresenceusers resources (listAssignedPresenceUsers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAssignedPresenceUsers operation.",
        "tags": [
          "assignedpresenceuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceusers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/assignedpresenceusers/{parameter}/{value} (listAssignedPresenceUsers)",
        "description": "Filter assignedpresenceusers resources by specified parameter type and value (listAssignedPresenceUsers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAssignedPresenceUsers operation.",
        "tags": [
          "assignedpresenceuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelists": {
      "get": {
        "summary": "GET /api/axl/audiocodecpreferencelists (listAudioCodecPreferenceList)",
        "description": "Returns all available audiocodecpreferencelists resources - Returns all available audiocodecpreferencelists resources (listAudioCodecPreferenceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/audiocodecpreferencelists/{parameter}/{value} (listAudioCodecPreferenceList)",
        "description": "Filter audiocodecpreferencelists resources by specified parameter type and value (listAudioCodecPreferenceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listAudioCodecPreferenceList operation.",
        "tags": [
          "audiocodecpreferencelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingservers": {
      "get": {
        "summary": "GET /api/axl/billingservers (listBillingServer)",
        "description": "Returns all available billingservers resources - Returns all available billingservers resources (listBillingServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/billingservers/{parameter}/{value} (listBillingServer)",
        "description": "Filter billingservers resources by specified parameter type and value (listBillingServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listBillingServer operation.",
        "tags": [
          "billingserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracings": {
      "get": {
        "summary": "GET /api/axl/calledpartytracings (listCalledPartyTracing)",
        "description": "Returns all available calledpartytracings resources - Returns all available calledpartytracings resources (listCalledPartyTracing)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCalledPartyTracing operation.",
        "tags": [
          "calledpartytracing"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracings/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/calledpartytracings/{parameter}/{value} (listCalledPartyTracing)",
        "description": "Filter calledpartytracings resources by specified parameter type and value (listCalledPartyTracing)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCalledPartyTracing operation.",
        "tags": [
          "calledpartytracing"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpatterns": {
      "get": {
        "summary": "GET /api/axl/calledpartytransformationpatterns (listCalledPartyTransformationPattern)",
        "description": "Returns all available calledpartytransformationpatterns resources - Returns all available calledpartytransformationpatterns resources (listCalledPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/calledpartytransformationpatterns/{parameter}/{value} (listCalledPartyTransformationPattern)",
        "description": "Filter calledpartytransformationpatterns resources by specified parameter type and value (listCalledPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCalledPartyTransformationPattern operation.",
        "tags": [
          "calledpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlists": {
      "get": {
        "summary": "GET /api/axl/callerfilterlists (listCallerFilterList)",
        "description": "Returns all available callerfilterlists resources - Returns all available callerfilterlists resources (listCallerFilterList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callerfilterlists/{parameter}/{value} (listCallerFilterList)",
        "description": "Filter callerfilterlists resources by specified parameter type and value (listCallerFilterList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallerFilterList operation.",
        "tags": [
          "callerfilterlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpatterns": {
      "get": {
        "summary": "GET /api/axl/callingpartytransformationpatterns (listCallingPartyTransformationPattern)",
        "description": "Returns all available callingpartytransformationpatterns resources - Returns all available callingpartytransformationpatterns resources (listCallingPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callingpartytransformationpatterns/{parameter}/{value} (listCallingPartyTransformationPattern)",
        "description": "Filter callingpartytransformationpatterns resources by specified parameter type and value (listCallingPartyTransformationPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallingPartyTransformationPattern operation.",
        "tags": [
          "callingpartytransformationpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagers": {
      "get": {
        "summary": "GET /api/axl/callmanagers (listCallManager)",
        "description": "Returns all available callmanagers resources - Returns all available callmanagers resources (listCallManager)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callmanagers/{parameter}/{value} (listCallManager)",
        "description": "Filter callmanagers resources by specified parameter type and value (listCallManager)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallManager operation.",
        "tags": [
          "callmanager"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroups": {
      "get": {
        "summary": "GET /api/axl/callmanagergroups (listCallManagerGroup)",
        "description": "Returns all available callmanagergroups resources - Returns all available callmanagergroups resources (listCallManagerGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callmanagergroups/{parameter}/{value} (listCallManagerGroup)",
        "description": "Filter callmanagergroups resources by specified parameter type and value (listCallManagerGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallManagerGroup operation.",
        "tags": [
          "callmanagergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callparks": {
      "get": {
        "summary": "GET /api/axl/callparks (listCallPark)",
        "description": "Returns all available callparks resources - Returns all available callparks resources (listCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallPark operation.",
        "tags": [
          "callpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callparks/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callparks/{parameter}/{value} (listCallPark)",
        "description": "Filter callparks resources by specified parameter type and value (listCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallPark operation.",
        "tags": [
          "callpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroups": {
      "get": {
        "summary": "GET /api/axl/callpickupgroups (listCallPickupGroup)",
        "description": "Returns all available callpickupgroups resources - Returns all available callpickupgroups resources (listCallPickupGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/callpickupgroups/{parameter}/{value} (listCallPickupGroup)",
        "description": "Filter callpickupgroups resources by specified parameter type and value (listCallPickupGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCallPickupGroup operation.",
        "tags": [
          "callpickupgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservices": {
      "get": {
        "summary": "GET /api/axl/ccdadvertisingservices (listCcdAdvertisingService)",
        "description": "Returns all available ccdadvertisingservices resources - Returns all available ccdadvertisingservices resources (listCcdAdvertisingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdadvertisingservices/{parameter}/{value} (listCcdAdvertisingService)",
        "description": "Filter ccdadvertisingservices resources by specified parameter type and value (listCcdAdvertisingService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdAdvertisingService operation.",
        "tags": [
          "ccdadvertisingservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddns": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddns (listCcdHostedDN)",
        "description": "Returns all available ccdhosteddns resources - Returns all available ccdhosteddns resources (listCcdHostedDN)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddns/{parameter}/{value} (listCcdHostedDN)",
        "description": "Filter ccdhosteddns resources by specified parameter type and value (listCcdHostedDN)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdHostedDN operation.",
        "tags": [
          "ccdhosteddn"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroups": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddngroups (listCcdHostedDNGroup)",
        "description": "Returns all available ccdhosteddngroups resources - Returns all available ccdhosteddngroups resources (listCcdHostedDNGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ccdhosteddngroups/{parameter}/{value} (listCcdHostedDNGroup)",
        "description": "Filter ccdhosteddngroups resources by specified parameter type and value (listCcdHostedDNGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCcdHostedDNGroup operation.",
        "tags": [
          "ccdhosteddngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/changes": {
      "get": {
        "summary": "GET /api/axl/changes (listChange)",
        "description": "Returns all available changes resources - Returns all available changes resources (listChange)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listChange operation.",
        "tags": [
          "change"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/changes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/changes/{parameter}/{value} (listChange)",
        "description": "Filter changes resources by specified parameter type and value (listChange)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listChange operation.",
        "tags": [
          "change"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateways": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000e1voipgateways (listCiscoCatalyst6000E1VoIPGateway)",
        "description": "Returns all available ciscocatalyst6000e1voipgateways resources - Returns all available ciscocatalyst6000e1voipgateways resources (listCiscoCatalyst6000E1VoIPGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateways/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000e1voipgateways/{parameter}/{value} (listCiscoCatalyst6000E1VoIPGateway)",
        "description": "Filter ciscocatalyst6000e1voipgateways resources by specified parameter type and value (listCiscoCatalyst6000E1VoIPGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "ciscocatalyst6000e1voipgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypris": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewaypris (listCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Returns all available ciscocatalyst6000t1voipgatewaypris resources - Returns all available ciscocatalyst6000t1voipgatewaypris resources (listCiscoCatalyst6000T1VoIPGatewayPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypris/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewaypris/{parameter}/{value} (listCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Filter ciscocatalyst6000t1voipgatewaypris resources by specified parameter type and value (listCiscoCatalyst6000T1VoIPGatewayPri)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewaypri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1s": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewayt1s (listCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Returns all available ciscocatalyst6000t1voipgatewayt1s resources - Returns all available ciscocatalyst6000t1voipgatewayt1s resources (listCiscoCatalyst6000T1VoIPGatewayT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1s/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst6000t1voipgatewayt1s/{parameter}/{value} (listCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1s resources by specified parameter type and value (listCiscoCatalyst6000T1VoIPGatewayT1)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "ciscocatalyst6000t1voipgatewayt1"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateways": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst600024portfxsgateways (listCiscoCatalyst600024PortFXSGateway)",
        "description": "Returns all available ciscocatalyst600024portfxsgateways resources - Returns all available ciscocatalyst600024portfxsgateways resources (listCiscoCatalyst600024PortFXSGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateways/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocatalyst600024portfxsgateways/{parameter}/{value} (listCiscoCatalyst600024PortFXSGateway)",
        "description": "Filter ciscocatalyst600024portfxsgateways resources by specified parameter type and value (listCiscoCatalyst600024PortFXSGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "ciscocatalyst600024portfxsgateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboardings": {
      "get": {
        "summary": "GET /api/axl/ciscocloudonboardings (listCiscoCloudOnboarding)",
        "description": "Returns all available ciscocloudonboardings resources - Returns all available ciscocloudonboardings resources (listCiscoCloudOnboarding)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCloudOnboarding operation.",
        "tags": [
          "ciscocloudonboarding"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboardings/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ciscocloudonboardings/{parameter}/{value} (listCiscoCloudOnboarding)",
        "description": "Filter ciscocloudonboardings resources by specified parameter type and value (listCiscoCloudOnboarding)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCiscoCloudOnboarding operation.",
        "tags": [
          "ciscocloudonboarding"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfos": {
      "get": {
        "summary": "GET /api/axl/cmcinfos (listCmcInfo)",
        "description": "Returns all available cmcinfos resources - Returns all available cmcinfos resources (listCmcInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfos/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/cmcinfos/{parameter}/{value} (listCmcInfo)",
        "description": "Filter cmcinfos resources by specified parameter type and value (listCmcInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCmcInfo operation.",
        "tags": [
          "cmcinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfigs": {
      "get": {
        "summary": "GET /api/axl/commondeviceconfigs (listCommonDeviceConfig)",
        "description": "Returns all available commondeviceconfigs resources - Returns all available commondeviceconfigs resources (listCommonDeviceConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfigs/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/commondeviceconfigs/{parameter}/{value} (listCommonDeviceConfig)",
        "description": "Filter commondeviceconfigs resources by specified parameter type and value (listCommonDeviceConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCommonDeviceConfig operation.",
        "tags": [
          "commondeviceconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfigs": {
      "get": {
        "summary": "GET /api/axl/commonphoneconfigs (listCommonPhoneConfig)",
        "description": "Returns all available commonphoneconfigs resources - Returns all available commonphoneconfigs resources (listCommonPhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfigs/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/commonphoneconfigs/{parameter}/{value} (listCommonPhoneConfig)",
        "description": "Filter commonphoneconfigs resources by specified parameter type and value (listCommonPhoneConfig)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCommonPhoneConfig operation.",
        "tags": [
          "commonphoneconfig"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridges": {
      "get": {
        "summary": "GET /api/axl/conferencebridges (listConferenceBridge)",
        "description": "Returns all available conferencebridges resources - Returns all available conferencebridges resources (listConferenceBridge)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridges/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/conferencebridges/{parameter}/{value} (listConferenceBridge)",
        "description": "Filter conferencebridges resources by specified parameter type and value (listConferenceBridge)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listConferenceBridge operation.",
        "tags": [
          "conferencebridge"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenows": {
      "get": {
        "summary": "GET /api/axl/conferencenows (listConferenceNow)",
        "description": "Returns all available conferencenows resources - Returns all available conferencenows resources (listConferenceNow)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenows/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/conferencenows/{parameter}/{value} (listConferenceNow)",
        "description": "Filter conferencenows resources by specified parameter type and value (listConferenceNow)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listConferenceNow operation.",
        "tags": [
          "conferencenow"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicys": {
      "get": {
        "summary": "GET /api/axl/credentialpolicys (listCredentialPolicy)",
        "description": "Returns all available credentialpolicys resources - Returns all available credentialpolicys resources (listCredentialPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicys/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/credentialpolicys/{parameter}/{value} (listCredentialPolicy)",
        "description": "Filter credentialpolicys resources by specified parameter type and value (listCredentialPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCredentialPolicy operation.",
        "tags": [
          "credentialpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoints": {
      "get": {
        "summary": "GET /api/axl/ctiroutepoints (listCtiRoutePoint)",
        "description": "Returns all available ctiroutepoints resources - Returns all available ctiroutepoints resources (listCtiRoutePoint)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoints/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ctiroutepoints/{parameter}/{value} (listCtiRoutePoint)",
        "description": "Filter ctiroutepoints resources by specified parameter type and value (listCtiRoutePoint)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCtiRoutePoint operation.",
        "tags": [
          "ctiroutepoint"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofiles": {
      "get": {
        "summary": "GET /api/axl/cumaserversecurityprofiles (listCumaServerSecurityProfile)",
        "description": "Returns all available cumaserversecurityprofiles resources - Returns all available cumaserversecurityprofiles resources (listCumaServerSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/cumaserversecurityprofiles/{parameter}/{value} (listCumaServerSecurityProfile)",
        "description": "Filter cumaserversecurityprofiles resources by specified parameter type and value (listCumaServerSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCumaServerSecurityProfile operation.",
        "tags": [
          "cumaserversecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customers": {
      "get": {
        "summary": "GET /api/axl/customers (listCustomer)",
        "description": "Returns all available customers resources - Returns all available customers resources (listCustomer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCustomer operation.",
        "tags": [
          "customer"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/customers/{parameter}/{value} (listCustomer)",
        "description": "Filter customers resources by specified parameter type and value (listCustomer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCustomer operation.",
        "tags": [
          "customer"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfields": {
      "get": {
        "summary": "GET /api/axl/customuserfields (listCustomUserField)",
        "description": "Returns all available customuserfields resources - Returns all available customuserfields resources (listCustomUserField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfields/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/customuserfields/{parameter}/{value} (listCustomUserField)",
        "description": "Filter customuserfields resources by specified parameter type and value (listCustomUserField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listCustomUserField operation.",
        "tags": [
          "customuserfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroups": {
      "get": {
        "summary": "GET /api/axl/datetimegroups (listDateTimeGroup)",
        "description": "Returns all available datetimegroups resources - Returns all available datetimegroups resources (listDateTimeGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/datetimegroups/{parameter}/{value} (listDateTimeGroup)",
        "description": "Filter datetimegroups resources by specified parameter type and value (listDateTimeGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDateTimeGroup operation.",
        "tags": [
          "datetimegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddis": {
      "get": {
        "summary": "GET /api/axl/ddis (listDdi)",
        "description": "Returns all available ddis resources - Returns all available ddis resources (listDdi)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDdi operation.",
        "tags": [
          "ddi"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddis/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ddis/{parameter}/{value} (listDdi)",
        "description": "Filter ddis resources by specified parameter type and value (listDdi)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDdi operation.",
        "tags": [
          "ddi"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofiles": {
      "get": {
        "summary": "GET /api/axl/defaultdeviceprofiles (listDefaultDeviceProfile)",
        "description": "Returns all available defaultdeviceprofiles resources - Returns all available defaultdeviceprofiles resources (listDefaultDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/defaultdeviceprofiles/{parameter}/{value} (listDefaultDeviceProfile)",
        "description": "Filter defaultdeviceprofiles resources by specified parameter type and value (listDefaultDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDefaultDeviceProfile operation.",
        "tags": [
          "defaultdeviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitys": {
      "get": {
        "summary": "GET /api/axl/devicemobilitys (listDeviceMobility)",
        "description": "Returns all available devicemobilitys resources - Returns all available devicemobilitys resources (listDeviceMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitys/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicemobilitys/{parameter}/{value} (listDeviceMobility)",
        "description": "Filter devicemobilitys resources by specified parameter type and value (listDeviceMobility)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceMobility operation.",
        "tags": [
          "devicemobility"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroups": {
      "get": {
        "summary": "GET /api/axl/devicemobilitygroups (listDeviceMobilityGroup)",
        "description": "Returns all available devicemobilitygroups resources - Returns all available devicemobilitygroups resources (listDeviceMobilityGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicemobilitygroups/{parameter}/{value} (listDeviceMobilityGroup)",
        "description": "Filter devicemobilitygroups resources by specified parameter type and value (listDeviceMobilityGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceMobilityGroup operation.",
        "tags": [
          "devicemobilitygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepools": {
      "get": {
        "summary": "GET /api/axl/devicepools (listDevicePool)",
        "description": "Returns all available devicepools resources - Returns all available devicepools resources (listDevicePool)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepools/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/devicepools/{parameter}/{value} (listDevicePool)",
        "description": "Filter devicepools resources by specified parameter type and value (listDevicePool)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDevicePool operation.",
        "tags": [
          "devicepool"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofiles": {
      "get": {
        "summary": "GET /api/axl/deviceprofiles (listDeviceProfile)",
        "description": "Returns all available deviceprofiles resources - Returns all available deviceprofiles resources (listDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/deviceprofiles/{parameter}/{value} (listDeviceProfile)",
        "description": "Filter deviceprofiles resources by specified parameter type and value (listDeviceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDeviceProfile operation.",
        "tags": [
          "deviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpservers": {
      "get": {
        "summary": "GET /api/axl/dhcpservers (listDhcpServer)",
        "description": "Returns all available dhcpservers resources - Returns all available dhcpservers resources (listDhcpServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dhcpservers/{parameter}/{value} (listDhcpServer)",
        "description": "Filter dhcpservers resources by specified parameter type and value (listDhcpServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDhcpServer operation.",
        "tags": [
          "dhcpserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnets": {
      "get": {
        "summary": "GET /api/axl/dhcpsubnets (listDhcpSubnet)",
        "description": "Returns all available dhcpsubnets resources - Returns all available dhcpsubnets resources (listDhcpSubnet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnets/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dhcpsubnets/{parameter}/{value} (listDhcpSubnet)",
        "description": "Filter dhcpsubnets resources by specified parameter type and value (listDhcpSubnet)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDhcpSubnet operation.",
        "tags": [
          "dhcpsubnet"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplans": {
      "get": {
        "summary": "GET /api/axl/dialplans (listDialPlan)",
        "description": "Returns all available dialplans resources - Returns all available dialplans resources (listDialPlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDialPlan operation.",
        "tags": [
          "dialplan"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplans/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dialplans/{parameter}/{value} (listDialPlan)",
        "description": "Filter dialplans resources by specified parameter type and value (listDialPlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDialPlan operation.",
        "tags": [
          "dialplan"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantags": {
      "get": {
        "summary": "GET /api/axl/dialplantags (listDialPlanTag)",
        "description": "Returns all available dialplantags resources - Returns all available dialplantags resources (listDialPlanTag)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDialPlanTag operation.",
        "tags": [
          "dialplantag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantags/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dialplantags/{parameter}/{value} (listDialPlanTag)",
        "description": "Filter dialplantags resources by specified parameter type and value (listDialPlanTag)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDialPlanTag operation.",
        "tags": [
          "dialplantag"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallparks": {
      "get": {
        "summary": "GET /api/axl/directedcallparks (listDirectedCallPark)",
        "description": "Returns all available directedcallparks resources - Returns all available directedcallparks resources (listDirectedCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallparks/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/directedcallparks/{parameter}/{value} (listDirectedCallPark)",
        "description": "Filter directedcallparks resources by specified parameter type and value (listDirectedCallPark)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirectedCallPark operation.",
        "tags": [
          "directedcallpark"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsyncs": {
      "get": {
        "summary": "GET /api/axl/dirnumberaliaslookupandsyncs (listDirNumberAliasLookupandSync)",
        "description": "Returns all available dirnumberaliaslookupandsyncs resources - Returns all available dirnumberaliaslookupandsyncs resources (listDirNumberAliasLookupandSync)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsyncs/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/dirnumberaliaslookupandsyncs/{parameter}/{value} (listDirNumberAliasLookupandSync)",
        "description": "Filter dirnumberaliaslookupandsyncs resources by specified parameter type and value (listDirNumberAliasLookupandSync)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listDirNumberAliasLookupandSync operation.",
        "tags": [
          "dirnumberaliaslookupandsync"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroups": {
      "get": {
        "summary": "GET /api/axl/elingroups (listElinGroup)",
        "description": "Returns all available elingroups resources - Returns all available elingroups resources (listElinGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/elingroups/{parameter}/{value} (listElinGroup)",
        "description": "Filter elingroups resources by specified parameter type and value (listElinGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listElinGroup operation.",
        "tags": [
          "elingroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofiles": {
      "get": {
        "summary": "GET /api/axl/endusercapfprofiles (listEndUserCapfProfile)",
        "description": "Returns all available endusercapfprofiles resources - Returns all available endusercapfprofiles resources (listEndUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/endusercapfprofiles/{parameter}/{value} (listEndUserCapfProfile)",
        "description": "Filter endusercapfprofiles resources by specified parameter type and value (listEndUserCapfProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listEndUserCapfProfile operation.",
        "tags": [
          "endusercapfprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfigurations": {
      "get": {
        "summary": "GET /api/axl/enterprisefeatureaccessconfigurations (listEnterpriseFeatureAccessConfiguration)",
        "description": "Returns all available enterprisefeatureaccessconfigurations resources - Returns all available enterprisefeatureaccessconfigurations resources (listEnterpriseFeatureAccessConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfigurations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/enterprisefeatureaccessconfigurations/{parameter}/{value} (listEnterpriseFeatureAccessConfiguration)",
        "description": "Filter enterprisefeatureaccessconfigurations resources by specified parameter type and value (listEnterpriseFeatureAccessConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listEnterpriseFeatureAccessConfiguration operation.",
        "tags": [
          "enterprisefeatureaccessconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfigurations": {
      "get": {
        "summary": "GET /api/axl/expresswaycconfigurations (listExpresswayCConfiguration)",
        "description": "Returns all available expresswaycconfigurations resources - Returns all available expresswaycconfigurations resources (listExpresswayCConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfigurations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/expresswaycconfigurations/{parameter}/{value} (listExpresswayCConfiguration)",
        "description": "Filter expresswaycconfigurations resources by specified parameter type and value (listExpresswayCConfiguration)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listExpresswayCConfiguration operation.",
        "tags": [
          "expresswaycconfiguration"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofiles": {
      "get": {
        "summary": "GET /api/axl/externalcallcontrolprofiles (listExternalCallControlProfile)",
        "description": "Returns all available externalcallcontrolprofiles resources - Returns all available externalcallcontrolprofiles resources (listExternalCallControlProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/externalcallcontrolprofiles/{parameter}/{value} (listExternalCallControlProfile)",
        "description": "Filter externalcallcontrolprofiles resources by specified parameter type and value (listExternalCallControlProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listExternalCallControlProfile operation.",
        "tags": [
          "externalcallcontrolprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfos": {
      "get": {
        "summary": "GET /api/axl/facinfos (listFacInfo)",
        "description": "Returns all available facinfos resources - Returns all available facinfos resources (listFacInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfos/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/facinfos/{parameter}/{value} (listFacInfo)",
        "description": "Filter facinfos resources by specified parameter type and value (listFacInfo)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFacInfo operation.",
        "tags": [
          "facinfo"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofiles": {
      "get": {
        "summary": "GET /api/axl/fallbackprofiles (listFallbackProfile)",
        "description": "Returns all available fallbackprofiles resources - Returns all available fallbackprofiles resources (listFallbackProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/fallbackprofiles/{parameter}/{value} (listFallbackProfile)",
        "description": "Filter fallbackprofiles resources by specified parameter type and value (listFallbackProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFallbackProfile operation.",
        "tags": [
          "fallbackprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicys": {
      "get": {
        "summary": "GET /api/axl/featurecontrolpolicys (listFeatureControlPolicy)",
        "description": "Returns all available featurecontrolpolicys resources - Returns all available featurecontrolpolicys resources (listFeatureControlPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicys/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/featurecontrolpolicys/{parameter}/{value} (listFeatureControlPolicy)",
        "description": "Filter featurecontrolpolicys resources by specified parameter type and value (listFeatureControlPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFeatureControlPolicy operation.",
        "tags": [
          "featurecontrolpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplates": {
      "get": {
        "summary": "GET /api/axl/featuregrouptemplates (listFeatureGroupTemplate)",
        "description": "Returns all available featuregrouptemplates resources - Returns all available featuregrouptemplates resources (listFeatureGroupTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/featuregrouptemplates/{parameter}/{value} (listFeatureGroupTemplate)",
        "description": "Filter featuregrouptemplates resources by specified parameter type and value (listFeatureGroupTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listFeatureGroupTemplate operation.",
        "tags": [
          "featuregrouptemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeepers": {
      "get": {
        "summary": "GET /api/axl/gatekeepers (listGatekeeper)",
        "description": "Returns all available gatekeepers resources - Returns all available gatekeepers resources (listGatekeeper)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeepers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gatekeepers/{parameter}/{value} (listGatekeeper)",
        "description": "Filter gatekeepers resources by specified parameter type and value (listGatekeeper)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGatekeeper operation.",
        "tags": [
          "gatekeeper"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateways": {
      "get": {
        "summary": "GET /api/axl/gateways (listGateway)",
        "description": "Returns all available gateways resources - Returns all available gateways resources (listGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGateway operation.",
        "tags": [
          "gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateways/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/gateways/{parameter}/{value} (listGateway)",
        "description": "Filter gateways resources by specified parameter type and value (listGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGateway operation.",
        "tags": [
          "gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocations": {
      "get": {
        "summary": "GET /api/axl/geolocations (listGeoLocation)",
        "description": "Returns all available geolocations resources - Returns all available geolocations resources (listGeoLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocations/{parameter}/{value} (listGeoLocation)",
        "description": "Filter geolocations resources by specified parameter type and value (listGeoLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocation operation.",
        "tags": [
          "geolocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilters": {
      "get": {
        "summary": "GET /api/axl/geolocationfilters (listGeoLocationFilter)",
        "description": "Returns all available geolocationfilters resources - Returns all available geolocationfilters resources (listGeoLocationFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilters/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocationfilters/{parameter}/{value} (listGeoLocationFilter)",
        "description": "Filter geolocationfilters resources by specified parameter type and value (listGeoLocationFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocationFilter operation.",
        "tags": [
          "geolocationfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicys": {
      "get": {
        "summary": "GET /api/axl/geolocationpolicys (listGeoLocationPolicy)",
        "description": "Returns all available geolocationpolicys resources - Returns all available geolocationpolicys resources (listGeoLocationPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicys/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/geolocationpolicys/{parameter}/{value} (listGeoLocationPolicy)",
        "description": "Filter geolocationpolicys resources by specified parameter type and value (listGeoLocationPolicy)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listGeoLocationPolicy operation.",
        "tags": [
          "geolocationpolicy"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateways": {
      "get": {
        "summary": "GET /api/axl/h323gateways (listH323Gateway)",
        "description": "Returns all available h323gateways resources - Returns all available h323gateways resources (listH323Gateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateways/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323gateways/{parameter}/{value} (listH323Gateway)",
        "description": "Filter h323gateways resources by specified parameter type and value (listH323Gateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Gateway operation.",
        "tags": [
          "h323gateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phones": {
      "get": {
        "summary": "GET /api/axl/h323phones (listH323Phone)",
        "description": "Returns all available h323phones resources - Returns all available h323phones resources (listH323Phone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phones/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323phones/{parameter}/{value} (listH323Phone)",
        "description": "Filter h323phones resources by specified parameter type and value (listH323Phone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Phone operation.",
        "tags": [
          "h323phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunks": {
      "get": {
        "summary": "GET /api/axl/h323trunks (listH323Trunk)",
        "description": "Returns all available h323trunks resources - Returns all available h323trunks resources (listH323Trunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunks/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/h323trunks/{parameter}/{value} (listH323Trunk)",
        "description": "Filter h323trunks resources by specified parameter type and value (listH323Trunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listH323Trunk operation.",
        "tags": [
          "h323trunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlists": {
      "get": {
        "summary": "GET /api/axl/huntlists (listHuntList)",
        "description": "Returns all available huntlists resources - Returns all available huntlists resources (listHuntList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/huntlists/{parameter}/{value} (listHuntList)",
        "description": "Filter huntlists resources by specified parameter type and value (listHuntList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listHuntList operation.",
        "tags": [
          "huntlist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilots": {
      "get": {
        "summary": "GET /api/axl/huntpilots (listHuntPilot)",
        "description": "Returns all available huntpilots resources - Returns all available huntpilots resources (listHuntPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilots/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/huntpilots/{parameter}/{value} (listHuntPilot)",
        "description": "Filter huntpilots resources by specified parameter type and value (listHuntPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listHuntPilot operation.",
        "tags": [
          "huntpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclients": {
      "get": {
        "summary": "GET /api/axl/imeclients (listImeClient)",
        "description": "Returns all available imeclients resources - Returns all available imeclients resources (listImeClient)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclients/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeclients/{parameter}/{value} (listImeClient)",
        "description": "Filter imeclients resources by specified parameter type and value (listImeClient)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeClient operation.",
        "tags": [
          "imeclient"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformations": {
      "get": {
        "summary": "GET /api/axl/imee164transformations (listImeE164Transformation)",
        "description": "Returns all available imee164transformations resources - Returns all available imee164transformations resources (listImeE164Transformation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imee164transformations/{parameter}/{value} (listImeE164Transformation)",
        "description": "Filter imee164transformations resources by specified parameter type and value (listImeE164Transformation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeE164Transformation operation.",
        "tags": [
          "imee164transformation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterns": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterns (listImeEnrolledPattern)",
        "description": "Returns all available imeenrolledpatterns resources - Returns all available imeenrolledpatterns resources (listImeEnrolledPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterns/{parameter}/{value} (listImeEnrolledPattern)",
        "description": "Filter imeenrolledpatterns resources by specified parameter type and value (listImeEnrolledPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeEnrolledPattern operation.",
        "tags": [
          "imeenrolledpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroups": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterngroups (listImeEnrolledPatternGroup)",
        "description": "Returns all available imeenrolledpatterngroups resources - Returns all available imeenrolledpatterngroups resources (listImeEnrolledPatternGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeenrolledpatterngroups/{parameter}/{value} (listImeEnrolledPatternGroup)",
        "description": "Filter imeenrolledpatterngroups resources by specified parameter type and value (listImeEnrolledPatternGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeEnrolledPatternGroup operation.",
        "tags": [
          "imeenrolledpatterngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbers": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbers (listImeExclusionNumber)",
        "description": "Returns all available imeexclusionnumbers resources - Returns all available imeexclusionnumbers resources (listImeExclusionNumber)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbers/{parameter}/{value} (listImeExclusionNumber)",
        "description": "Filter imeexclusionnumbers resources by specified parameter type and value (listImeExclusionNumber)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeExclusionNumber operation.",
        "tags": [
          "imeexclusionnumber"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroups": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbergroups (listImeExclusionNumberGroup)",
        "description": "Returns all available imeexclusionnumbergroups resources - Returns all available imeexclusionnumbergroups resources (listImeExclusionNumberGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeexclusionnumbergroups/{parameter}/{value} (listImeExclusionNumberGroup)",
        "description": "Filter imeexclusionnumbergroups resources by specified parameter type and value (listImeExclusionNumberGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeExclusionNumberGroup operation.",
        "tags": [
          "imeexclusionnumbergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewalls": {
      "get": {
        "summary": "GET /api/axl/imefirewalls (listImeFirewall)",
        "description": "Returns all available imefirewalls resources - Returns all available imefirewalls resources (listImeFirewall)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewalls/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imefirewalls/{parameter}/{value} (listImeFirewall)",
        "description": "Filter imefirewalls resources by specified parameter type and value (listImeFirewall)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeFirewall operation.",
        "tags": [
          "imefirewall"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelements": {
      "get": {
        "summary": "GET /api/axl/imeroutefilterelements (listImeRouteFilterElement)",
        "description": "Returns all available imeroutefilterelements resources - Returns all available imeroutefilterelements resources (listImeRouteFilterElement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelements/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeroutefilterelements/{parameter}/{value} (listImeRouteFilterElement)",
        "description": "Filter imeroutefilterelements resources by specified parameter type and value (listImeRouteFilterElement)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeRouteFilterElement operation.",
        "tags": [
          "imeroutefilterelement"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroups": {
      "get": {
        "summary": "GET /api/axl/imeroutefiltergroups (listImeRouteFilterGroup)",
        "description": "Returns all available imeroutefiltergroups resources - Returns all available imeroutefiltergroups resources (listImeRouteFilterGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeroutefiltergroups/{parameter}/{value} (listImeRouteFilterGroup)",
        "description": "Filter imeroutefiltergroups resources by specified parameter type and value (listImeRouteFilterGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeRouteFilterGroup operation.",
        "tags": [
          "imeroutefiltergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeservers": {
      "get": {
        "summary": "GET /api/axl/imeservers (listImeServer)",
        "description": "Returns all available imeservers resources - Returns all available imeservers resources (listImeServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/imeservers/{parameter}/{value} (listImeServer)",
        "description": "Filter imeservers resources by specified parameter type and value (listImeServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listImeServer operation.",
        "tags": [
          "imeserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevices": {
      "get": {
        "summary": "GET /api/axl/infrastructuredevices (listInfrastructureDevice)",
        "description": "Returns all available infrastructuredevices resources - Returns all available infrastructuredevices resources (listInfrastructureDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/infrastructuredevices/{parameter}/{value} (listInfrastructureDevice)",
        "description": "Filter infrastructuredevices resources by specified parameter type and value (listInfrastructureDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listInfrastructureDevice operation.",
        "tags": [
          "infrastructuredevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponses": {
      "get": {
        "summary": "GET /api/axl/interactivevoiceresponses (listInteractiveVoiceResponse)",
        "description": "Returns all available interactivevoiceresponses resources - Returns all available interactivevoiceresponses resources (listInteractiveVoiceResponse)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponses/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/interactivevoiceresponses/{parameter}/{value} (listInteractiveVoiceResponse)",
        "description": "Filter interactivevoiceresponses resources by specified parameter type and value (listInteractiveVoiceResponse)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listInteractiveVoiceResponse operation.",
        "tags": [
          "interactivevoiceresponse"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocales": {
      "get": {
        "summary": "GET /api/axl/ivruserlocales (listIvrUserLocale)",
        "description": "Returns all available ivruserlocales resources - Returns all available ivruserlocales resources (listIvrUserLocale)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocales/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ivruserlocales/{parameter}/{value} (listIvrUserLocale)",
        "description": "Filter ivruserlocales resources by specified parameter type and value (listIvrUserLocale)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listIvrUserLocale operation.",
        "tags": [
          "ivruserlocale"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroups": {
      "get": {
        "summary": "GET /api/axl/lbmgroups (listLbmGroup)",
        "description": "Returns all available lbmgroups resources - Returns all available lbmgroups resources (listLbmGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lbmgroups/{parameter}/{value} (listLbmGroup)",
        "description": "Filter lbmgroups resources by specified parameter type and value (listLbmGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLbmGroup operation.",
        "tags": [
          "lbmgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroups": {
      "get": {
        "summary": "GET /api/axl/lbmhubgroups (listLbmHubGroup)",
        "description": "Returns all available lbmhubgroups resources - Returns all available lbmhubgroups resources (listLbmHubGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lbmhubgroups/{parameter}/{value} (listLbmHubGroup)",
        "description": "Filter lbmhubgroups resources by specified parameter type and value (listLbmHubGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLbmHubGroup operation.",
        "tags": [
          "lbmhubgroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectorys": {
      "get": {
        "summary": "GET /api/axl/ldapdirectorys (listLdapDirectory)",
        "description": "Returns all available ldapdirectorys resources - Returns all available ldapdirectorys resources (listLdapDirectory)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectorys/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapdirectorys/{parameter}/{value} (listLdapDirectory)",
        "description": "Filter ldapdirectorys resources by specified parameter type and value (listLdapDirectory)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapDirectory operation.",
        "tags": [
          "ldapdirectory"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilters": {
      "get": {
        "summary": "GET /api/axl/ldapfilters (listLdapFilter)",
        "description": "Returns all available ldapfilters resources - Returns all available ldapfilters resources (listLdapFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilters/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapfilters/{parameter}/{value} (listLdapFilter)",
        "description": "Filter ldapfilters resources by specified parameter type and value (listLdapFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapFilter operation.",
        "tags": [
          "ldapfilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearchs": {
      "get": {
        "summary": "GET /api/axl/ldapsearchs (listLdapSearch)",
        "description": "Returns all available ldapsearchs resources - Returns all available ldapsearchs resources (listLdapSearch)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearchs/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsearchs/{parameter}/{value} (listLdapSearch)",
        "description": "Filter ldapsearchs resources by specified parameter type and value (listLdapSearch)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapSearch operation.",
        "tags": [
          "ldapsearch"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfields": {
      "get": {
        "summary": "GET /api/axl/ldapsynccustomfields (listLdapSyncCustomField)",
        "description": "Returns all available ldapsynccustomfields resources - Returns all available ldapsynccustomfields resources (listLdapSyncCustomField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfields/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ldapsynccustomfields/{parameter}/{value} (listLdapSyncCustomField)",
        "description": "Filter ldapsynccustomfields resources by specified parameter type and value (listLdapSyncCustomField)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLdapSyncCustomField operation.",
        "tags": [
          "ldapsynccustomfield"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licensedusers": {
      "get": {
        "summary": "GET /api/axl/licensedusers (listLicensedUser)",
        "description": "Returns all available licensedusers resources - Returns all available licensedusers resources (listLicensedUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLicensedUser operation.",
        "tags": [
          "licenseduser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licensedusers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/licensedusers/{parameter}/{value} (listLicensedUser)",
        "description": "Filter licensedusers resources by specified parameter type and value (listLicensedUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLicensedUser operation.",
        "tags": [
          "licenseduser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lines": {
      "get": {
        "summary": "GET /api/axl/lines (listLine)",
        "description": "Returns all available lines resources - Returns all available lines resources (listLine)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLine operation.",
        "tags": [
          "line"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lines/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/lines/{parameter}/{value} (listLine)",
        "description": "Filter lines resources by specified parameter type and value (listLine)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLine operation.",
        "tags": [
          "line"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroups": {
      "get": {
        "summary": "GET /api/axl/linegroups (listLineGroup)",
        "description": "Returns all available linegroups resources - Returns all available linegroups resources (listLineGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/linegroups/{parameter}/{value} (listLineGroup)",
        "description": "Filter linegroups resources by specified parameter type and value (listLineGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLineGroup operation.",
        "tags": [
          "linegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroups": {
      "get": {
        "summary": "GET /api/axl/localroutegroups (listLocalRouteGroup)",
        "description": "Returns all available localroutegroups resources - Returns all available localroutegroups resources (listLocalRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/localroutegroups/{parameter}/{value} (listLocalRouteGroup)",
        "description": "Filter localroutegroups resources by specified parameter type and value (listLocalRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLocalRouteGroup operation.",
        "tags": [
          "localroutegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/locations": {
      "get": {
        "summary": "GET /api/axl/locations (listLocation)",
        "description": "Returns all available locations resources - Returns all available locations resources (listLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLocation operation.",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/locations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/locations/{parameter}/{value} (listLocation)",
        "description": "Filter locations resources by specified parameter type and value (listLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listLocation operation.",
        "tags": [
          "location"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroups": {
      "get": {
        "summary": "GET /api/axl/mediaresourcegroups (listMediaResourceGroup)",
        "description": "Returns all available mediaresourcegroups resources - Returns all available mediaresourcegroups resources (listMediaResourceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mediaresourcegroups/{parameter}/{value} (listMediaResourceGroup)",
        "description": "Filter mediaresourcegroups resources by specified parameter type and value (listMediaResourceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMediaResourceGroup operation.",
        "tags": [
          "mediaresourcegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelists": {
      "get": {
        "summary": "GET /api/axl/mediaresourcelists (listMediaResourceList)",
        "description": "Returns all available mediaresourcelists resources - Returns all available mediaresourcelists resources (listMediaResourceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mediaresourcelists/{parameter}/{value} (listMediaResourceList)",
        "description": "Filter mediaresourcelists resources by specified parameter type and value (listMediaResourceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMediaResourceList operation.",
        "tags": [
          "mediaresourcelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetmes": {
      "get": {
        "summary": "GET /api/axl/meetmes (listMeetMe)",
        "description": "Returns all available meetmes resources - Returns all available meetmes resources (listMeetMe)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetmes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/meetmes/{parameter}/{value} (listMeetMe)",
        "description": "Filter meetmes resources by specified parameter type and value (listMeetMe)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMeetMe operation.",
        "tags": [
          "meetme"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaitings": {
      "get": {
        "summary": "GET /api/axl/messagewaitings (listMessageWaiting)",
        "description": "Returns all available messagewaitings resources - Returns all available messagewaitings resources (listMessageWaiting)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaitings/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/messagewaitings/{parameter}/{value} (listMessageWaiting)",
        "description": "Filter messagewaitings resources by specified parameter type and value (listMessageWaiting)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMessageWaiting operation.",
        "tags": [
          "messagewaiting"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomains": {
      "get": {
        "summary": "GET /api/axl/mlppdomains (listMlppDomain)",
        "description": "Returns all available mlppdomains resources - Returns all available mlppdomains resources (listMlppDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomains/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mlppdomains/{parameter}/{value} (listMlppDomain)",
        "description": "Filter mlppdomains resources by specified parameter type and value (listMlppDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMlppDomain operation.",
        "tags": [
          "mlppdomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofiles": {
      "get": {
        "summary": "GET /api/axl/mobilesmartclientprofiles (listMobileSmartClientProfile)",
        "description": "Returns all available mobilesmartclientprofiles resources - Returns all available mobilesmartclientprofiles resources (listMobileSmartClientProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMobileSmartClientProfile operation.",
        "tags": [
          "mobilesmartclientprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobilesmartclientprofiles/{parameter}/{value} (listMobileSmartClientProfile)",
        "description": "Filter mobilesmartclientprofiles resources by specified parameter type and value (listMobileSmartClientProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMobileSmartClientProfile operation.",
        "tags": [
          "mobilesmartclientprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofiles": {
      "get": {
        "summary": "GET /api/axl/mobilityprofiles (listMobilityProfile)",
        "description": "Returns all available mobilityprofiles resources - Returns all available mobilityprofiles resources (listMobilityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mobilityprofiles/{parameter}/{value} (listMobilityProfile)",
        "description": "Filter mobilityprofiles resources by specified parameter type and value (listMobilityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMobilityProfile operation.",
        "tags": [
          "mobilityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosources": {
      "get": {
        "summary": "GET /api/axl/mohaudiosources (listMohAudioSource)",
        "description": "Returns all available mohaudiosources resources - Returns all available mohaudiosources resources (listMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosources/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mohaudiosources/{parameter}/{value} (listMohAudioSource)",
        "description": "Filter mohaudiosources resources by specified parameter type and value (listMohAudioSource)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMohAudioSource operation.",
        "tags": [
          "mohaudiosource"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohservers": {
      "get": {
        "summary": "GET /api/axl/mohservers (listMohServer)",
        "description": "Returns all available mohservers resources - Returns all available mohservers resources (listMohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mohservers/{parameter}/{value} (listMohServer)",
        "description": "Filter mohservers resources by specified parameter type and value (listMohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMohServer operation.",
        "tags": [
          "mohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomains": {
      "get": {
        "summary": "GET /api/axl/mraservicedomains (listMraServiceDomain)",
        "description": "Returns all available mraservicedomains resources - Returns all available mraservicedomains resources (listMraServiceDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomains/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mraservicedomains/{parameter}/{value} (listMraServiceDomain)",
        "description": "Filter mraservicedomains resources by specified parameter type and value (listMraServiceDomain)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMraServiceDomain operation.",
        "tags": [
          "mraservicedomain"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtps": {
      "get": {
        "summary": "GET /api/axl/mtps (listMtp)",
        "description": "Returns all available mtps resources - Returns all available mtps resources (listMtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMtp operation.",
        "tags": [
          "mtp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtps/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/mtps/{parameter}/{value} (listMtp)",
        "description": "Filter mtps resources by specified parameter type and value (listMtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listMtp operation.",
        "tags": [
          "mtp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofiles": {
      "get": {
        "summary": "GET /api/axl/networkaccessprofiles (listNetworkAccessProfile)",
        "description": "Returns all available networkaccessprofiles resources - Returns all available networkaccessprofiles resources (listNetworkAccessProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/networkaccessprofiles/{parameter}/{value} (listNetworkAccessProfile)",
        "description": "Filter networkaccessprofiles resources by specified parameter type and value (listNetworkAccessProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listNetworkAccessProfile operation.",
        "tags": [
          "networkaccessprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phones": {
      "get": {
        "summary": "GET /api/axl/phones (listPhone)",
        "description": "Returns all available phones resources - Returns all available phones resources (listPhone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhone operation.",
        "tags": [
          "phone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phones/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phones/{parameter}/{value} (listPhone)",
        "description": "Filter phones resources by specified parameter type and value (listPhone)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhone operation.",
        "tags": [
          "phone"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcodes": {
      "get": {
        "summary": "GET /api/axl/phoneactivationcodes (listPhoneActivationCode)",
        "description": "Returns all available phoneactivationcodes resources - Returns all available phoneactivationcodes resources (listPhoneActivationCode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneActivationCode operation.",
        "tags": [
          "phoneactivationcode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcodes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phoneactivationcodes/{parameter}/{value} (listPhoneActivationCode)",
        "description": "Filter phoneactivationcodes resources by specified parameter type and value (listPhoneActivationCode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneActivationCode operation.",
        "tags": [
          "phoneactivationcode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplates": {
      "get": {
        "summary": "GET /api/axl/phonebuttontemplates (listPhoneButtonTemplate)",
        "description": "Returns all available phonebuttontemplates resources - Returns all available phonebuttontemplates resources (listPhoneButtonTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonebuttontemplates/{parameter}/{value} (listPhoneButtonTemplate)",
        "description": "Filter phonebuttontemplates resources by specified parameter type and value (listPhoneButtonTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneButtonTemplate operation.",
        "tags": [
          "phonebuttontemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentps": {
      "get": {
        "summary": "GET /api/axl/phonentps (listPhoneNtp)",
        "description": "Returns all available phonentps resources - Returns all available phonentps resources (listPhoneNtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentps/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonentps/{parameter}/{value} (listPhoneNtp)",
        "description": "Filter phonentps resources by specified parameter type and value (listPhoneNtp)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneNtp operation.",
        "tags": [
          "phonentp"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofiles": {
      "get": {
        "summary": "GET /api/axl/phonesecurityprofiles (listPhoneSecurityProfile)",
        "description": "Returns all available phonesecurityprofiles resources - Returns all available phonesecurityprofiles resources (listPhoneSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/phonesecurityprofiles/{parameter}/{value} (listPhoneSecurityProfile)",
        "description": "Filter phonesecurityprofiles resources by specified parameter type and value (listPhoneSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhoneSecurityProfile operation.",
        "tags": [
          "phonesecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocations": {
      "get": {
        "summary": "GET /api/axl/physicallocations (listPhysicalLocation)",
        "description": "Returns all available physicallocations resources - Returns all available physicallocations resources (listPhysicalLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/physicallocations/{parameter}/{value} (listPhysicalLocation)",
        "description": "Filter physicallocations resources by specified parameter type and value (listPhysicalLocation)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPhysicalLocation operation.",
        "tags": [
          "physicallocation"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroups": {
      "get": {
        "summary": "GET /api/axl/presencegroups (listPresenceGroup)",
        "description": "Returns all available presencegroups resources - Returns all available presencegroups resources (listPresenceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/presencegroups/{parameter}/{value} (listPresenceGroup)",
        "description": "Filter presencegroups resources by specified parameter type and value (listPresenceGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPresenceGroup operation.",
        "tags": [
          "presencegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroups": {
      "get": {
        "summary": "GET /api/axl/presenceredundancygroups (listPresenceRedundancyGroup)",
        "description": "Returns all available presenceredundancygroups resources - Returns all available presenceredundancygroups resources (listPresenceRedundancyGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/presenceredundancygroups/{parameter}/{value} (listPresenceRedundancyGroup)",
        "description": "Filter presenceredundancygroups resources by specified parameter type and value (listPresenceRedundancyGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listPresenceRedundancyGroup operation.",
        "tags": [
          "presenceredundancygroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodes": {
      "get": {
        "summary": "GET /api/axl/processnodes (listProcessNode)",
        "description": "Returns all available processnodes resources - Returns all available processnodes resources (listProcessNode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodes/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/processnodes/{parameter}/{value} (listProcessNode)",
        "description": "Filter processnodes resources by specified parameter type and value (listProcessNode)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listProcessNode operation.",
        "tags": [
          "processnode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservices": {
      "get": {
        "summary": "GET /api/axl/processnodeservices (listProcessNodeService)",
        "description": "Returns all available processnodeservices resources - Returns all available processnodeservices resources (listProcessNodeService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/processnodeservices/{parameter}/{value} (listProcessNodeService)",
        "description": "Filter processnodeservices resources by specified parameter type and value (listProcessNodeService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listProcessNodeService operation.",
        "tags": [
          "processnodeservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofiles": {
      "get": {
        "summary": "GET /api/axl/recordingprofiles (listRecordingProfile)",
        "description": "Returns all available recordingprofiles resources - Returns all available recordingprofiles resources (listRecordingProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/recordingprofiles/{parameter}/{value} (listRecordingProfile)",
        "description": "Filter recordingprofiles resources by specified parameter type and value (listRecordingProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRecordingProfile operation.",
        "tags": [
          "recordingprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regions": {
      "get": {
        "summary": "GET /api/axl/regions (listRegion)",
        "description": "Returns all available regions resources - Returns all available regions resources (listRegion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRegion operation.",
        "tags": [
          "region"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/regions/{parameter}/{value} (listRegion)",
        "description": "Filter regions resources by specified parameter type and value (listRegion)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRegion operation.",
        "tags": [
          "region"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamics": {
      "get": {
        "summary": "GET /api/axl/registrationdynamics (listRegistrationDynamic)",
        "description": "Returns all available registrationdynamics resources - Returns all available registrationdynamics resources (listRegistrationDynamic)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRegistrationDynamic operation.",
        "tags": [
          "registrationdynamic"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamics/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/registrationdynamics/{parameter}/{value} (listRegistrationDynamic)",
        "description": "Filter registrationdynamics resources by specified parameter type and value (listRegistrationDynamic)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRegistrationDynamic operation.",
        "tags": [
          "registrationdynamic"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remoteclusters": {
      "get": {
        "summary": "GET /api/axl/remoteclusters (listRemoteCluster)",
        "description": "Returns all available remoteclusters resources - Returns all available remoteclusters resources (listRemoteCluster)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remoteclusters/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remoteclusters/{parameter}/{value} (listRemoteCluster)",
        "description": "Filter remoteclusters resources by specified parameter type and value (listRemoteCluster)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteCluster operation.",
        "tags": [
          "remotecluster"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinations": {
      "get": {
        "summary": "GET /api/axl/remotedestinations (listRemoteDestination)",
        "description": "Returns all available remotedestinations resources - Returns all available remotedestinations resources (listRemoteDestination)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinations/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remotedestinations/{parameter}/{value} (listRemoteDestination)",
        "description": "Filter remotedestinations resources by specified parameter type and value (listRemoteDestination)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteDestination operation.",
        "tags": [
          "remotedestination"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofiles": {
      "get": {
        "summary": "GET /api/axl/remotedestinationprofiles (listRemoteDestinationProfile)",
        "description": "Returns all available remotedestinationprofiles resources - Returns all available remotedestinationprofiles resources (listRemoteDestinationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/remotedestinationprofiles/{parameter}/{value} (listRemoteDestinationProfile)",
        "description": "Filter remotedestinationprofiles resources by specified parameter type and value (listRemoteDestinationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRemoteDestinationProfile operation.",
        "tags": [
          "remotedestinationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespaces": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespaces (listResourcePriorityNamespace)",
        "description": "Returns all available resourceprioritynamespaces resources - Returns all available resourceprioritynamespaces resources (listResourcePriorityNamespace)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespaces/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespaces/{parameter}/{value} (listResourcePriorityNamespace)",
        "description": "Filter resourceprioritynamespaces resources by specified parameter type and value (listResourcePriorityNamespace)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listResourcePriorityNamespace operation.",
        "tags": [
          "resourceprioritynamespace"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelists": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespacelists (listResourcePriorityNamespaceList)",
        "description": "Returns all available resourceprioritynamespacelists resources - Returns all available resourceprioritynamespacelists resources (listResourcePriorityNamespaceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/resourceprioritynamespacelists/{parameter}/{value} (listResourcePriorityNamespaceList)",
        "description": "Filter resourceprioritynamespacelists resources by specified parameter type and value (listResourcePriorityNamespaceList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listResourcePriorityNamespaceList operation.",
        "tags": [
          "resourceprioritynamespacelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilters": {
      "get": {
        "summary": "GET /api/axl/routefilters (listRouteFilter)",
        "description": "Returns all available routefilters resources - Returns all available routefilters resources (listRouteFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilters/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routefilters/{parameter}/{value} (listRouteFilter)",
        "description": "Filter routefilters resources by specified parameter type and value (listRouteFilter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteFilter operation.",
        "tags": [
          "routefilter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroups": {
      "get": {
        "summary": "GET /api/axl/routegroups (listRouteGroup)",
        "description": "Returns all available routegroups resources - Returns all available routegroups resources (listRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routegroups/{parameter}/{value} (listRouteGroup)",
        "description": "Filter routegroups resources by specified parameter type and value (listRouteGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteGroup operation.",
        "tags": [
          "routegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelists": {
      "get": {
        "summary": "GET /api/axl/routelists (listRouteList)",
        "description": "Returns all available routelists resources - Returns all available routelists resources (listRouteList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteList operation.",
        "tags": [
          "routelist"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelists/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routelists/{parameter}/{value} (listRouteList)",
        "description": "Filter routelists resources by specified parameter type and value (listRouteList)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRouteList operation.",
        "tags": [
          "routelist"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitions": {
      "get": {
        "summary": "GET /api/axl/routepartitions (listRoutePartition)",
        "description": "Returns all available routepartitions resources - Returns all available routepartitions resources (listRoutePartition)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routepartitions/{parameter}/{value} (listRoutePartition)",
        "description": "Filter routepartitions resources by specified parameter type and value (listRoutePartition)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePartition operation.",
        "tags": [
          "routepartition"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepatterns": {
      "get": {
        "summary": "GET /api/axl/routepatterns (listRoutePattern)",
        "description": "Returns all available routepatterns resources - Returns all available routepatterns resources (listRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routepatterns/{parameter}/{value} (listRoutePattern)",
        "description": "Filter routepatterns resources by specified parameter type and value (listRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePattern operation.",
        "tags": [
          "routepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routeplans": {
      "get": {
        "summary": "GET /api/axl/routeplans (listRoutePlan)",
        "description": "Returns all available routeplans resources - Returns all available routeplans resources (listRoutePlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePlan operation.",
        "tags": [
          "routeplan"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routeplans/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/routeplans/{parameter}/{value} (listRoutePlan)",
        "description": "Filter routeplans resources by specified parameter type and value (listRoutePlan)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listRoutePlan operation.",
        "tags": [
          "routeplan"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarders": {
      "get": {
        "summary": "GET /api/axl/safforwarders (listSafForwarder)",
        "description": "Returns all available safforwarders resources - Returns all available safforwarders resources (listSafForwarder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarders/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/safforwarders/{parameter}/{value} (listSafForwarder)",
        "description": "Filter safforwarders resources by specified parameter type and value (listSafForwarder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafForwarder operation.",
        "tags": [
          "safforwarder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofiles": {
      "get": {
        "summary": "GET /api/axl/safsecurityprofiles (listSafSecurityProfile)",
        "description": "Returns all available safsecurityprofiles resources - Returns all available safsecurityprofiles resources (listSafSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/safsecurityprofiles/{parameter}/{value} (listSafSecurityProfile)",
        "description": "Filter safsecurityprofiles resources by specified parameter type and value (listSafSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSafSecurityProfile operation.",
        "tags": [
          "safsecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofiles": {
      "get": {
        "summary": "GET /api/axl/sdptransparencyprofiles (listSdpTransparencyProfile)",
        "description": "Returns all available sdptransparencyprofiles resources - Returns all available sdptransparencyprofiles resources (listSdpTransparencyProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sdptransparencyprofiles/{parameter}/{value} (listSdpTransparencyProfile)",
        "description": "Filter sdptransparencyprofiles resources by specified parameter type and value (listSdpTransparencyProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSdpTransparencyProfile operation.",
        "tags": [
          "sdptransparencyprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameters": {
      "get": {
        "summary": "GET /api/axl/serviceparameters (listServiceParameter)",
        "description": "Returns all available serviceparameters resources - Returns all available serviceparameters resources (listServiceParameter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameters/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/serviceparameters/{parameter}/{value} (listServiceParameter)",
        "description": "Filter serviceparameters resources by specified parameter type and value (listServiceParameter)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listServiceParameter operation.",
        "tags": [
          "serviceparameter"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofiles": {
      "get": {
        "summary": "GET /api/axl/serviceprofiles (listServiceProfile)",
        "description": "Returns all available serviceprofiles resources - Returns all available serviceprofiles resources (listServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/serviceprofiles/{parameter}/{value} (listServiceProfile)",
        "description": "Filter serviceprofiles resources by specified parameter type and value (listServiceProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listServiceProfile operation.",
        "tags": [
          "serviceprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscripts": {
      "get": {
        "summary": "GET /api/axl/sipnormalizationscripts (listSIPNormalizationScript)",
        "description": "Returns all available sipnormalizationscripts resources - Returns all available sipnormalizationscripts resources (listSIPNormalizationScript)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscripts/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipnormalizationscripts/{parameter}/{value} (listSIPNormalizationScript)",
        "description": "Filter sipnormalizationscripts resources by specified parameter type and value (listSIPNormalizationScript)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSIPNormalizationScript operation.",
        "tags": [
          "sipnormalizationscript"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofiles": {
      "get": {
        "summary": "GET /api/axl/sipprofiles (listSipProfile)",
        "description": "Returns all available sipprofiles resources - Returns all available sipprofiles resources (listSipProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/sipprofiles/{parameter}/{value} (listSipProfile)",
        "description": "Filter sipprofiles resources by specified parameter type and value (listSipProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipProfile operation.",
        "tags": [
          "sipprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealms": {
      "get": {
        "summary": "GET /api/axl/siprealms (listSipRealm)",
        "description": "Returns all available siprealms resources - Returns all available siprealms resources (listSipRealm)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealms/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siprealms/{parameter}/{value} (listSipRealm)",
        "description": "Filter siprealms resources by specified parameter type and value (listSipRealm)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipRealm operation.",
        "tags": [
          "siprealm"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepatterns": {
      "get": {
        "summary": "GET /api/axl/siproutepatterns (listSipRoutePattern)",
        "description": "Returns all available siproutepatterns resources - Returns all available siproutepatterns resources (listSipRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siproutepatterns/{parameter}/{value} (listSipRoutePattern)",
        "description": "Filter siproutepatterns resources by specified parameter type and value (listSipRoutePattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipRoutePattern operation.",
        "tags": [
          "siproutepattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunks": {
      "get": {
        "summary": "GET /api/axl/siptrunks (listSipTrunk)",
        "description": "Returns all available siptrunks resources - Returns all available siptrunks resources (listSipTrunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunks/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siptrunks/{parameter}/{value} (listSipTrunk)",
        "description": "Filter siptrunks resources by specified parameter type and value (listSipTrunk)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipTrunk operation.",
        "tags": [
          "siptrunk"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofiles": {
      "get": {
        "summary": "GET /api/axl/siptrunksecurityprofiles (listSipTrunkSecurityProfile)",
        "description": "Returns all available siptrunksecurityprofiles resources - Returns all available siptrunksecurityprofiles resources (listSipTrunkSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/siptrunksecurityprofiles/{parameter}/{value} (listSipTrunkSecurityProfile)",
        "description": "Filter siptrunksecurityprofiles resources by specified parameter type and value (listSipTrunkSecurityProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSipTrunkSecurityProfile operation.",
        "tags": [
          "siptrunksecurityprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplates": {
      "get": {
        "summary": "GET /api/axl/softkeytemplates (listSoftKeyTemplate)",
        "description": "Returns all available softkeytemplates resources - Returns all available softkeytemplates resources (listSoftKeyTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/softkeytemplates/{parameter}/{value} (listSoftKeyTemplate)",
        "description": "Filter softkeytemplates resources by specified parameter type and value (listSoftKeyTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSoftKeyTemplate operation.",
        "tags": [
          "softkeytemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srsts": {
      "get": {
        "summary": "GET /api/axl/srsts (listSrst)",
        "description": "Returns all available srsts resources - Returns all available srsts resources (listSrst)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSrst operation.",
        "tags": [
          "srst"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srsts/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/srsts/{parameter}/{value} (listSrst)",
        "description": "Filter srsts resources by specified parameter type and value (listSrst)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listSrst operation.",
        "tags": [
          "srst"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiods": {
      "get": {
        "summary": "GET /api/axl/timeperiods (listTimePeriod)",
        "description": "Returns all available timeperiods resources - Returns all available timeperiods resources (listTimePeriod)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiods/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/timeperiods/{parameter}/{value} (listTimePeriod)",
        "description": "Filter timeperiods resources by specified parameter type and value (listTimePeriod)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTimePeriod operation.",
        "tags": [
          "timeperiod"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedules": {
      "get": {
        "summary": "GET /api/axl/timeschedules (listTimeSchedule)",
        "description": "Returns all available timeschedules resources - Returns all available timeschedules resources (listTimeSchedule)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedules/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/timeschedules/{parameter}/{value} (listTimeSchedule)",
        "description": "Filter timeschedules resources by specified parameter type and value (listTimeSchedule)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTimeSchedule operation.",
        "tags": [
          "timeschedule"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoders": {
      "get": {
        "summary": "GET /api/axl/transcoders (listTranscoder)",
        "description": "Returns all available transcoders resources - Returns all available transcoders resources (listTranscoder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoders/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transcoders/{parameter}/{value} (listTranscoder)",
        "description": "Filter transcoders resources by specified parameter type and value (listTranscoder)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTranscoder operation.",
        "tags": [
          "transcoder"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofiles": {
      "get": {
        "summary": "GET /api/axl/transformationprofiles (listTransformationProfile)",
        "description": "Returns all available transformationprofiles resources - Returns all available transformationprofiles resources (listTransformationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transformationprofiles/{parameter}/{value} (listTransformationProfile)",
        "description": "Filter transformationprofiles resources by specified parameter type and value (listTransformationProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTransformationProfile operation.",
        "tags": [
          "transformationprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatterns": {
      "get": {
        "summary": "GET /api/axl/transpatterns (listTransPattern)",
        "description": "Returns all available transpatterns resources - Returns all available transpatterns resources (listTransPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatterns/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/transpatterns/{parameter}/{value} (listTransPattern)",
        "description": "Filter transpatterns resources by specified parameter type and value (listTransPattern)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTransPattern operation.",
        "tags": [
          "transpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificates": {
      "get": {
        "summary": "GET /api/axl/tvscertificates (listTvsCertificate)",
        "description": "Returns all available tvscertificates resources - Returns all available tvscertificates resources (listTvsCertificate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/tvscertificates/{parameter}/{value} (listTvsCertificate)",
        "description": "Filter tvscertificates resources by specified parameter type and value (listTvsCertificate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listTvsCertificate operation.",
        "tags": [
          "tvscertificate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservices": {
      "get": {
        "summary": "GET /api/axl/ucservices (listUcService)",
        "description": "Returns all available ucservices resources - Returns all available ucservices resources (listUcService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUcService operation.",
        "tags": [
          "ucservice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/ucservices/{parameter}/{value} (listUcService)",
        "description": "Filter ucservices resources by specified parameter type and value (listUcService)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUcService operation.",
        "tags": [
          "ucservice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassigneddevices": {
      "get": {
        "summary": "GET /api/axl/unassigneddevices (listUnassignedDevice)",
        "description": "Returns all available unassigneddevices resources - Returns all available unassigneddevices resources (listUnassignedDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedDevice operation.",
        "tags": [
          "unassigneddevice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassigneddevices/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/unassigneddevices/{parameter}/{value} (listUnassignedDevice)",
        "description": "Filter unassigneddevices resources by specified parameter type and value (listUnassignedDevice)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedDevice operation.",
        "tags": [
          "unassigneddevice"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceservers": {
      "get": {
        "summary": "GET /api/axl/unassignedpresenceservers (listUnassignedPresenceServers)",
        "description": "Returns all available unassignedpresenceservers resources - Returns all available unassignedpresenceservers resources (listUnassignedPresenceServers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedPresenceServers operation.",
        "tags": [
          "unassignedpresenceserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/unassignedpresenceservers/{parameter}/{value} (listUnassignedPresenceServers)",
        "description": "Filter unassignedpresenceservers resources by specified parameter type and value (listUnassignedPresenceServers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedPresenceServers operation.",
        "tags": [
          "unassignedpresenceserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceusers": {
      "get": {
        "summary": "GET /api/axl/unassignedpresenceusers (listUnassignedPresenceUsers)",
        "description": "Returns all available unassignedpresenceusers resources - Returns all available unassignedpresenceusers resources (listUnassignedPresenceUsers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedPresenceUsers operation.",
        "tags": [
          "unassignedpresenceuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceusers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/unassignedpresenceusers/{parameter}/{value} (listUnassignedPresenceUsers)",
        "description": "Filter unassignedpresenceusers resources by specified parameter type and value (listUnassignedPresenceUsers)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUnassignedPresenceUsers operation.",
        "tags": [
          "unassignedpresenceuser"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplates": {
      "get": {
        "summary": "GET /api/axl/universaldevicetemplates (listUniversalDeviceTemplate)",
        "description": "Returns all available universaldevicetemplates resources - Returns all available universaldevicetemplates resources (listUniversalDeviceTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/universaldevicetemplates/{parameter}/{value} (listUniversalDeviceTemplate)",
        "description": "Filter universaldevicetemplates resources by specified parameter type and value (listUniversalDeviceTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUniversalDeviceTemplate operation.",
        "tags": [
          "universaldevicetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplates": {
      "get": {
        "summary": "GET /api/axl/universallinetemplates (listUniversalLineTemplate)",
        "description": "Returns all available universallinetemplates resources - Returns all available universallinetemplates resources (listUniversalLineTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplates/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/universallinetemplates/{parameter}/{value} (listUniversalLineTemplate)",
        "description": "Filter universallinetemplates resources by specified parameter type and value (listUniversalLineTemplate)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUniversalLineTemplate operation.",
        "tags": [
          "universallinetemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/users": {
      "get": {
        "summary": "GET /api/axl/users (listUser)",
        "description": "Returns all available users resources - Returns all available users resources (listUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUser operation.",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/users/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/users/{parameter}/{value} (listUser)",
        "description": "Filter users resources by specified parameter type and value (listUser)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUser operation.",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroups": {
      "get": {
        "summary": "GET /api/axl/usergroups (listUserGroup)",
        "description": "Returns all available usergroups resources - Returns all available usergroups resources (listUserGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/usergroups/{parameter}/{value} (listUserGroup)",
        "description": "Filter usergroups resources by specified parameter type and value (listUserGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUserGroup operation.",
        "tags": [
          "usergroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovisions": {
      "get": {
        "summary": "GET /api/axl/userprofileprovisions (listUserProfileProvision)",
        "description": "Returns all available userprofileprovisions resources - Returns all available userprofileprovisions resources (listUserProfileProvision)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovisions/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/userprofileprovisions/{parameter}/{value} (listUserProfileProvision)",
        "description": "Filter userprofileprovisions resources by specified parameter type and value (listUserProfileProvision)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listUserProfileProvision operation.",
        "tags": [
          "userprofileprovision"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohservers": {
      "get": {
        "summary": "GET /api/axl/vohservers (listVohServer)",
        "description": "Returns all available vohservers resources - Returns all available vohservers resources (listVohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohservers/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vohservers/{parameter}/{value} (listVohServer)",
        "description": "Filter vohservers resources by specified parameter type and value (listVohServer)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVohServer operation.",
        "tags": [
          "vohserver"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilots": {
      "get": {
        "summary": "GET /api/axl/voicemailpilots (listVoiceMailPilot)",
        "description": "Returns all available voicemailpilots resources - Returns all available voicemailpilots resources (listVoiceMailPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilots/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailpilots/{parameter}/{value} (listVoiceMailPilot)",
        "description": "Filter voicemailpilots resources by specified parameter type and value (listVoiceMailPilot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailPilot operation.",
        "tags": [
          "voicemailpilot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailports": {
      "get": {
        "summary": "GET /api/axl/voicemailports (listVoiceMailPort)",
        "description": "Returns all available voicemailports resources - Returns all available voicemailports resources (listVoiceMailPort)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailports/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailports/{parameter}/{value} (listVoiceMailPort)",
        "description": "Filter voicemailports resources by specified parameter type and value (listVoiceMailPort)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailPort operation.",
        "tags": [
          "voicemailport"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofiles": {
      "get": {
        "summary": "GET /api/axl/voicemailprofiles (listVoiceMailProfile)",
        "description": "Returns all available voicemailprofiles resources - Returns all available voicemailprofiles resources (listVoiceMailProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/voicemailprofiles/{parameter}/{value} (listVoiceMailProfile)",
        "description": "Filter voicemailprofiles resources by specified parameter type and value (listVoiceMailProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVoiceMailProfile operation.",
        "tags": [
          "voicemailprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateways": {
      "get": {
        "summary": "GET /api/axl/vpngateways (listVpnGateway)",
        "description": "Returns all available vpngateways resources - Returns all available vpngateways resources (listVpnGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateways/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpngateways/{parameter}/{value} (listVpnGateway)",
        "description": "Filter vpngateways resources by specified parameter type and value (listVpnGateway)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnGateway operation.",
        "tags": [
          "vpngateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroups": {
      "get": {
        "summary": "GET /api/axl/vpngroups (listVpnGroup)",
        "description": "Returns all available vpngroups resources - Returns all available vpngroups resources (listVpnGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpngroups/{parameter}/{value} (listVpnGroup)",
        "description": "Filter vpngroups resources by specified parameter type and value (listVpnGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnGroup operation.",
        "tags": [
          "vpngroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofiles": {
      "get": {
        "summary": "GET /api/axl/vpnprofiles (listVpnProfile)",
        "description": "Returns all available vpnprofiles resources - Returns all available vpnprofiles resources (listVpnProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/vpnprofiles/{parameter}/{value} (listVpnProfile)",
        "description": "Filter vpnprofiles resources by specified parameter type and value (listVpnProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listVpnProfile operation.",
        "tags": [
          "vpnprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspots": {
      "get": {
        "summary": "GET /api/axl/wifihotspots (listWifiHotspot)",
        "description": "Returns all available wifihotspots resources - Returns all available wifihotspots resources (listWifiHotspot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspots/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wifihotspots/{parameter}/{value} (listWifiHotspot)",
        "description": "Filter wifihotspots resources by specified parameter type and value (listWifiHotspot)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWifiHotspot operation.",
        "tags": [
          "wifihotspot"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofiles": {
      "get": {
        "summary": "GET /api/axl/wlanprofiles (listWLANProfile)",
        "description": "Returns all available wlanprofiles resources - Returns all available wlanprofiles resources (listWLANProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofiles/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wlanprofiles/{parameter}/{value} (listWLANProfile)",
        "description": "Filter wlanprofiles resources by specified parameter type and value (listWLANProfile)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWLANProfile operation.",
        "tags": [
          "wlanprofile"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroups": {
      "get": {
        "summary": "GET /api/axl/wlanprofilegroups (listWlanProfileGroup)",
        "description": "Returns all available wlanprofilegroups resources - Returns all available wlanprofilegroups resources (listWlanProfileGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroups/{parameter}/{value}": {
      "get": {
        "summary": "GET /api/axl/wlanprofilegroups/{parameter}/{value} (listWlanProfileGroup)",
        "description": "Filter wlanprofilegroups resources by specified parameter type and value (listWlanProfileGroup)\n\n**NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the listWlanProfileGroup operation.",
        "tags": [
          "wlanprofilegroup"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lockphone": {
      "post": {
        "summary": "POST /api/axl/lockphone (lockPhone)",
        "description": "Execute lockPhone AXL operation (lockPhone)",
        "tags": [
          "lockphone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationtosoftkeytemplate/{parameter}/{value}": {
      "delete": {
        "summary": "DELETE /api/axl/applicationtosoftkeytemplate/{parameter}/{value} (removeApplicationToSoftkeyTemplate)",
        "description": "Filter applicationtosoftkeytemplate resources by specified parameter type and value (removeApplicationToSoftkeyTemplate)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeApplicationToSoftkeyTemplate operation.",
        "tags": [
          "applicationtosoftkeytemplate"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracing/{parameter}/{value}": {
      "delete": {
        "summary": "DELETE /api/axl/calledpartytracing/{parameter}/{value} (removeCalledPartyTracing)",
        "description": "Filter calledpartytracing resources by specified parameter type and value (removeCalledPartyTracing)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeCalledPartyTracing operation.",
        "tags": [
          "calledpartytracing"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysubunits/{parameter}/{value}": {
      "delete": {
        "summary": "DELETE /api/axl/gatewaysubunits/{parameter}/{value} (removeGatewaySubunits)",
        "description": "Filter gatewaysubunits resources by specified parameter type and value (removeGatewaySubunits)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeGatewaySubunits operation.",
        "tags": [
          "gatewaysubunit"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcode/{parameter}/{value}": {
      "delete": {
        "summary": "DELETE /api/axl/phoneactivationcode/{parameter}/{value} (removePhoneActivationCode)",
        "description": "Filter phoneactivationcode resources by specified parameter type and value (removePhoneActivationCode)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removePhoneActivationCode operation.",
        "tags": [
          "phoneactivationcode"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unitstogateway/{parameter}/{value}": {
      "delete": {
        "summary": "DELETE /api/axl/unitstogateway/{parameter}/{value} (removeUnitsToGateway)",
        "description": "Filter unitstogateway resources by specified parameter type and value (removeUnitsToGateway)\n\n**Resource Identifier:** For delete operations, you can identify resources using either:\n    - URL path parameters as shown in this endpoint (recommended)\n    - Request body with either name or uuid (both are optional)\n    - For example: `{ \"name\": \"Example-Name\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\" }`\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the removeUnitsToGateway operation.",
        "tags": [
          "unitstogateway"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcallmanager": {
      "post": {
        "summary": "POST /api/axl/resetcallmanager (resetCallManager)",
        "description": "Execute resetCallManager AXL operation (resetCallManager)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCallManager operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcallmanagergroup": {
      "post": {
        "summary": "POST /api/axl/resetcallmanagergroup (resetCallManagerGroup)",
        "description": "Execute resetCallManagerGroup AXL operation (resetCallManagerGroup)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCallManagerGroup operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "POST /api/axl/resetciscocatalyst6000e1voipgateway (resetCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute resetCiscoCatalyst6000E1VoIPGateway AXL operation (resetCiscoCatalyst6000E1VoIPGateway)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCiscoCatalyst6000E1VoIPGateway operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "POST /api/axl/resetciscocatalyst6000t1voipgatewaypri (resetCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute resetCiscoCatalyst6000T1VoIPGatewayPri AXL operation (resetCiscoCatalyst6000T1VoIPGatewayPri)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCiscoCatalyst6000T1VoIPGatewayPri operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "POST /api/axl/resetciscocatalyst6000t1voipgatewayt1 (resetCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute resetCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (resetCiscoCatalyst6000T1VoIPGatewayT1)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCiscoCatalyst6000T1VoIPGatewayT1 operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "POST /api/axl/resetciscocatalyst600024portfxsgateway (resetCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute resetCiscoCatalyst600024PortFXSGateway AXL operation (resetCiscoCatalyst600024PortFXSGateway)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCiscoCatalyst600024PortFXSGateway operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcommondeviceconfig": {
      "post": {
        "summary": "POST /api/axl/resetcommondeviceconfig (resetCommonDeviceConfig)",
        "description": "Execute resetCommonDeviceConfig AXL operation (resetCommonDeviceConfig)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCommonDeviceConfig operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcommonphoneconfig": {
      "post": {
        "summary": "POST /api/axl/resetcommonphoneconfig (resetCommonPhoneConfig)",
        "description": "Execute resetCommonPhoneConfig AXL operation (resetCommonPhoneConfig)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCommonPhoneConfig operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetconferencebridge": {
      "post": {
        "summary": "POST /api/axl/resetconferencebridge (resetConferenceBridge)",
        "description": "Execute resetConferenceBridge AXL operation (resetConferenceBridge)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetConferenceBridge operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetctiroutepoint": {
      "post": {
        "summary": "POST /api/axl/resetctiroutepoint (resetCtiRoutePoint)",
        "description": "Execute resetCtiRoutePoint AXL operation (resetCtiRoutePoint)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetCtiRoutePoint operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdatetimegroup": {
      "post": {
        "summary": "POST /api/axl/resetdatetimegroup (resetDateTimeGroup)",
        "description": "Execute resetDateTimeGroup AXL operation (resetDateTimeGroup)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetDateTimeGroup operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdevicepool": {
      "post": {
        "summary": "POST /api/axl/resetdevicepool (resetDevicePool)",
        "description": "Execute resetDevicePool AXL operation (resetDevicePool)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetDevicePool operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdirectedcallpark": {
      "post": {
        "summary": "POST /api/axl/resetdirectedcallpark (resetDirectedCallPark)",
        "description": "Execute resetDirectedCallPark AXL operation (resetDirectedCallPark)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetDirectedCallPark operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetenterpriseparameters": {
      "post": {
        "summary": "POST /api/axl/resetenterpriseparameters (resetEnterpriseParameters)",
        "description": "Execute resetEnterpriseParameters AXL operation (resetEnterpriseParameters)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetEnterpriseParameters operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetgatekeeper": {
      "post": {
        "summary": "POST /api/axl/resetgatekeeper (resetGatekeeper)",
        "description": "Execute resetGatekeeper AXL operation (resetGatekeeper)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetGatekeeper operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetgateway": {
      "post": {
        "summary": "POST /api/axl/resetgateway (resetGateway)",
        "description": "Execute resetGateway AXL operation (resetGateway)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetGateway operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323gateway": {
      "post": {
        "summary": "POST /api/axl/reseth323gateway (resetH323Gateway)",
        "description": "Execute resetH323Gateway AXL operation (resetH323Gateway)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetH323Gateway operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323phone": {
      "post": {
        "summary": "POST /api/axl/reseth323phone (resetH323Phone)",
        "description": "Execute resetH323Phone AXL operation (resetH323Phone)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetH323Phone operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323trunk": {
      "post": {
        "summary": "POST /api/axl/reseth323trunk (resetH323Trunk)",
        "description": "Execute resetH323Trunk AXL operation (resetH323Trunk)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetH323Trunk operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resethuntlist": {
      "post": {
        "summary": "POST /api/axl/resethuntlist (resetHuntList)",
        "description": "Execute resetHuntList AXL operation (resetHuntList)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetHuntList operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetline": {
      "post": {
        "summary": "POST /api/axl/resetline (resetLine)",
        "description": "Execute resetLine AXL operation (resetLine)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetLine operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetmtp": {
      "post": {
        "summary": "POST /api/axl/resetmtp (resetMtp)",
        "description": "Execute resetMtp AXL operation (resetMtp)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetMtp operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetphone": {
      "post": {
        "summary": "POST /api/axl/resetphone (resetPhone)",
        "description": "Execute resetPhone AXL operation (resetPhone)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetPhone operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetphonesecurityprofile": {
      "post": {
        "summary": "POST /api/axl/resetphonesecurityprofile (resetPhoneSecurityProfile)",
        "description": "Execute resetPhoneSecurityProfile AXL operation (resetPhoneSecurityProfile)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetPhoneSecurityProfile operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetresourceprioritynamespace": {
      "post": {
        "summary": "POST /api/axl/resetresourceprioritynamespace (resetResourcePriorityNamespace)",
        "description": "Execute resetResourcePriorityNamespace AXL operation (resetResourcePriorityNamespace)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetResourcePriorityNamespace operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetresourceprioritynamespacelist": {
      "post": {
        "summary": "POST /api/axl/resetresourceprioritynamespacelist (resetResourcePriorityNamespaceList)",
        "description": "Execute resetResourcePriorityNamespaceList AXL operation (resetResourcePriorityNamespaceList)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetResourcePriorityNamespaceList operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetroutelist": {
      "post": {
        "summary": "POST /api/axl/resetroutelist (resetRouteList)",
        "description": "Execute resetRouteList AXL operation (resetRouteList)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetRouteList operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsiptrunk": {
      "post": {
        "summary": "POST /api/axl/resetsiptrunk (resetSipTrunk)",
        "description": "Execute resetSipTrunk AXL operation (resetSipTrunk)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetSipTrunk operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsiptrunksecurityprofile": {
      "post": {
        "summary": "POST /api/axl/resetsiptrunksecurityprofile (resetSipTrunkSecurityProfile)",
        "description": "Execute resetSipTrunkSecurityProfile AXL operation (resetSipTrunkSecurityProfile)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetSipTrunkSecurityProfile operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsrst": {
      "post": {
        "summary": "POST /api/axl/resetsrst (resetSrst)",
        "description": "Execute resetSrst AXL operation (resetSrst)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetSrst operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resettranscoder": {
      "post": {
        "summary": "POST /api/axl/resettranscoder (resetTranscoder)",
        "description": "Execute resetTranscoder AXL operation (resetTranscoder)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetTranscoder operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetucservice": {
      "post": {
        "summary": "POST /api/axl/resetucservice (resetUcService)",
        "description": "Execute resetUcService AXL operation (resetUcService)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetUcService operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvg224": {
      "post": {
        "summary": "POST /api/axl/resetvg224 (resetVg224)",
        "description": "Execute resetVg224 AXL operation (resetVg224)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetVg224 operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvoicemailport": {
      "post": {
        "summary": "POST /api/axl/resetvoicemailport (resetVoiceMailPort)",
        "description": "Execute resetVoiceMailPort AXL operation (resetVoiceMailPort)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetVoiceMailPort operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvoicemailprofile": {
      "post": {
        "summary": "POST /api/axl/resetvoicemailprofile (resetVoiceMailProfile)",
        "description": "Execute resetVoiceMailProfile AXL operation (resetVoiceMailProfile)\n\n**Reset Resource:** For reset operations, you only need to provide an identifier:\n      - Use name or uuid at the root level to identify the resource to reset\n      - Format: `{ \"name\": \"Example-Name\", \"uuid\": \"\" }` or `{ \"uuid\": \"12345678-1234-1234-1234-123456789012\", \"name\": \"\" }`\n      - URL path parameters can also be used as shown in this endpoint\n      - Additional parameters can be included at the root level if needed\n      - No nesting or wrapper objects - all properties must be at the root level\n      \n      **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n      use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the resetVoiceMailProfile operation.",
        "tags": [
          "reset"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Reset by Name",
                  "description": "Provide the name for reset operations",
                  "value": {
                    "name": "Example-Name",
                    "uuid": ""
                  }
                },
                "example2": {
                  "summary": "Reset by UUID",
                  "description": "UUID is the most reliable identifier for reset operations (recommended)",
                  "value": {
                    "uuid": "12345678-1234-1234-1234-123456789012",
                    "name": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartcallmanager": {
      "post": {
        "summary": "POST /api/axl/restartcallmanager (restartCallManager)",
        "description": "Execute restartCallManager AXL operation (restartCallManager)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "POST /api/axl/restartciscocatalyst6000e1voipgateway (restartCiscoCatalyst6000E1VoIPGateway)",
        "description": "Execute restartCiscoCatalyst6000E1VoIPGateway AXL operation (restartCiscoCatalyst6000E1VoIPGateway)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "POST /api/axl/restartciscocatalyst6000t1voipgatewaypri (restartCiscoCatalyst6000T1VoIPGatewayPri)",
        "description": "Execute restartCiscoCatalyst6000T1VoIPGatewayPri AXL operation (restartCiscoCatalyst6000T1VoIPGatewayPri)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "POST /api/axl/restartciscocatalyst6000t1voipgatewayt1 (restartCiscoCatalyst6000T1VoIPGatewayT1)",
        "description": "Execute restartCiscoCatalyst6000T1VoIPGatewayT1 AXL operation (restartCiscoCatalyst6000T1VoIPGatewayT1)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "POST /api/axl/restartciscocatalyst600024portfxsgateway (restartCiscoCatalyst600024PortFXSGateway)",
        "description": "Execute restartCiscoCatalyst600024PortFXSGateway AXL operation (restartCiscoCatalyst600024PortFXSGateway)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartconferencebridge": {
      "post": {
        "summary": "POST /api/axl/restartconferencebridge (restartConferenceBridge)",
        "description": "Execute restartConferenceBridge AXL operation (restartConferenceBridge)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartctiroutepoint": {
      "post": {
        "summary": "POST /api/axl/restartctiroutepoint (restartCtiRoutePoint)",
        "description": "Execute restartCtiRoutePoint AXL operation (restartCtiRoutePoint)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartdevicepool": {
      "post": {
        "summary": "POST /api/axl/restartdevicepool (restartDevicePool)",
        "description": "Execute restartDevicePool AXL operation (restartDevicePool)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartenterpriseparameters": {
      "post": {
        "summary": "POST /api/axl/restartenterpriseparameters (restartEnterpriseParameters)",
        "description": "Execute restartEnterpriseParameters AXL operation (restartEnterpriseParameters)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartgatekeeper": {
      "post": {
        "summary": "POST /api/axl/restartgatekeeper (restartGatekeeper)",
        "description": "Execute restartGatekeeper AXL operation (restartGatekeeper)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartgateway": {
      "post": {
        "summary": "POST /api/axl/restartgateway (restartGateway)",
        "description": "Execute restartGateway AXL operation (restartGateway)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323gateway": {
      "post": {
        "summary": "POST /api/axl/restarth323gateway (restartH323Gateway)",
        "description": "Execute restartH323Gateway AXL operation (restartH323Gateway)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323phone": {
      "post": {
        "summary": "POST /api/axl/restarth323phone (restartH323Phone)",
        "description": "Execute restartH323Phone AXL operation (restartH323Phone)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323trunk": {
      "post": {
        "summary": "POST /api/axl/restarth323trunk (restartH323Trunk)",
        "description": "Execute restartH323Trunk AXL operation (restartH323Trunk)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartline": {
      "post": {
        "summary": "POST /api/axl/restartline (restartLine)",
        "description": "Execute restartLine AXL operation (restartLine)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartmtp": {
      "post": {
        "summary": "POST /api/axl/restartmtp (restartMtp)",
        "description": "Execute restartMtp AXL operation (restartMtp)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartphone": {
      "post": {
        "summary": "POST /api/axl/restartphone (restartPhone)",
        "description": "Execute restartPhone AXL operation (restartPhone)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartphonebuttontemplate": {
      "post": {
        "summary": "POST /api/axl/restartphonebuttontemplate (restartPhoneButtonTemplate)",
        "description": "Execute restartPhoneButtonTemplate AXL operation (restartPhoneButtonTemplate)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartregion": {
      "post": {
        "summary": "POST /api/axl/restartregion (restartRegion)",
        "description": "Execute restartRegion AXL operation (restartRegion)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartresourceprioritynamespace": {
      "post": {
        "summary": "POST /api/axl/restartresourceprioritynamespace (restartResourcePriorityNamespace)",
        "description": "Execute restartResourcePriorityNamespace AXL operation (restartResourcePriorityNamespace)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartresourceprioritynamespacelist": {
      "post": {
        "summary": "POST /api/axl/restartresourceprioritynamespacelist (restartResourcePriorityNamespaceList)",
        "description": "Execute restartResourcePriorityNamespaceList AXL operation (restartResourcePriorityNamespaceList)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartroutepartition": {
      "post": {
        "summary": "POST /api/axl/restartroutepartition (restartRoutePartition)",
        "description": "Execute restartRoutePartition AXL operation (restartRoutePartition)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsipprofile": {
      "post": {
        "summary": "POST /api/axl/restartsipprofile (restartSipProfile)",
        "description": "Execute restartSipProfile AXL operation (restartSipProfile)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsiptrunk": {
      "post": {
        "summary": "POST /api/axl/restartsiptrunk (restartSipTrunk)",
        "description": "Execute restartSipTrunk AXL operation (restartSipTrunk)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsoftkeytemplate": {
      "post": {
        "summary": "POST /api/axl/restartsoftkeytemplate (restartSoftKeyTemplate)",
        "description": "Execute restartSoftKeyTemplate AXL operation (restartSoftKeyTemplate)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsrst": {
      "post": {
        "summary": "POST /api/axl/restartsrst (restartSrst)",
        "description": "Execute restartSrst AXL operation (restartSrst)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartucservice": {
      "post": {
        "summary": "POST /api/axl/restartucservice (restartUcService)",
        "description": "Execute restartUcService AXL operation (restartUcService)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvg224": {
      "post": {
        "summary": "POST /api/axl/restartvg224 (restartVg224)",
        "description": "Execute restartVg224 AXL operation (restartVg224)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvoicemailport": {
      "post": {
        "summary": "POST /api/axl/restartvoicemailport (restartVoiceMailPort)",
        "description": "Execute restartVoiceMailPort AXL operation (restartVoiceMailPort)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvoicemailprofile": {
      "post": {
        "summary": "POST /api/axl/restartvoicemailprofile (restartVoiceMailProfile)",
        "description": "Execute restartVoiceMailProfile AXL operation (restartVoiceMailProfile)",
        "tags": [
          "restart"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignpresenceuser": {
      "post": {
        "summary": "POST /api/axl/unassignpresenceuser (unassignPresenceUser)",
        "description": "Execute unassignPresenceUser AXL operation (unassignPresenceUser)",
        "tags": [
          "unassignpresenceuser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroupmatrix": {
      "patch": {
        "summary": "PATCH /api/axl/aargroupmatrix (updateAarGroupMatrix)",
        "description": "Execute updateAarGroupMatrix AXL operation (updateAarGroupMatrix)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAarGroupMatrix operation.",
        "tags": [
          "aargroupmatrix"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroupmatrix/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/aargroupmatrix/{parameter}/{value} (updateAarGroupMatrix)",
        "description": "Filter aargroupmatrix resources by specified parameter type and value (updateAarGroupMatrix)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateAarGroupMatrix operation.",
        "tags": [
          "aargroupmatrix"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboarding": {
      "patch": {
        "summary": "PATCH /api/axl/ciscocloudonboarding (updateCiscoCloudOnboarding)",
        "description": "Execute updateCiscoCloudOnboarding AXL operation (updateCiscoCloudOnboarding)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCloudOnboarding operation.",
        "tags": [
          "ciscocloudonboarding"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboarding/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/ciscocloudonboarding/{parameter}/{value} (updateCiscoCloudOnboarding)",
        "description": "Filter ciscocloudonboarding resources by specified parameter type and value (updateCiscoCloudOnboarding)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateCiscoCloudOnboarding operation.",
        "tags": [
          "ciscocloudonboarding"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterdirectoryuri": {
      "patch": {
        "summary": "PATCH /api/axl/interclusterdirectoryuri (updateInterClusterDirectoryUri)",
        "description": "Execute updateInterClusterDirectoryUri AXL operation (updateInterClusterDirectoryUri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInterClusterDirectoryUri operation.",
        "tags": [
          "interclusterdirectoryuri"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterdirectoryuri/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/interclusterdirectoryuri/{parameter}/{value} (updateInterClusterDirectoryUri)",
        "description": "Filter interclusterdirectoryuri resources by specified parameter type and value (updateInterClusterDirectoryUri)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateInterClusterDirectoryUri operation.",
        "tags": [
          "interclusterdirectoryuri"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regionmatrix": {
      "patch": {
        "summary": "PATCH /api/axl/regionmatrix (updateRegionMatrix)",
        "description": "Execute updateRegionMatrix AXL operation (updateRegionMatrix)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRegionMatrix operation.",
        "tags": [
          "regionmatrix"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regionmatrix/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/regionmatrix/{parameter}/{value} (updateRegionMatrix)",
        "description": "Filter regionmatrix resources by specified parameter type and value (updateRegionMatrix)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRegionMatrix operation.",
        "tags": [
          "regionmatrix"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitionsforlearnedpatterns": {
      "patch": {
        "summary": "PATCH /api/axl/routepartitionsforlearnedpatterns (updateRoutePartitionsForLearnedPatterns)",
        "description": "Execute updateRoutePartitionsForLearnedPatterns AXL operation (updateRoutePartitionsForLearnedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePartitionsForLearnedPatterns operation.",
        "tags": [
          "routepartitionsforlearnedpattern"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitionsforlearnedpatterns/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/routepartitionsforlearnedpatterns/{parameter}/{value} (updateRoutePartitionsForLearnedPatterns)",
        "description": "Filter routepartitionsforlearnedpatterns resources by specified parameter type and value (updateRoutePartitionsForLearnedPatterns)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateRoutePartitionsForLearnedPatterns operation.",
        "tags": [
          "routepartitionsforlearnedpattern"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/selfprovisioning": {
      "patch": {
        "summary": "PATCH /api/axl/selfprovisioning (updateSelfProvisioning)",
        "description": "Execute updateSelfProvisioning AXL operation (updateSelfProvisioning)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSelfProvisioning operation.",
        "tags": [
          "selfprovisioning"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Direct parameters (no wrapper) [Generic]",
                  "description": "For update operations, provide parameters directly without a resource wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API",
                    "uuid": "12345678-1234-1234-1234-123456789012"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/selfprovisioning/{parameter}/{value}": {
      "patch": {
        "summary": "PATCH /api/axl/selfprovisioning/{parameter}/{value} (updateSelfProvisioning)",
        "description": "Filter selfprovisioning resources by specified parameter type and value (updateSelfProvisioning)\n\n**Direct Parameter Format:** For update operations (PATCH), provide parameters directly without a resource wrapper.\n    For example: `{ \"name\": \"Example\", \"description\": \"Updated description\" }`\n    If using a URL parameter (like uuid or name), it will be added automatically.\n    See the examples below for proper request structure.\n    \n    **NOTE:** The examples below are general guidelines. For detailed parameter requirements, \n    use the AXL Method Explorer at the top of the page or refer to Cisco's AXL documentation for the updateSelfProvisioning operation.",
        "tags": [
          "selfprovisioning"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wipephone": {
      "post": {
        "summary": "POST /api/axl/wipephone (wipePhone)",
        "description": "Execute wipePhone AXL operation (wipePhone)",
        "tags": [
          "wipephone"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "Example request body",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-aargroup": {
      "get": {
        "summary": "Execute getAarGroup AXL operation",
        "description": "Returns all available get-aargroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-aargroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAarGroup AXL operation with dynamic parameter",
        "description": "Filter get-aargroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-advertisedpatterns": {
      "get": {
        "summary": "Execute getAdvertisedPatterns AXL operation",
        "description": "Returns all available get-advertisedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-advertisedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAdvertisedPatterns AXL operation with dynamic parameter",
        "description": "Filter get-advertisedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-announcement": {
      "get": {
        "summary": "Execute getAnnouncement AXL operation",
        "description": "Returns all available get-announcement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-announcement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnouncement AXL operation with dynamic parameter",
        "description": "Filter get-announcement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-annunciator": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation",
        "description": "Returns all available get-annunciator resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-annunciator/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation with dynamic parameter",
        "description": "Filter get-annunciator resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationdialrules": {
      "get": {
        "summary": "Execute getApplicationDialRules AXL operation",
        "description": "Returns all available get-applicationdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationDialRules AXL operation with dynamic parameter",
        "description": "Filter get-applicationdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationserver": {
      "get": {
        "summary": "Execute getApplicationServer AXL operation",
        "description": "Returns all available get-applicationserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationServer AXL operation with dynamic parameter",
        "description": "Filter get-applicationserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationusercapfprofile": {
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation",
        "description": "Returns all available get-applicationusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter get-applicationusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appserverinfo": {
      "get": {
        "summary": "Execute getAppServerInfo AXL operation",
        "description": "Returns all available get-appserverinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appserverinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppServerInfo AXL operation with dynamic parameter",
        "description": "Filter get-appserverinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appuser": {
      "get": {
        "summary": "Execute getAppUser AXL operation",
        "description": "Returns all available get-appuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppUser AXL operation with dynamic parameter",
        "description": "Filter get-appuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-audiocodecpreferencelist": {
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation",
        "description": "Returns all available get-audiocodecpreferencelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-audiocodecpreferencelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter get-audiocodecpreferencelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-billingserver": {
      "get": {
        "summary": "Execute getBillingServer AXL operation",
        "description": "Returns all available get-billingserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-billingserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getBillingServer AXL operation with dynamic parameter",
        "description": "Filter get-billingserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-blockedlearnedpatterns": {
      "get": {
        "summary": "Execute getBlockedLearnedPatterns AXL operation",
        "description": "Returns all available get-blockedlearnedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-blockedlearnedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute getBlockedLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter get-blockedlearnedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-calledpartytransformationpattern": {
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation",
        "description": "Returns all available get-calledpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-calledpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter get-calledpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callerfilterlist": {
      "get": {
        "summary": "Execute getCallerFilterList AXL operation",
        "description": "Returns all available get-callerfilterlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callerfilterlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter get-callerfilterlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callingpartytransformationpattern": {
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation",
        "description": "Returns all available get-callingpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callingpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter get-callingpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanager": {
      "get": {
        "summary": "Execute getCallManager AXL operation",
        "description": "Returns all available get-callmanager resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanager/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManager AXL operation with dynamic parameter",
        "description": "Filter get-callmanager resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanagergroup": {
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation",
        "description": "Returns all available get-callmanagergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanagergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter get-callmanagergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpark": {
      "get": {
        "summary": "Execute getCallPark AXL operation",
        "description": "Returns all available get-callpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPark AXL operation with dynamic parameter",
        "description": "Filter get-callpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpickupgroup": {
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation",
        "description": "Returns all available get-callpickupgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpickupgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter get-callpickupgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccaprofiles": {
      "get": {
        "summary": "Execute getCCAProfiles AXL operation",
        "description": "Returns all available get-ccaprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccaprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCCAProfiles AXL operation with dynamic parameter",
        "description": "Filter get-ccaprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdadvertisingservice": {
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation",
        "description": "Returns all available get-ccdadvertisingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdadvertisingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter get-ccdadvertisingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdfeatureconfig": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation",
        "description": "Returns all available get-ccdfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-ccdfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddn": {
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation",
        "description": "Returns all available get-ccdhosteddn resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddn/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter get-ccdhosteddn resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddngroup": {
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation",
        "description": "Returns all available get-ccdhosteddngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter get-ccdhosteddngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdrequestingservice": {
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation",
        "description": "Returns all available get-ccdrequestingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdrequestingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation with dynamic parameter",
        "description": "Filter get-ccdrequestingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccmversion": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation",
        "description": "Returns all available get-ccmversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccmversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation with dynamic parameter",
        "description": "Filter get-ccmversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000e1voipgateway": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Returns all available get-ciscocatalyst6000e1voipgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000e1voipgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000e1voipgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewaypri": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Returns all available get-ciscocatalyst6000t1voipgatewaypri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewaypri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewayt1": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Returns all available get-ciscocatalyst6000t1voipgatewayt1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewayt1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst600024portfxsgateway": {
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Returns all available get-ciscocatalyst600024portfxsgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst600024portfxsgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst600024portfxsgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cmcinfo": {
      "get": {
        "summary": "Execute getCmcInfo AXL operation",
        "description": "Returns all available get-cmcinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cmcinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCmcInfo AXL operation with dynamic parameter",
        "description": "Filter get-cmcinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commondeviceconfig": {
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation",
        "description": "Returns all available get-commondeviceconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commondeviceconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter get-commondeviceconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commonphoneconfig": {
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation",
        "description": "Returns all available get-commonphoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commonphoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter get-commonphoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencebridge": {
      "get": {
        "summary": "Execute getConferenceBridge AXL operation",
        "description": "Returns all available get-conferencebridge resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencebridge/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter get-conferencebridge resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencenow": {
      "get": {
        "summary": "Execute getConferenceNow AXL operation",
        "description": "Returns all available get-conferencenow resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencenow/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceNow AXL operation with dynamic parameter",
        "description": "Filter get-conferencenow resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicy": {
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation",
        "description": "Returns all available get-credentialpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter get-credentialpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicydefault": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation",
        "description": "Returns all available get-credentialpolicydefault resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicydefault/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation with dynamic parameter",
        "description": "Filter get-credentialpolicydefault resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-css": {
      "get": {
        "summary": "Execute getCss AXL operation",
        "description": "Returns all available get-css resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-css/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCss AXL operation with dynamic parameter",
        "description": "Filter get-css resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ctiroutepoint": {
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation",
        "description": "Returns all available get-ctiroutepoint resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ctiroutepoint/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter get-ctiroutepoint resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cumaserversecurityprofile": {
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation",
        "description": "Returns all available get-cumaserversecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cumaserversecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-cumaserversecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customer": {
      "get": {
        "summary": "Execute getCustomer AXL operation",
        "description": "Returns all available get-customer resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customer/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomer AXL operation with dynamic parameter",
        "description": "Filter get-customer resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customuserfield": {
      "get": {
        "summary": "Execute getCustomUserField AXL operation",
        "description": "Returns all available get-customuserfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customuserfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomUserField AXL operation with dynamic parameter",
        "description": "Filter get-customuserfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-datetimegroup": {
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation",
        "description": "Returns all available get-datetimegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-datetimegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter get-datetimegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ddi": {
      "get": {
        "summary": "Execute getDdi AXL operation",
        "description": "Returns all available get-ddi resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ddi/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDdi AXL operation with dynamic parameter",
        "description": "Filter get-ddi resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-defaultdeviceprofile": {
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation",
        "description": "Returns all available get-defaultdeviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-defaultdeviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter get-defaultdeviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicedefaults": {
      "get": {
        "summary": "Execute getDeviceDefaults AXL operation",
        "description": "Returns all available get-devicedefaults resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicedefaults/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceDefaults AXL operation with dynamic parameter",
        "description": "Filter get-devicedefaults resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobility": {
      "get": {
        "summary": "Execute getDeviceMobility AXL operation",
        "description": "Returns all available get-devicemobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter get-devicemobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobilitygroup": {
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation",
        "description": "Returns all available get-devicemobilitygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobilitygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter get-devicemobilitygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicepool": {
      "get": {
        "summary": "Execute getDevicePool AXL operation",
        "description": "Returns all available get-devicepool resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicepool/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDevicePool AXL operation with dynamic parameter",
        "description": "Filter get-devicepool resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofile": {
      "get": {
        "summary": "Execute getDeviceProfile AXL operation",
        "description": "Returns all available get-deviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter get-deviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofileoptions": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation",
        "description": "Returns all available get-deviceprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation with dynamic parameter",
        "description": "Filter get-deviceprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpserver": {
      "get": {
        "summary": "Execute getDhcpServer AXL operation",
        "description": "Returns all available get-dhcpserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpServer AXL operation with dynamic parameter",
        "description": "Filter get-dhcpserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpsubnet": {
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation",
        "description": "Returns all available get-dhcpsubnet resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpsubnet/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter get-dhcpsubnet resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplan": {
      "get": {
        "summary": "Execute getDialPlan AXL operation",
        "description": "Returns all available get-dialplan resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplan/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlan AXL operation with dynamic parameter",
        "description": "Filter get-dialplan resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplantag": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation",
        "description": "Returns all available get-dialplantag resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplantag/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation with dynamic parameter",
        "description": "Filter get-dialplantag resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directedcallpark": {
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation",
        "description": "Returns all available get-directedcallpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directedcallpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter get-directedcallpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directorylookupdialrules": {
      "get": {
        "summary": "Execute getDirectoryLookupDialRules AXL operation",
        "description": "Returns all available get-directorylookupdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directorylookupdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirectoryLookupDialRules AXL operation with dynamic parameter",
        "description": "Filter get-directorylookupdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dirnumberaliaslookupandsync": {
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation",
        "description": "Returns all available get-dirnumberaliaslookupandsync resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dirnumberaliaslookupandsync/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter get-dirnumberaliaslookupandsync resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-elingroup": {
      "get": {
        "summary": "Execute getElinGroup AXL operation",
        "description": "Returns all available get-elingroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-elingroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getElinGroup AXL operation with dynamic parameter",
        "description": "Filter get-elingroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-emccfeatureconfig": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation",
        "description": "Returns all available get-emccfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-emccfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-emccfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-endusercapfprofile": {
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation",
        "description": "Returns all available get-endusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-endusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter get-endusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisefeatureaccessconfiguration": {
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Returns all available get-enterprisefeatureaccessconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisefeatureaccessconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-enterprisefeatureaccessconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisephoneconfig": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation",
        "description": "Returns all available get-enterprisephoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisephoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation with dynamic parameter",
        "description": "Filter get-enterprisephoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-expresswaycconfiguration": {
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation",
        "description": "Returns all available get-expresswaycconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-expresswaycconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-expresswaycconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-externalcallcontrolprofile": {
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation",
        "description": "Returns all available get-externalcallcontrolprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-externalcallcontrolprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter get-externalcallcontrolprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-facinfo": {
      "get": {
        "summary": "Execute getFacInfo AXL operation",
        "description": "Returns all available get-facinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-facinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFacInfo AXL operation with dynamic parameter",
        "description": "Filter get-facinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackfeatureconfig": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation",
        "description": "Returns all available get-fallbackfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-fallbackfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackprofile": {
      "get": {
        "summary": "Execute getFallbackProfile AXL operation",
        "description": "Returns all available get-fallbackprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter get-fallbackprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featurecontrolpolicy": {
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation",
        "description": "Returns all available get-featurecontrolpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featurecontrolpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter get-featurecontrolpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featuregrouptemplate": {
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation",
        "description": "Returns all available get-featuregrouptemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featuregrouptemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter get-featuregrouptemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fixedmohaudiosource": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation",
        "description": "Returns all available get-fixedmohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fixedmohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter get-fixedmohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatekeeper": {
      "get": {
        "summary": "Execute getGatekeeper AXL operation",
        "description": "Returns all available get-gatekeeper resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatekeeper/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatekeeper AXL operation with dynamic parameter",
        "description": "Filter get-gatekeeper resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gateway": {
      "get": {
        "summary": "Execute getGateway AXL operation",
        "description": "Returns all available get-gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGateway AXL operation with dynamic parameter",
        "description": "Filter get-gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointanalogaccess": {
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation",
        "description": "Returns all available get-gatewayendpointanalogaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointanalogaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointanalogaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccessbri": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccessbri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccessbri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccessbri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesspri": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccesspri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesspri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccesspri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesst1": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccesst1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesst1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccesst1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewaysccpendpoints": {
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation",
        "description": "Returns all available get-gatewaysccpendpoints resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewaysccpendpoints/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation with dynamic parameter",
        "description": "Filter get-gatewaysccpendpoints resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocation": {
      "get": {
        "summary": "Execute getGeoLocation AXL operation",
        "description": "Returns all available get-geolocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocation AXL operation with dynamic parameter",
        "description": "Filter get-geolocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationfilter": {
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation",
        "description": "Returns all available get-geolocationfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter get-geolocationfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationpolicy": {
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation",
        "description": "Returns all available get-geolocationpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter get-geolocationpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323gateway": {
      "get": {
        "summary": "Execute getH323Gateway AXL operation",
        "description": "Returns all available get-h323gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Gateway AXL operation with dynamic parameter",
        "description": "Filter get-h323gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323phone": {
      "get": {
        "summary": "Execute getH323Phone AXL operation",
        "description": "Returns all available get-h323phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Phone AXL operation with dynamic parameter",
        "description": "Filter get-h323phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323trunk": {
      "get": {
        "summary": "Execute getH323Trunk AXL operation",
        "description": "Returns all available get-h323trunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323trunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Trunk AXL operation with dynamic parameter",
        "description": "Filter get-h323trunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-handoffconfiguration": {
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation",
        "description": "Returns all available get-handoffconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-handoffconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-handoffconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-httpprofile": {
      "get": {
        "summary": "Execute getHttpProfile AXL operation",
        "description": "Returns all available get-httpprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-httpprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHttpProfile AXL operation with dynamic parameter",
        "description": "Filter get-httpprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntlist": {
      "get": {
        "summary": "Execute getHuntList AXL operation",
        "description": "Returns all available get-huntlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntList AXL operation with dynamic parameter",
        "description": "Filter get-huntlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntpilot": {
      "get": {
        "summary": "Execute getHuntPilot AXL operation",
        "description": "Returns all available get-huntpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntPilot AXL operation with dynamic parameter",
        "description": "Filter get-huntpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ilsconfig": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation",
        "description": "Returns all available get-ilsconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ilsconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation with dynamic parameter",
        "description": "Filter get-ilsconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeclient": {
      "get": {
        "summary": "Execute getImeClient AXL operation",
        "description": "Returns all available get-imeclient resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeclient/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeClient AXL operation with dynamic parameter",
        "description": "Filter get-imeclient resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imee164transformation": {
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation",
        "description": "Returns all available get-imee164transformation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imee164transformation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter get-imee164transformation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpattern": {
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation",
        "description": "Returns all available get-imeenrolledpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter get-imeenrolledpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpatterngroup": {
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation",
        "description": "Returns all available get-imeenrolledpatterngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpatterngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeenrolledpatterngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumber": {
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation",
        "description": "Returns all available get-imeexclusionnumber resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumber/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter get-imeexclusionnumber resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumbergroup": {
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation",
        "description": "Returns all available get-imeexclusionnumbergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumbergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeexclusionnumbergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefeatureconfig": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation",
        "description": "Returns all available get-imefeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-imefeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefirewall": {
      "get": {
        "summary": "Execute getImeFirewall AXL operation",
        "description": "Returns all available get-imefirewall resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefirewall/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFirewall AXL operation with dynamic parameter",
        "description": "Filter get-imefirewall resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imelearnedroutes": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation",
        "description": "Returns all available get-imelearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imelearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter get-imelearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefilterelement": {
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation",
        "description": "Returns all available get-imeroutefilterelement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefilterelement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter get-imeroutefilterelement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefiltergroup": {
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation",
        "description": "Returns all available get-imeroutefiltergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefiltergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeroutefiltergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeserver": {
      "get": {
        "summary": "Execute getImeServer AXL operation",
        "description": "Returns all available get-imeserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeServer AXL operation with dynamic parameter",
        "description": "Filter get-imeserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-importeddirectoryuricatalogs": {
      "get": {
        "summary": "Execute getImportedDirectoryUriCatalogs AXL operation",
        "description": "Returns all available get-importeddirectoryuricatalogs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-importeddirectoryuricatalogs/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImportedDirectoryUriCatalogs AXL operation with dynamic parameter",
        "description": "Filter get-importeddirectoryuricatalogs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-infrastructuredevice": {
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation",
        "description": "Returns all available get-infrastructuredevice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-infrastructuredevice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter get-infrastructuredevice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interactivevoiceresponse": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation",
        "description": "Returns all available get-interactivevoiceresponse resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interactivevoiceresponse/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation with dynamic parameter",
        "description": "Filter get-interactivevoiceresponse resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interclusterserviceprofile": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation",
        "description": "Returns all available get-interclusterserviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interclusterserviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation with dynamic parameter",
        "description": "Filter get-interclusterserviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ipphoneservices": {
      "get": {
        "summary": "Execute getIpPhoneServices AXL operation",
        "description": "Returns all available get-ipphoneservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ipphoneservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIpPhoneServices AXL operation with dynamic parameter",
        "description": "Filter get-ipphoneservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ivruserlocale": {
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation",
        "description": "Returns all available get-ivruserlocale resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ivruserlocale/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter get-ivruserlocale resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmgroup": {
      "get": {
        "summary": "Execute getLbmGroup AXL operation",
        "description": "Returns all available get-lbmgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmGroup AXL operation with dynamic parameter",
        "description": "Filter get-lbmgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmhubgroup": {
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation",
        "description": "Returns all available get-lbmhubgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmhubgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter get-lbmhubgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapauthentication": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation",
        "description": "Returns all available get-ldapauthentication resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapauthentication/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation with dynamic parameter",
        "description": "Filter get-ldapauthentication resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapdirectory": {
      "get": {
        "summary": "Execute getLdapDirectory AXL operation",
        "description": "Returns all available get-ldapdirectory resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapdirectory/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter get-ldapdirectory resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapfilter": {
      "get": {
        "summary": "Execute getLdapFilter AXL operation",
        "description": "Returns all available get-ldapfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapFilter AXL operation with dynamic parameter",
        "description": "Filter get-ldapfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsearch": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation",
        "description": "Returns all available get-ldapsearch resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsearch/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation with dynamic parameter",
        "description": "Filter get-ldapsearch resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsynccustomfield": {
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation",
        "description": "Returns all available get-ldapsynccustomfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsynccustomfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter get-ldapsynccustomfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsyncstatus": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation",
        "description": "Returns all available get-ldapsyncstatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsyncstatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation with dynamic parameter",
        "description": "Filter get-ldapsyncstatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsystem": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation",
        "description": "Returns all available get-ldapsystem resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsystem/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation with dynamic parameter",
        "description": "Filter get-ldapsystem resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-licenseduser": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation",
        "description": "Returns all available get-licenseduser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-licenseduser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation with dynamic parameter",
        "description": "Filter get-licenseduser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-line": {
      "get": {
        "summary": "Execute getLine AXL operation",
        "description": "Returns all available get-line resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-line/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLine AXL operation with dynamic parameter",
        "description": "Filter get-line resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-linegroup": {
      "get": {
        "summary": "Execute getLineGroup AXL operation",
        "description": "Returns all available get-linegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-linegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineGroup AXL operation with dynamic parameter",
        "description": "Filter get-linegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lineoptions": {
      "get": {
        "summary": "Execute getLineOptions AXL operation",
        "description": "Returns all available get-lineoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lineoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineOptions AXL operation with dynamic parameter",
        "description": "Filter get-lineoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-localroutegroup": {
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation",
        "description": "Returns all available get-localroutegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-localroutegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter get-localroutegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-location": {
      "get": {
        "summary": "Execute getLocation AXL operation",
        "description": "Returns all available get-location resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-location/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocation AXL operation with dynamic parameter",
        "description": "Filter get-location resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcegroup": {
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation",
        "description": "Returns all available get-mediaresourcegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter get-mediaresourcegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcelist": {
      "get": {
        "summary": "Execute getMediaResourceList AXL operation",
        "description": "Returns all available get-mediaresourcelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter get-mediaresourcelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-meetme": {
      "get": {
        "summary": "Execute getMeetMe AXL operation",
        "description": "Returns all available get-meetme resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-meetme/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMeetMe AXL operation with dynamic parameter",
        "description": "Filter get-meetme resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-messagewaiting": {
      "get": {
        "summary": "Execute getMessageWaiting AXL operation",
        "description": "Returns all available get-messagewaiting resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-messagewaiting/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter get-messagewaiting resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mlppdomain": {
      "get": {
        "summary": "Execute getMlppDomain AXL operation",
        "description": "Returns all available get-mlppdomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mlppdomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMlppDomain AXL operation with dynamic parameter",
        "description": "Filter get-mlppdomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilesmartclientprofile": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation",
        "description": "Returns all available get-mobilesmartclientprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilesmartclientprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation with dynamic parameter",
        "description": "Filter get-mobilesmartclientprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilevoiceaccess": {
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation",
        "description": "Returns all available get-mobilevoiceaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilevoiceaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation with dynamic parameter",
        "description": "Filter get-mobilevoiceaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobility": {
      "get": {
        "summary": "Execute getMobility AXL operation",
        "description": "Returns all available get-mobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobility AXL operation with dynamic parameter",
        "description": "Filter get-mobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilityprofile": {
      "get": {
        "summary": "Execute getMobilityProfile AXL operation",
        "description": "Returns all available get-mobilityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter get-mobilityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohaudiosource": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation",
        "description": "Returns all available get-mohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter get-mohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohserver": {
      "get": {
        "summary": "Execute getMohServer AXL operation",
        "description": "Returns all available get-mohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohServer AXL operation with dynamic parameter",
        "description": "Filter get-mohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mraservicedomain": {
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation",
        "description": "Returns all available get-mraservicedomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mraservicedomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter get-mraservicedomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mtp": {
      "get": {
        "summary": "Execute getMtp AXL operation",
        "description": "Returns all available get-mtp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mtp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMtp AXL operation with dynamic parameter",
        "description": "Filter get-mtp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-networkaccessprofile": {
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation",
        "description": "Returns all available get-networkaccessprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-networkaccessprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter get-networkaccessprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-numdevices": {
      "get": {
        "summary": "Execute getNumDevices AXL operation",
        "description": "Returns all available get-numdevices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-numdevices/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNumDevices AXL operation with dynamic parameter",
        "description": "Filter get-numdevices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-osversion": {
      "get": {
        "summary": "Execute getOSVersion AXL operation",
        "description": "Returns all available get-osversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-osversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getOSVersion AXL operation with dynamic parameter",
        "description": "Filter get-osversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-pagelayoutpreferences": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation",
        "description": "Returns all available get-pagelayoutpreferences resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-pagelayoutpreferences/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation with dynamic parameter",
        "description": "Filter get-pagelayoutpreferences resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phone": {
      "get": {
        "summary": "Execute getPhone AXL operation",
        "description": "Returns all available get-phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhone AXL operation with dynamic parameter",
        "description": "Filter get-phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonebuttontemplate": {
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation",
        "description": "Returns all available get-phonebuttontemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonebuttontemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter get-phonebuttontemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonentp": {
      "get": {
        "summary": "Execute getPhoneNtp AXL operation",
        "description": "Returns all available get-phonentp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonentp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneNtp AXL operation with dynamic parameter",
        "description": "Filter get-phonentp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phoneoptions": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation",
        "description": "Returns all available get-phoneoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phoneoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation with dynamic parameter",
        "description": "Filter get-phoneoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonesecurityprofile": {
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation",
        "description": "Returns all available get-phonesecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonesecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-phonesecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonetypedisplayinstance": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation",
        "description": "Returns all available get-phonetypedisplayinstance resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonetypedisplayinstance/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation with dynamic parameter",
        "description": "Filter get-phonetypedisplayinstance resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-physicallocation": {
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation",
        "description": "Returns all available get-physicallocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-physicallocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter get-physicallocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presencegroup": {
      "get": {
        "summary": "Execute getPresenceGroup AXL operation",
        "description": "Returns all available get-presencegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presencegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceGroup AXL operation with dynamic parameter",
        "description": "Filter get-presencegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presenceredundancygroup": {
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation",
        "description": "Returns all available get-presenceredundancygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presenceredundancygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter get-presenceredundancygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnode": {
      "get": {
        "summary": "Execute getProcessNode AXL operation",
        "description": "Returns all available get-processnode resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnode/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNode AXL operation with dynamic parameter",
        "description": "Filter get-processnode resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnodeservice": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation",
        "description": "Returns all available get-processnodeservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnodeservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation with dynamic parameter",
        "description": "Filter get-processnodeservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-recordingprofile": {
      "get": {
        "summary": "Execute getRecordingProfile AXL operation",
        "description": "Returns all available get-recordingprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-recordingprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter get-recordingprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-region": {
      "get": {
        "summary": "Execute getRegion AXL operation",
        "description": "Returns all available get-region resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-region/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegion AXL operation with dynamic parameter",
        "description": "Filter get-region resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-registrationdynamic": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation",
        "description": "Returns all available get-registrationdynamic resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-registrationdynamic/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation with dynamic parameter",
        "description": "Filter get-registrationdynamic resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotecluster": {
      "get": {
        "summary": "Execute getRemoteCluster AXL operation",
        "description": "Returns all available get-remotecluster resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotecluster/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter get-remotecluster resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestination": {
      "get": {
        "summary": "Execute getRemoteDestination AXL operation",
        "description": "Returns all available get-remotedestination resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestination/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter get-remotedestination resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestinationprofile": {
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation",
        "description": "Returns all available get-remotedestinationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestinationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter get-remotedestinationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespace": {
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation",
        "description": "Returns all available get-resourceprioritynamespace resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespace/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter get-resourceprioritynamespace resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespacelist": {
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation",
        "description": "Returns all available get-resourceprioritynamespacelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespacelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter get-resourceprioritynamespacelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routefilter": {
      "get": {
        "summary": "Execute getRouteFilter AXL operation",
        "description": "Returns all available get-routefilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routefilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteFilter AXL operation with dynamic parameter",
        "description": "Filter get-routefilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routegroup": {
      "get": {
        "summary": "Execute getRouteGroup AXL operation",
        "description": "Returns all available get-routegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteGroup AXL operation with dynamic parameter",
        "description": "Filter get-routegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routelist": {
      "get": {
        "summary": "Execute getRouteList AXL operation",
        "description": "Returns all available get-routelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteList AXL operation with dynamic parameter",
        "description": "Filter get-routelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepartition": {
      "get": {
        "summary": "Execute getRoutePartition AXL operation",
        "description": "Returns all available get-routepartition resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepartition/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePartition AXL operation with dynamic parameter",
        "description": "Filter get-routepartition resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepattern": {
      "get": {
        "summary": "Execute getRoutePattern AXL operation",
        "description": "Returns all available get-routepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePattern AXL operation with dynamic parameter",
        "description": "Filter get-routepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safccdpurgeblocklearnedroutes": {
      "get": {
        "summary": "Execute getSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Returns all available get-safccdpurgeblocklearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safccdpurgeblocklearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafCcdPurgeBlockLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter get-safccdpurgeblocklearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safforwarder": {
      "get": {
        "summary": "Execute getSafForwarder AXL operation",
        "description": "Returns all available get-safforwarder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safforwarder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafForwarder AXL operation with dynamic parameter",
        "description": "Filter get-safforwarder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safsecurityprofile": {
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation",
        "description": "Returns all available get-safsecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safsecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-safsecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sdptransparencyprofile": {
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation",
        "description": "Returns all available get-sdptransparencyprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sdptransparencyprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter get-sdptransparencyprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-secureconfig": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation",
        "description": "Returns all available get-secureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-secureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation with dynamic parameter",
        "description": "Filter get-secureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceparameter": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation",
        "description": "Returns all available get-serviceparameter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceparameter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation with dynamic parameter",
        "description": "Filter get-serviceparameter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceprofile": {
      "get": {
        "summary": "Execute getServiceProfile AXL operation",
        "description": "Returns all available get-serviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceProfile AXL operation with dynamic parameter",
        "description": "Filter get-serviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipdialrules": {
      "get": {
        "summary": "Execute getSipDialRules AXL operation",
        "description": "Returns all available get-sipdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipDialRules AXL operation with dynamic parameter",
        "description": "Filter get-sipdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipnormalizationscript": {
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation",
        "description": "Returns all available get-sipnormalizationscript resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipnormalizationscript/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter get-sipnormalizationscript resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofile": {
      "get": {
        "summary": "Execute getSipProfile AXL operation",
        "description": "Returns all available get-sipprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfile AXL operation with dynamic parameter",
        "description": "Filter get-sipprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofileoptions": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation",
        "description": "Returns all available get-sipprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation with dynamic parameter",
        "description": "Filter get-sipprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siprealm": {
      "get": {
        "summary": "Execute getSipRealm AXL operation",
        "description": "Returns all available get-siprealm resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siprealm/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRealm AXL operation with dynamic parameter",
        "description": "Filter get-siprealm resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siproutepattern": {
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation",
        "description": "Returns all available get-siproutepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siproutepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter get-siproutepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunk": {
      "get": {
        "summary": "Execute getSipTrunk AXL operation",
        "description": "Returns all available get-siptrunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunk AXL operation with dynamic parameter",
        "description": "Filter get-siptrunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunksecurityprofile": {
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation",
        "description": "Returns all available get-siptrunksecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunksecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-siptrunksecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-smartlicensestatus": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation",
        "description": "Returns all available get-smartlicensestatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-smartlicensestatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation with dynamic parameter",
        "description": "Filter get-smartlicensestatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpcommunitystring": {
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation",
        "description": "Returns all available get-snmpcommunitystring resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpcommunitystring/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation with dynamic parameter",
        "description": "Filter get-snmpcommunitystring resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpmib2list": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation",
        "description": "Returns all available get-snmpmib2list resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpmib2list/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation with dynamic parameter",
        "description": "Filter get-snmpmib2list resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpuser": {
      "get": {
        "summary": "Execute getSNMPUser AXL operation",
        "description": "Returns all available get-snmpuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPUser AXL operation with dynamic parameter",
        "description": "Filter get-snmpuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeyset": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation",
        "description": "Returns all available get-softkeyset resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeyset/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation with dynamic parameter",
        "description": "Filter get-softkeyset resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeytemplate": {
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation",
        "description": "Returns all available get-softkeytemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeytemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter get-softkeytemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-srst": {
      "get": {
        "summary": "Execute getSrst AXL operation",
        "description": "Returns all available get-srst resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-srst/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSrst AXL operation with dynamic parameter",
        "description": "Filter get-srst resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-syslogconfiguration": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation",
        "description": "Returns all available get-syslogconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-syslogconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-syslogconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeperiod": {
      "get": {
        "summary": "Execute getTimePeriod AXL operation",
        "description": "Returns all available get-timeperiod resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeperiod/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimePeriod AXL operation with dynamic parameter",
        "description": "Filter get-timeperiod resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeschedule": {
      "get": {
        "summary": "Execute getTimeSchedule AXL operation",
        "description": "Returns all available get-timeschedule resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeschedule/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter get-timeschedule resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-todaccess": {
      "get": {
        "summary": "Execute getTodAccess AXL operation",
        "description": "Returns all available get-todaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-todaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTodAccess AXL operation with dynamic parameter",
        "description": "Filter get-todaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transcoder": {
      "get": {
        "summary": "Execute getTranscoder AXL operation",
        "description": "Returns all available get-transcoder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transcoder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTranscoder AXL operation with dynamic parameter",
        "description": "Filter get-transcoder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transformationprofile": {
      "get": {
        "summary": "Execute getTransformationProfile AXL operation",
        "description": "Returns all available get-transformationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transformationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter get-transformationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpattern": {
      "get": {
        "summary": "Execute getTransPattern AXL operation",
        "description": "Returns all available get-transpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPattern AXL operation with dynamic parameter",
        "description": "Filter get-transpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpatternoptions": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation",
        "description": "Returns all available get-transpatternoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpatternoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation with dynamic parameter",
        "description": "Filter get-transpatternoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transportsettings": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation",
        "description": "Returns all available get-transportsettings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transportsettings/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation with dynamic parameter",
        "description": "Filter get-transportsettings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-tvscertificate": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation",
        "description": "Returns all available get-tvscertificate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-tvscertificate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation with dynamic parameter",
        "description": "Filter get-tvscertificate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ucservice": {
      "get": {
        "summary": "Execute getUcService AXL operation",
        "description": "Returns all available get-ucservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ucservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUcService AXL operation with dynamic parameter",
        "description": "Filter get-ucservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universaldevicetemplate": {
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation",
        "description": "Returns all available get-universaldevicetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universaldevicetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter get-universaldevicetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universallinetemplate": {
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation",
        "description": "Returns all available get-universallinetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universallinetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter get-universallinetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-user": {
      "get": {
        "summary": "Execute getUser AXL operation",
        "description": "Returns all available get-user resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-user/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUser AXL operation with dynamic parameter",
        "description": "Filter get-user resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-usergroup": {
      "get": {
        "summary": "Execute getUserGroup AXL operation",
        "description": "Returns all available get-usergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-usergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserGroup AXL operation with dynamic parameter",
        "description": "Filter get-usergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-userprofileprovision": {
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation",
        "description": "Returns all available get-userprofileprovision resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-userprofileprovision/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter get-userprofileprovision resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vg224": {
      "get": {
        "summary": "Execute getVg224 AXL operation",
        "description": "Returns all available get-vg224 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vg224/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVg224 AXL operation with dynamic parameter",
        "description": "Filter get-vg224 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vohserver": {
      "get": {
        "summary": "Execute getVohServer AXL operation",
        "description": "Returns all available get-vohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVohServer AXL operation with dynamic parameter",
        "description": "Filter get-vohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailpilot": {
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation",
        "description": "Returns all available get-voicemailpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter get-voicemailpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailport": {
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation",
        "description": "Returns all available get-voicemailport resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailport/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter get-voicemailport resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailprofile": {
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation",
        "description": "Returns all available get-voicemailprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter get-voicemailprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngateway": {
      "get": {
        "summary": "Execute getVpnGateway AXL operation",
        "description": "Returns all available get-vpngateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGateway AXL operation with dynamic parameter",
        "description": "Filter get-vpngateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngroup": {
      "get": {
        "summary": "Execute getVpnGroup AXL operation",
        "description": "Returns all available get-vpngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGroup AXL operation with dynamic parameter",
        "description": "Filter get-vpngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpnprofile": {
      "get": {
        "summary": "Execute getVpnProfile AXL operation",
        "description": "Returns all available get-vpnprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpnprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnProfile AXL operation with dynamic parameter",
        "description": "Filter get-vpnprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wifihotspot": {
      "get": {
        "summary": "Execute getWifiHotspot AXL operation",
        "description": "Returns all available get-wifihotspot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wifihotspot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter get-wifihotspot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wirelessaccesspointcontrollers": {
      "get": {
        "summary": "Execute getWirelessAccessPointControllers AXL operation",
        "description": "Returns all available get-wirelessaccesspointcontrollers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wirelessaccesspointcontrollers/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWirelessAccessPointControllers AXL operation with dynamic parameter",
        "description": "Filter get-wirelessaccesspointcontrollers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofile": {
      "get": {
        "summary": "Execute getWLANProfile AXL operation",
        "description": "Returns all available get-wlanprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWLANProfile AXL operation with dynamic parameter",
        "description": "Filter get-wlanprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofilegroup": {
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation",
        "description": "Returns all available get-wlanprofilegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofilegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter get-wlanprofilegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "path": {
            "type": "string"
          }
        }
      }
    }
  }
}
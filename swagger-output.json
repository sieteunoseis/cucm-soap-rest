{
  "openapi": "3.0.0",
  "info": {
    "title": "Cisco AXL REST API",
    "version": "1.0.0",
    "description": "A dynamic REST API for Cisco Administrative XML (AXL) operations"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/axl/aargroup": {
      "put": {
        "summary": "Execute addAarGroup AXL operation",
        "description": "Execute addAarGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `aarGroup` as the resource key (not `aargroup`).\n        For example: `{ \"aarGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "aarGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getAarGroup AXL operation",
        "description": "Returns all available aargroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAarGroup AXL operation",
        "description": "Execute removeAarGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "aarGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAarGroup AXL operation",
        "description": "Execute updateAarGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `aarGroup` as the resource key (not `aargroup`).\n        For example: `{ \"aarGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "aarGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/advertisedpatterns": {
      "put": {
        "summary": "Execute addAdvertisedPatterns AXL operation",
        "description": "Execute addAdvertisedPatterns AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `advertisedPatterns` as the resource key (not `advertisedpatterns`).\n        For example: `{ \"advertisedPatterns\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "advertisedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listAdvertisedPatterns AXL operation",
        "description": "Returns all available advertisedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAdvertisedPatterns AXL operation",
        "description": "Execute removeAdvertisedPatterns AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "advertisedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAdvertisedPatterns AXL operation",
        "description": "Execute updateAdvertisedPatterns AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `advertisedPatterns` as the resource key (not `advertisedpatterns`).\n        For example: `{ \"advertisedPatterns\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "advertisedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcement": {
      "put": {
        "summary": "Execute addAnnouncement AXL operation",
        "description": "Execute addAnnouncement AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `announcement` as the resource key (not `announcement`).\n        For example: `{ \"announcement\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "announcement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getAnnouncement AXL operation",
        "description": "Returns all available announcement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAnnouncement AXL operation",
        "description": "Execute removeAnnouncement AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "announcement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAnnouncement AXL operation",
        "description": "Execute updateAnnouncement AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `announcement` as the resource key (not `announcement`).\n        For example: `{ \"announcement\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "announcement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationdialrules": {
      "put": {
        "summary": "Execute addApplicationDialRules AXL operation",
        "description": "Execute addApplicationDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationDialRules` as the resource key (not `applicationdialrules`).\n        For example: `{ \"applicationDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listApplicationDialRules AXL operation",
        "description": "Returns all available applicationdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationDialRules AXL operation",
        "description": "Execute removeApplicationDialRules AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationDialRules AXL operation",
        "description": "Execute updateApplicationDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationDialRules` as the resource key (not `applicationdialrules`).\n        For example: `{ \"applicationDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationserver": {
      "put": {
        "summary": "Execute addApplicationServer AXL operation",
        "description": "Execute addApplicationServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationServer` as the resource key (not `applicationserver`).\n        For example: `{ \"applicationServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getApplicationServer AXL operation",
        "description": "Returns all available applicationserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationServer AXL operation",
        "description": "Execute removeApplicationServer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationServer AXL operation",
        "description": "Execute updateApplicationServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationServer` as the resource key (not `applicationserver`).\n        For example: `{ \"applicationServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationtosoftkeytemplate": {
      "put": {
        "summary": "Execute addApplicationToSoftkeyTemplate AXL operation",
        "description": "Execute addApplicationToSoftkeyTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationToSoftkeyTemplate` as the resource key (not `applicationtosoftkeytemplate`).\n        For example: `{ \"applicationToSoftkeyTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationToSoftkeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationToSoftkeyTemplate AXL operation",
        "description": "Execute removeApplicationToSoftkeyTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationToSoftkeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofile": {
      "put": {
        "summary": "Execute addApplicationUserCapfProfile AXL operation",
        "description": "Execute addApplicationUserCapfProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationUserCapfProfile` as the resource key (not `applicationusercapfprofile`).\n        For example: `{ \"applicationUserCapfProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation",
        "description": "Returns all available applicationusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationUserCapfProfile AXL operation",
        "description": "Execute removeApplicationUserCapfProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationUserCapfProfile AXL operation",
        "description": "Execute updateApplicationUserCapfProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `applicationUserCapfProfile` as the resource key (not `applicationusercapfprofile`).\n        For example: `{ \"applicationUserCapfProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applicationUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appserverinfo": {
      "put": {
        "summary": "Execute addAppServerInfo AXL operation",
        "description": "Execute addAppServerInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `appServerInfo` as the resource key (not `appserverinfo`).\n        For example: `{ \"appServerInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appServerInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getAppServerInfo AXL operation",
        "description": "Returns all available appserverinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAppServerInfo AXL operation",
        "description": "Execute removeAppServerInfo AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appServerInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAppServerInfo AXL operation",
        "description": "Execute updateAppServerInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `appServerInfo` as the resource key (not `appserverinfo`).\n        For example: `{ \"appServerInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appServerInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appuser": {
      "put": {
        "summary": "Execute addAppUser AXL operation",
        "description": "Execute addAppUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `appUser` as the resource key (not `appuser`).\n        For example: `{ \"appUser\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getAppUser AXL operation",
        "description": "Returns all available appuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAppUser AXL operation",
        "description": "Execute removeAppUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAppUser AXL operation",
        "description": "Execute updateAppUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `appUser` as the resource key (not `appuser`).\n        For example: `{ \"appUser\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "appUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelist": {
      "put": {
        "summary": "Execute addAudioCodecPreferenceList AXL operation",
        "description": "Execute addAudioCodecPreferenceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `audioCodecPreferenceList` as the resource key (not `audiocodecpreferencelist`).\n        For example: `{ \"audioCodecPreferenceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "audioCodecPreferenceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation",
        "description": "Returns all available audiocodecpreferencelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAudioCodecPreferenceList AXL operation",
        "description": "Execute removeAudioCodecPreferenceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "audioCodecPreferenceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAudioCodecPreferenceList AXL operation",
        "description": "Execute updateAudioCodecPreferenceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `audioCodecPreferenceList` as the resource key (not `audiocodecpreferencelist`).\n        For example: `{ \"audioCodecPreferenceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "audioCodecPreferenceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingserver": {
      "put": {
        "summary": "Execute addBillingServer AXL operation",
        "description": "Execute addBillingServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `billingServer` as the resource key (not `billingserver`).\n        For example: `{ \"billingServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "billingServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getBillingServer AXL operation",
        "description": "Returns all available billingserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeBillingServer AXL operation",
        "description": "Execute removeBillingServer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "billingServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateBillingServer AXL operation",
        "description": "Execute updateBillingServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `billingServer` as the resource key (not `billingserver`).\n        For example: `{ \"billingServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "billingServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/blockedlearnedpatterns": {
      "put": {
        "summary": "Execute addBlockedLearnedPatterns AXL operation",
        "description": "Execute addBlockedLearnedPatterns AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `blockedLearnedPatterns` as the resource key (not `blockedlearnedpatterns`).\n        For example: `{ \"blockedLearnedPatterns\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "blockedLearnedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listBlockedLearnedPatterns AXL operation",
        "description": "Returns all available blockedlearnedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeBlockedLearnedPatterns AXL operation",
        "description": "Execute removeBlockedLearnedPatterns AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "blockedLearnedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateBlockedLearnedPatterns AXL operation",
        "description": "Execute updateBlockedLearnedPatterns AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `blockedLearnedPatterns` as the resource key (not `blockedlearnedpatterns`).\n        For example: `{ \"blockedLearnedPatterns\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "blockedLearnedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracing": {
      "put": {
        "summary": "Execute addCalledPartyTracing AXL operation",
        "description": "Execute addCalledPartyTracing AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `calledPartyTracing` as the resource key (not `calledpartytracing`).\n        For example: `{ \"calledPartyTracing\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "calledPartyTracing": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCalledPartyTracing AXL operation",
        "description": "Execute removeCalledPartyTracing AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "calledPartyTracing": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpattern": {
      "put": {
        "summary": "Execute addCalledPartyTransformationPattern AXL operation",
        "description": "Execute addCalledPartyTransformationPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `calledPartyTransformationPattern` as the resource key (not `calledpartytransformationpattern`).\n        For example: `{ \"calledPartyTransformationPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "calledPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation",
        "description": "Returns all available calledpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCalledPartyTransformationPattern AXL operation",
        "description": "Execute removeCalledPartyTransformationPattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "calledPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCalledPartyTransformationPattern AXL operation",
        "description": "Execute updateCalledPartyTransformationPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `calledPartyTransformationPattern` as the resource key (not `calledpartytransformationpattern`).\n        For example: `{ \"calledPartyTransformationPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "calledPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlist": {
      "put": {
        "summary": "Execute addCallerFilterList AXL operation",
        "description": "Execute addCallerFilterList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callerFilterList` as the resource key (not `callerfilterlist`).\n        For example: `{ \"callerFilterList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callerFilterList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCallerFilterList AXL operation",
        "description": "Returns all available callerfilterlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallerFilterList AXL operation",
        "description": "Execute removeCallerFilterList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callerFilterList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallerFilterList AXL operation",
        "description": "Execute updateCallerFilterList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callerFilterList` as the resource key (not `callerfilterlist`).\n        For example: `{ \"callerFilterList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callerFilterList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpattern": {
      "put": {
        "summary": "Execute addCallingPartyTransformationPattern AXL operation",
        "description": "Execute addCallingPartyTransformationPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callingPartyTransformationPattern` as the resource key (not `callingpartytransformationpattern`).\n        For example: `{ \"callingPartyTransformationPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callingPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation",
        "description": "Returns all available callingpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallingPartyTransformationPattern AXL operation",
        "description": "Execute removeCallingPartyTransformationPattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callingPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallingPartyTransformationPattern AXL operation",
        "description": "Execute updateCallingPartyTransformationPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callingPartyTransformationPattern` as the resource key (not `callingpartytransformationpattern`).\n        For example: `{ \"callingPartyTransformationPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callingPartyTransformationPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroup": {
      "put": {
        "summary": "Execute addCallManagerGroup AXL operation",
        "description": "Execute addCallManagerGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callManagerGroup` as the resource key (not `callmanagergroup`).\n        For example: `{ \"callManagerGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation",
        "description": "Returns all available callmanagergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallManagerGroup AXL operation",
        "description": "Execute removeCallManagerGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallManagerGroup AXL operation",
        "description": "Execute updateCallManagerGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callManagerGroup` as the resource key (not `callmanagergroup`).\n        For example: `{ \"callManagerGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpark": {
      "put": {
        "summary": "Execute addCallPark AXL operation",
        "description": "Execute addCallPark AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callPark` as the resource key (not `callpark`).\n        For example: `{ \"callPark\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCallPark AXL operation",
        "description": "Returns all available callpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallPark AXL operation",
        "description": "Execute removeCallPark AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallPark AXL operation",
        "description": "Execute updateCallPark AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callPark` as the resource key (not `callpark`).\n        For example: `{ \"callPark\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroup": {
      "put": {
        "summary": "Execute addCallPickupGroup AXL operation",
        "description": "Execute addCallPickupGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callPickupGroup` as the resource key (not `callpickupgroup`).\n        For example: `{ \"callPickupGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPickupGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation",
        "description": "Returns all available callpickupgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallPickupGroup AXL operation",
        "description": "Execute removeCallPickupGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPickupGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallPickupGroup AXL operation",
        "description": "Execute updateCallPickupGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callPickupGroup` as the resource key (not `callpickupgroup`).\n        For example: `{ \"callPickupGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callPickupGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccaprofiles": {
      "put": {
        "summary": "Execute addCCAProfiles AXL operation",
        "description": "Execute addCCAProfiles AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cCAProfiles` as the resource key (not `ccaprofiles`).\n        For example: `{ \"cCAProfiles\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cCAProfiles": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listCCAProfiles AXL operation",
        "description": "Returns all available ccaprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCCAProfiles AXL operation",
        "description": "Execute removeCCAProfiles AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cCAProfiles": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCCAProfiles AXL operation",
        "description": "Execute updateCCAProfiles AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cCAProfiles` as the resource key (not `ccaprofiles`).\n        For example: `{ \"cCAProfiles\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cCAProfiles": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservice": {
      "put": {
        "summary": "Execute addCcdAdvertisingService AXL operation",
        "description": "Execute addCcdAdvertisingService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdAdvertisingService` as the resource key (not `ccdadvertisingservice`).\n        For example: `{ \"ccdAdvertisingService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdAdvertisingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation",
        "description": "Returns all available ccdadvertisingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdAdvertisingService AXL operation",
        "description": "Execute removeCcdAdvertisingService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdAdvertisingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdAdvertisingService AXL operation",
        "description": "Execute updateCcdAdvertisingService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdAdvertisingService` as the resource key (not `ccdadvertisingservice`).\n        For example: `{ \"ccdAdvertisingService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdAdvertisingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddn": {
      "put": {
        "summary": "Execute addCcdHostedDN AXL operation",
        "description": "Execute addCcdHostedDN AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdHostedDN` as the resource key (not `ccdhosteddn`).\n        For example: `{ \"ccdHostedDN\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDN": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation",
        "description": "Returns all available ccdhosteddn resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdHostedDN AXL operation",
        "description": "Execute removeCcdHostedDN AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDN": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdHostedDN AXL operation",
        "description": "Execute updateCcdHostedDN AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdHostedDN` as the resource key (not `ccdhosteddn`).\n        For example: `{ \"ccdHostedDN\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDN": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroup": {
      "put": {
        "summary": "Execute addCcdHostedDNGroup AXL operation",
        "description": "Execute addCcdHostedDNGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdHostedDNGroup` as the resource key (not `ccdhosteddngroup`).\n        For example: `{ \"ccdHostedDNGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDNGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation",
        "description": "Returns all available ccdhosteddngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdHostedDNGroup AXL operation",
        "description": "Execute removeCcdHostedDNGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDNGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdHostedDNGroup AXL operation",
        "description": "Execute updateCcdHostedDNGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdHostedDNGroup` as the resource key (not `ccdhosteddngroup`).\n        For example: `{ \"ccdHostedDNGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdHostedDNGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdrequestingservice": {
      "put": {
        "summary": "Execute addCcdRequestingService AXL operation",
        "description": "Execute addCcdRequestingService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdRequestingService` as the resource key (not `ccdrequestingservice`).\n        For example: `{ \"ccdRequestingService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdRequestingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation",
        "description": "Returns all available ccdrequestingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdRequestingService AXL operation",
        "description": "Execute removeCcdRequestingService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdRequestingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdRequestingService AXL operation",
        "description": "Execute updateCcdRequestingService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdRequestingService` as the resource key (not `ccdrequestingservice`).\n        For example: `{ \"ccdRequestingService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdRequestingService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateway": {
      "put": {
        "summary": "Execute addCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute addCiscoCatalyst6000E1VoIPGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000E1VoIPGateway` as the resource key (not `ciscocatalyst6000e1voipgateway`).\n        For example: `{ \"ciscoCatalyst6000E1VoIPGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Returns all available ciscocatalyst6000e1voipgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute removeCiscoCatalyst6000E1VoIPGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute updateCiscoCatalyst6000E1VoIPGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000E1VoIPGateway` as the resource key (not `ciscocatalyst6000e1voipgateway`).\n        For example: `{ \"ciscoCatalyst6000E1VoIPGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypri": {
      "put": {
        "summary": "Execute addCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute addCiscoCatalyst6000T1VoIPGatewayPri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayPri` as the resource key (not `ciscocatalyst6000t1voipgatewaypri`).\n        For example: `{ \"ciscoCatalyst6000T1VoIPGatewayPri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Returns all available ciscocatalyst6000t1voipgatewaypri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute removeCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute updateCiscoCatalyst6000T1VoIPGatewayPri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayPri` as the resource key (not `ciscocatalyst6000t1voipgatewaypri`).\n        For example: `{ \"ciscoCatalyst6000T1VoIPGatewayPri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1": {
      "put": {
        "summary": "Execute addCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute addCiscoCatalyst6000T1VoIPGatewayT1 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayT1` as the resource key (not `ciscocatalyst6000t1voipgatewayt1`).\n        For example: `{ \"ciscoCatalyst6000T1VoIPGatewayT1\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Returns all available ciscocatalyst6000t1voipgatewayt1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute removeCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute updateCiscoCatalyst6000T1VoIPGatewayT1 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayT1` as the resource key (not `ciscocatalyst6000t1voipgatewayt1`).\n        For example: `{ \"ciscoCatalyst6000T1VoIPGatewayT1\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateway": {
      "put": {
        "summary": "Execute addCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute addCiscoCatalyst600024PortFXSGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst600024PortFXSGateway` as the resource key (not `ciscocatalyst600024portfxsgateway`).\n        For example: `{ \"ciscoCatalyst600024PortFXSGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Returns all available ciscocatalyst600024portfxsgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute removeCiscoCatalyst600024PortFXSGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute updateCiscoCatalyst600024PortFXSGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCatalyst600024PortFXSGateway` as the resource key (not `ciscocatalyst600024portfxsgateway`).\n        For example: `{ \"ciscoCatalyst600024PortFXSGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfo": {
      "put": {
        "summary": "Execute addCmcInfo AXL operation",
        "description": "Execute addCmcInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cmcInfo` as the resource key (not `cmcinfo`).\n        For example: `{ \"cmcInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cmcInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCmcInfo AXL operation",
        "description": "Returns all available cmcinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCmcInfo AXL operation",
        "description": "Execute removeCmcInfo AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cmcInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCmcInfo AXL operation",
        "description": "Execute updateCmcInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cmcInfo` as the resource key (not `cmcinfo`).\n        For example: `{ \"cmcInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cmcInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfig": {
      "put": {
        "summary": "Execute addCommonDeviceConfig AXL operation",
        "description": "Execute addCommonDeviceConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `commonDeviceConfig` as the resource key (not `commondeviceconfig`).\n        For example: `{ \"commonDeviceConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation",
        "description": "Returns all available commondeviceconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCommonDeviceConfig AXL operation",
        "description": "Execute removeCommonDeviceConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCommonDeviceConfig AXL operation",
        "description": "Execute updateCommonDeviceConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `commonDeviceConfig` as the resource key (not `commondeviceconfig`).\n        For example: `{ \"commonDeviceConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfig": {
      "put": {
        "summary": "Execute addCommonPhoneConfig AXL operation",
        "description": "Execute addCommonPhoneConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `commonPhoneConfig` as the resource key (not `commonphoneconfig`).\n        For example: `{ \"commonPhoneConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation",
        "description": "Returns all available commonphoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCommonPhoneConfig AXL operation",
        "description": "Execute removeCommonPhoneConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCommonPhoneConfig AXL operation",
        "description": "Execute updateCommonPhoneConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `commonPhoneConfig` as the resource key (not `commonphoneconfig`).\n        For example: `{ \"commonPhoneConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "commonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridge": {
      "put": {
        "summary": "Execute addConferenceBridge AXL operation",
        "description": "Execute addConferenceBridge AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `conferenceBridge` as the resource key (not `conferencebridge`).\n        For example: `{ \"conferenceBridge\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getConferenceBridge AXL operation",
        "description": "Returns all available conferencebridge resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeConferenceBridge AXL operation",
        "description": "Execute removeConferenceBridge AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateConferenceBridge AXL operation",
        "description": "Execute updateConferenceBridge AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `conferenceBridge` as the resource key (not `conferencebridge`).\n        For example: `{ \"conferenceBridge\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenow": {
      "put": {
        "summary": "Execute addConferenceNow AXL operation",
        "description": "Execute addConferenceNow AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `conferenceNow` as the resource key (not `conferencenow`).\n        For example: `{ \"conferenceNow\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceNow": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getConferenceNow AXL operation",
        "description": "Returns all available conferencenow resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeConferenceNow AXL operation",
        "description": "Execute removeConferenceNow AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceNow": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateConferenceNow AXL operation",
        "description": "Execute updateConferenceNow AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `conferenceNow` as the resource key (not `conferencenow`).\n        For example: `{ \"conferenceNow\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "conferenceNow": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicy": {
      "put": {
        "summary": "Execute addCredentialPolicy AXL operation",
        "description": "Execute addCredentialPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `credentialPolicy` as the resource key (not `credentialpolicy`).\n        For example: `{ \"credentialPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "credentialPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation",
        "description": "Returns all available credentialpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCredentialPolicy AXL operation",
        "description": "Execute removeCredentialPolicy AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "credentialPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCredentialPolicy AXL operation",
        "description": "Execute updateCredentialPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `credentialPolicy` as the resource key (not `credentialpolicy`).\n        For example: `{ \"credentialPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "credentialPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/css": {
      "put": {
        "summary": "Execute addCss AXL operation",
        "description": "Execute addCss AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `css` as the resource key (not `css`).\n        For example: `{ \"css\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "css": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listCss AXL operation",
        "description": "Returns all available css resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCss AXL operation",
        "description": "Execute removeCss AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "css": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCss AXL operation",
        "description": "Execute updateCss AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `css` as the resource key (not `css`).\n        For example: `{ \"css\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "css": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoint": {
      "put": {
        "summary": "Execute addCtiRoutePoint AXL operation",
        "description": "Execute addCtiRoutePoint AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ctiRoutePoint` as the resource key (not `ctiroutepoint`).\n        For example: `{ \"ctiRoutePoint\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ctiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation",
        "description": "Returns all available ctiroutepoint resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCtiRoutePoint AXL operation",
        "description": "Execute removeCtiRoutePoint AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ctiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCtiRoutePoint AXL operation",
        "description": "Execute updateCtiRoutePoint AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ctiRoutePoint` as the resource key (not `ctiroutepoint`).\n        For example: `{ \"ctiRoutePoint\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ctiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofile": {
      "put": {
        "summary": "Execute addCumaServerSecurityProfile AXL operation",
        "description": "Execute addCumaServerSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cumaServerSecurityProfile` as the resource key (not `cumaserversecurityprofile`).\n        For example: `{ \"cumaServerSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cumaServerSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation",
        "description": "Returns all available cumaserversecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCumaServerSecurityProfile AXL operation",
        "description": "Execute removeCumaServerSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cumaServerSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCumaServerSecurityProfile AXL operation",
        "description": "Execute updateCumaServerSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `cumaServerSecurityProfile` as the resource key (not `cumaserversecurityprofile`).\n        For example: `{ \"cumaServerSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "cumaServerSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customer": {
      "put": {
        "summary": "Execute addCustomer AXL operation",
        "description": "Execute addCustomer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `customer` as the resource key (not `customer`).\n        For example: `{ \"customer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCustomer AXL operation",
        "description": "Returns all available customer resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCustomer AXL operation",
        "description": "Execute removeCustomer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCustomer AXL operation",
        "description": "Execute updateCustomer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `customer` as the resource key (not `customer`).\n        For example: `{ \"customer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfield": {
      "put": {
        "summary": "Execute addCustomUserField AXL operation",
        "description": "Execute addCustomUserField AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `customUserField` as the resource key (not `customuserfield`).\n        For example: `{ \"customUserField\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customUserField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getCustomUserField AXL operation",
        "description": "Returns all available customuserfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCustomUserField AXL operation",
        "description": "Execute removeCustomUserField AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customUserField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCustomUserField AXL operation",
        "description": "Execute updateCustomUserField AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `customUserField` as the resource key (not `customuserfield`).\n        For example: `{ \"customUserField\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "customUserField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroup": {
      "put": {
        "summary": "Execute addDateTimeGroup AXL operation",
        "description": "Execute addDateTimeGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dateTimeGroup` as the resource key (not `datetimegroup`).\n        For example: `{ \"dateTimeGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation",
        "description": "Returns all available datetimegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDateTimeGroup AXL operation",
        "description": "Execute removeDateTimeGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDateTimeGroup AXL operation",
        "description": "Execute updateDateTimeGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dateTimeGroup` as the resource key (not `datetimegroup`).\n        For example: `{ \"dateTimeGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofile": {
      "put": {
        "summary": "Execute addDefaultDeviceProfile AXL operation",
        "description": "Execute addDefaultDeviceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `defaultDeviceProfile` as the resource key (not `defaultdeviceprofile`).\n        For example: `{ \"defaultDeviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "defaultDeviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation",
        "description": "Returns all available defaultdeviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDefaultDeviceProfile AXL operation",
        "description": "Execute removeDefaultDeviceProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "defaultDeviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDefaultDeviceProfile AXL operation",
        "description": "Execute updateDefaultDeviceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `defaultDeviceProfile` as the resource key (not `defaultdeviceprofile`).\n        For example: `{ \"defaultDeviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "defaultDeviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobility": {
      "put": {
        "summary": "Execute addDeviceMobility AXL operation",
        "description": "Execute addDeviceMobility AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceMobility` as the resource key (not `devicemobility`).\n        For example: `{ \"deviceMobility\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDeviceMobility AXL operation",
        "description": "Returns all available devicemobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceMobility AXL operation",
        "description": "Execute removeDeviceMobility AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceMobility AXL operation",
        "description": "Execute updateDeviceMobility AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceMobility` as the resource key (not `devicemobility`).\n        For example: `{ \"deviceMobility\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroup": {
      "put": {
        "summary": "Execute addDeviceMobilityGroup AXL operation",
        "description": "Execute addDeviceMobilityGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceMobilityGroup` as the resource key (not `devicemobilitygroup`).\n        For example: `{ \"deviceMobilityGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobilityGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation",
        "description": "Returns all available devicemobilitygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceMobilityGroup AXL operation",
        "description": "Execute removeDeviceMobilityGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobilityGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceMobilityGroup AXL operation",
        "description": "Execute updateDeviceMobilityGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceMobilityGroup` as the resource key (not `devicemobilitygroup`).\n        For example: `{ \"deviceMobilityGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceMobilityGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepool": {
      "put": {
        "summary": "Execute addDevicePool AXL operation",
        "description": "Execute addDevicePool AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `devicePool` as the resource key (not `devicepool`).\n        For example: `{ \"devicePool\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "devicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDevicePool AXL operation",
        "description": "Returns all available devicepool resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDevicePool AXL operation",
        "description": "Execute removeDevicePool AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "devicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDevicePool AXL operation",
        "description": "Execute updateDevicePool AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `devicePool` as the resource key (not `devicepool`).\n        For example: `{ \"devicePool\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "devicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofile": {
      "put": {
        "summary": "Execute addDeviceProfile AXL operation",
        "description": "Execute addDeviceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceProfile` as the resource key (not `deviceprofile`).\n        For example: `{ \"deviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDeviceProfile AXL operation",
        "description": "Returns all available deviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceProfile AXL operation",
        "description": "Execute removeDeviceProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceProfile AXL operation",
        "description": "Execute updateDeviceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceProfile` as the resource key (not `deviceprofile`).\n        For example: `{ \"deviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpserver": {
      "put": {
        "summary": "Execute addDhcpServer AXL operation",
        "description": "Execute addDhcpServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dhcpServer` as the resource key (not `dhcpserver`).\n        For example: `{ \"dhcpServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDhcpServer AXL operation",
        "description": "Returns all available dhcpserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDhcpServer AXL operation",
        "description": "Execute removeDhcpServer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDhcpServer AXL operation",
        "description": "Execute updateDhcpServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dhcpServer` as the resource key (not `dhcpserver`).\n        For example: `{ \"dhcpServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnet": {
      "put": {
        "summary": "Execute addDhcpSubnet AXL operation",
        "description": "Execute addDhcpSubnet AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dhcpSubnet` as the resource key (not `dhcpsubnet`).\n        For example: `{ \"dhcpSubnet\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpSubnet": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation",
        "description": "Returns all available dhcpsubnet resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDhcpSubnet AXL operation",
        "description": "Execute removeDhcpSubnet AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpSubnet": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDhcpSubnet AXL operation",
        "description": "Execute updateDhcpSubnet AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dhcpSubnet` as the resource key (not `dhcpsubnet`).\n        For example: `{ \"dhcpSubnet\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dhcpSubnet": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallpark": {
      "put": {
        "summary": "Execute addDirectedCallPark AXL operation",
        "description": "Execute addDirectedCallPark AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `directedCallPark` as the resource key (not `directedcallpark`).\n        For example: `{ \"directedCallPark\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation",
        "description": "Returns all available directedcallpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirectedCallPark AXL operation",
        "description": "Execute removeDirectedCallPark AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirectedCallPark AXL operation",
        "description": "Execute updateDirectedCallPark AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `directedCallPark` as the resource key (not `directedcallpark`).\n        For example: `{ \"directedCallPark\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directorylookupdialrules": {
      "put": {
        "summary": "Execute addDirectoryLookupDialRules AXL operation",
        "description": "Execute addDirectoryLookupDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `directoryLookupDialRules` as the resource key (not `directorylookupdialrules`).\n        For example: `{ \"directoryLookupDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directoryLookupDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listDirectoryLookupDialRules AXL operation",
        "description": "Returns all available directorylookupdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirectoryLookupDialRules AXL operation",
        "description": "Execute removeDirectoryLookupDialRules AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directoryLookupDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirectoryLookupDialRules AXL operation",
        "description": "Execute updateDirectoryLookupDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `directoryLookupDialRules` as the resource key (not `directorylookupdialrules`).\n        For example: `{ \"directoryLookupDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "directoryLookupDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsync": {
      "put": {
        "summary": "Execute addDirNumberAliasLookupandSync AXL operation",
        "description": "Execute addDirNumberAliasLookupandSync AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dirNumberAliasLookupandSync` as the resource key (not `dirnumberaliaslookupandsync`).\n        For example: `{ \"dirNumberAliasLookupandSync\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dirNumberAliasLookupandSync": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation",
        "description": "Returns all available dirnumberaliaslookupandsync resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirNumberAliasLookupandSync AXL operation",
        "description": "Execute removeDirNumberAliasLookupandSync AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dirNumberAliasLookupandSync": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirNumberAliasLookupandSync AXL operation",
        "description": "Execute updateDirNumberAliasLookupandSync AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `dirNumberAliasLookupandSync` as the resource key (not `dirnumberaliaslookupandsync`).\n        For example: `{ \"dirNumberAliasLookupandSync\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "dirNumberAliasLookupandSync": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroup": {
      "put": {
        "summary": "Execute addElinGroup AXL operation",
        "description": "Execute addElinGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `elinGroup` as the resource key (not `elingroup`).\n        For example: `{ \"elinGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "elinGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getElinGroup AXL operation",
        "description": "Returns all available elingroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeElinGroup AXL operation",
        "description": "Execute removeElinGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "elinGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateElinGroup AXL operation",
        "description": "Execute updateElinGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `elinGroup` as the resource key (not `elingroup`).\n        For example: `{ \"elinGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "elinGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofile": {
      "put": {
        "summary": "Execute addEndUserCapfProfile AXL operation",
        "description": "Execute addEndUserCapfProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `endUserCapfProfile` as the resource key (not `endusercapfprofile`).\n        For example: `{ \"endUserCapfProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "endUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation",
        "description": "Returns all available endusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeEndUserCapfProfile AXL operation",
        "description": "Execute removeEndUserCapfProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "endUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEndUserCapfProfile AXL operation",
        "description": "Execute updateEndUserCapfProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `endUserCapfProfile` as the resource key (not `endusercapfprofile`).\n        For example: `{ \"endUserCapfProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "endUserCapfProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfiguration": {
      "put": {
        "summary": "Execute addEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Execute addEnterpriseFeatureAccessConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `enterpriseFeatureAccessConfiguration` as the resource key (not `enterprisefeatureaccessconfiguration`).\n        For example: `{ \"enterpriseFeatureAccessConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "enterpriseFeatureAccessConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Returns all available enterprisefeatureaccessconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Execute removeEnterpriseFeatureAccessConfiguration AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "enterpriseFeatureAccessConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Execute updateEnterpriseFeatureAccessConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `enterpriseFeatureAccessConfiguration` as the resource key (not `enterprisefeatureaccessconfiguration`).\n        For example: `{ \"enterpriseFeatureAccessConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "enterpriseFeatureAccessConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfiguration": {
      "put": {
        "summary": "Execute addExpresswayCConfiguration AXL operation",
        "description": "Execute addExpresswayCConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `expresswayCConfiguration` as the resource key (not `expresswaycconfiguration`).\n        For example: `{ \"expresswayCConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "expresswayCConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation",
        "description": "Returns all available expresswaycconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeExpresswayCConfiguration AXL operation",
        "description": "Execute removeExpresswayCConfiguration AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "expresswayCConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateExpresswayCConfiguration AXL operation",
        "description": "Execute updateExpresswayCConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `expresswayCConfiguration` as the resource key (not `expresswaycconfiguration`).\n        For example: `{ \"expresswayCConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "expresswayCConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofile": {
      "put": {
        "summary": "Execute addExternalCallControlProfile AXL operation",
        "description": "Execute addExternalCallControlProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `externalCallControlProfile` as the resource key (not `externalcallcontrolprofile`).\n        For example: `{ \"externalCallControlProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "externalCallControlProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation",
        "description": "Returns all available externalcallcontrolprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeExternalCallControlProfile AXL operation",
        "description": "Execute removeExternalCallControlProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "externalCallControlProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateExternalCallControlProfile AXL operation",
        "description": "Execute updateExternalCallControlProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `externalCallControlProfile` as the resource key (not `externalcallcontrolprofile`).\n        For example: `{ \"externalCallControlProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "externalCallControlProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfo": {
      "put": {
        "summary": "Execute addFacInfo AXL operation",
        "description": "Execute addFacInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `facInfo` as the resource key (not `facinfo`).\n        For example: `{ \"facInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "facInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getFacInfo AXL operation",
        "description": "Returns all available facinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFacInfo AXL operation",
        "description": "Execute removeFacInfo AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "facInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFacInfo AXL operation",
        "description": "Execute updateFacInfo AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `facInfo` as the resource key (not `facinfo`).\n        For example: `{ \"facInfo\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "facInfo": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofile": {
      "put": {
        "summary": "Execute addFallbackProfile AXL operation",
        "description": "Execute addFallbackProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `fallbackProfile` as the resource key (not `fallbackprofile`).\n        For example: `{ \"fallbackProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "fallbackProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getFallbackProfile AXL operation",
        "description": "Returns all available fallbackprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFallbackProfile AXL operation",
        "description": "Execute removeFallbackProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "fallbackProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFallbackProfile AXL operation",
        "description": "Execute updateFallbackProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `fallbackProfile` as the resource key (not `fallbackprofile`).\n        For example: `{ \"fallbackProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "fallbackProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicy": {
      "put": {
        "summary": "Execute addFeatureControlPolicy AXL operation",
        "description": "Execute addFeatureControlPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `featureControlPolicy` as the resource key (not `featurecontrolpolicy`).\n        For example: `{ \"featureControlPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureControlPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation",
        "description": "Returns all available featurecontrolpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFeatureControlPolicy AXL operation",
        "description": "Execute removeFeatureControlPolicy AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureControlPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFeatureControlPolicy AXL operation",
        "description": "Execute updateFeatureControlPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `featureControlPolicy` as the resource key (not `featurecontrolpolicy`).\n        For example: `{ \"featureControlPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureControlPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplate": {
      "put": {
        "summary": "Execute addFeatureGroupTemplate AXL operation",
        "description": "Execute addFeatureGroupTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `featureGroupTemplate` as the resource key (not `featuregrouptemplate`).\n        For example: `{ \"featureGroupTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureGroupTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation",
        "description": "Returns all available featuregrouptemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFeatureGroupTemplate AXL operation",
        "description": "Execute removeFeatureGroupTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureGroupTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFeatureGroupTemplate AXL operation",
        "description": "Execute updateFeatureGroupTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `featureGroupTemplate` as the resource key (not `featuregrouptemplate`).\n        For example: `{ \"featureGroupTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "featureGroupTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeeper": {
      "put": {
        "summary": "Execute addGatekeeper AXL operation",
        "description": "Execute addGatekeeper AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatekeeper` as the resource key (not `gatekeeper`).\n        For example: `{ \"gatekeeper\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatekeeper AXL operation",
        "description": "Returns all available gatekeeper resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatekeeper AXL operation",
        "description": "Execute removeGatekeeper AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatekeeper AXL operation",
        "description": "Execute updateGatekeeper AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatekeeper` as the resource key (not `gatekeeper`).\n        For example: `{ \"gatekeeper\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateway": {
      "put": {
        "summary": "Execute addGateway AXL operation",
        "description": "Execute addGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gateway` as the resource key (not `gateway`).\n        For example: `{ \"gateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGateway AXL operation",
        "description": "Returns all available gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGateway AXL operation",
        "description": "Execute removeGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGateway AXL operation",
        "description": "Execute updateGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gateway` as the resource key (not `gateway`).\n        For example: `{ \"gateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointanalogaccess": {
      "put": {
        "summary": "Execute addGatewayEndpointAnalogAccess AXL operation",
        "description": "Execute addGatewayEndpointAnalogAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointAnalogAccess` as the resource key (not `gatewayendpointanalogaccess`).\n        For example: `{ \"gatewayEndpointAnalogAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointAnalogAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation",
        "description": "Returns all available gatewayendpointanalogaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointAnalogAccess AXL operation",
        "description": "Execute removeGatewayEndpointAnalogAccess AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointAnalogAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointAnalogAccess AXL operation",
        "description": "Execute updateGatewayEndpointAnalogAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointAnalogAccess` as the resource key (not `gatewayendpointanalogaccess`).\n        For example: `{ \"gatewayEndpointAnalogAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointAnalogAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccessbri": {
      "put": {
        "summary": "Execute addGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Execute addGatewayEndpointDigitalAccessBri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessBri` as the resource key (not `gatewayendpointdigitalaccessbri`).\n        For example: `{ \"gatewayEndpointDigitalAccessBri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessBri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Returns all available gatewayendpointdigitalaccessbri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Execute removeGatewayEndpointDigitalAccessBri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessBri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Execute updateGatewayEndpointDigitalAccessBri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessBri` as the resource key (not `gatewayendpointdigitalaccessbri`).\n        For example: `{ \"gatewayEndpointDigitalAccessBri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessBri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesspri": {
      "put": {
        "summary": "Execute addGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Execute addGatewayEndpointDigitalAccessPri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessPri` as the resource key (not `gatewayendpointdigitalaccesspri`).\n        For example: `{ \"gatewayEndpointDigitalAccessPri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Returns all available gatewayendpointdigitalaccesspri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Execute removeGatewayEndpointDigitalAccessPri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Execute updateGatewayEndpointDigitalAccessPri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessPri` as the resource key (not `gatewayendpointdigitalaccesspri`).\n        For example: `{ \"gatewayEndpointDigitalAccessPri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesst1": {
      "put": {
        "summary": "Execute addGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Execute addGatewayEndpointDigitalAccessT1 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessT1` as the resource key (not `gatewayendpointdigitalaccesst1`).\n        For example: `{ \"gatewayEndpointDigitalAccessT1\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Returns all available gatewayendpointdigitalaccesst1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Execute removeGatewayEndpointDigitalAccessT1 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Execute updateGatewayEndpointDigitalAccessT1 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewayEndpointDigitalAccessT1` as the resource key (not `gatewayendpointdigitalaccesst1`).\n        For example: `{ \"gatewayEndpointDigitalAccessT1\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewayEndpointDigitalAccessT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysccpendpoints": {
      "put": {
        "summary": "Execute addGatewaySccpEndpoints AXL operation",
        "description": "Execute addGatewaySccpEndpoints AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewaySccpEndpoints` as the resource key (not `gatewaysccpendpoints`).\n        For example: `{ \"gatewaySccpEndpoints\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewaySccpEndpoints": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation",
        "description": "Returns all available gatewaysccpendpoints resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewaySccpEndpoints AXL operation",
        "description": "Execute removeGatewaySccpEndpoints AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewaySccpEndpoints": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewaySccpEndpoints AXL operation",
        "description": "Execute updateGatewaySccpEndpoints AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewaySccpEndpoints` as the resource key (not `gatewaysccpendpoints`).\n        For example: `{ \"gatewaySccpEndpoints\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewaySccpEndpoints": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysubunits": {
      "put": {
        "summary": "Execute addGatewaySubunits AXL operation",
        "description": "Execute addGatewaySubunits AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `gatewaySubunits` as the resource key (not `gatewaysubunits`).\n        For example: `{ \"gatewaySubunits\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewaySubunits": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewaySubunits AXL operation",
        "description": "Execute removeGatewaySubunits AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "gatewaySubunits": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocation": {
      "put": {
        "summary": "Execute addGeoLocation AXL operation",
        "description": "Execute addGeoLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocation` as the resource key (not `geolocation`).\n        For example: `{ \"geoLocation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGeoLocation AXL operation",
        "description": "Returns all available geolocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocation AXL operation",
        "description": "Execute removeGeoLocation AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocation AXL operation",
        "description": "Execute updateGeoLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocation` as the resource key (not `geolocation`).\n        For example: `{ \"geoLocation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilter": {
      "put": {
        "summary": "Execute addGeoLocationFilter AXL operation",
        "description": "Execute addGeoLocationFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocationFilter` as the resource key (not `geolocationfilter`).\n        For example: `{ \"geoLocationFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation",
        "description": "Returns all available geolocationfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocationFilter AXL operation",
        "description": "Execute removeGeoLocationFilter AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocationFilter AXL operation",
        "description": "Execute updateGeoLocationFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocationFilter` as the resource key (not `geolocationfilter`).\n        For example: `{ \"geoLocationFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicy": {
      "put": {
        "summary": "Execute addGeoLocationPolicy AXL operation",
        "description": "Execute addGeoLocationPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocationPolicy` as the resource key (not `geolocationpolicy`).\n        For example: `{ \"geoLocationPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation",
        "description": "Returns all available geolocationpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocationPolicy AXL operation",
        "description": "Execute removeGeoLocationPolicy AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocationPolicy AXL operation",
        "description": "Execute updateGeoLocationPolicy AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `geoLocationPolicy` as the resource key (not `geolocationpolicy`).\n        For example: `{ \"geoLocationPolicy\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "geoLocationPolicy": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateway": {
      "put": {
        "summary": "Execute addH323Gateway AXL operation",
        "description": "Execute addH323Gateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Gateway` as the resource key (not `h323gateway`).\n        For example: `{ \"h323Gateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getH323Gateway AXL operation",
        "description": "Returns all available h323gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Gateway AXL operation",
        "description": "Execute removeH323Gateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Gateway AXL operation",
        "description": "Execute updateH323Gateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Gateway` as the resource key (not `h323gateway`).\n        For example: `{ \"h323Gateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phone": {
      "put": {
        "summary": "Execute addH323Phone AXL operation",
        "description": "Execute addH323Phone AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Phone` as the resource key (not `h323phone`).\n        For example: `{ \"h323Phone\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getH323Phone AXL operation",
        "description": "Returns all available h323phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Phone AXL operation",
        "description": "Execute removeH323Phone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Phone AXL operation",
        "description": "Execute updateH323Phone AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Phone` as the resource key (not `h323phone`).\n        For example: `{ \"h323Phone\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunk": {
      "put": {
        "summary": "Execute addH323Trunk AXL operation",
        "description": "Execute addH323Trunk AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Trunk` as the resource key (not `h323trunk`).\n        For example: `{ \"h323Trunk\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getH323Trunk AXL operation",
        "description": "Returns all available h323trunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Trunk AXL operation",
        "description": "Execute removeH323Trunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Trunk AXL operation",
        "description": "Execute updateH323Trunk AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `h323Trunk` as the resource key (not `h323trunk`).\n        For example: `{ \"h323Trunk\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "h323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/handoffconfiguration": {
      "put": {
        "summary": "Execute addHandoffConfiguration AXL operation",
        "description": "Execute addHandoffConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `handoffConfiguration` as the resource key (not `handoffconfiguration`).\n        For example: `{ \"handoffConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "handoffConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation",
        "description": "Returns all available handoffconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHandoffConfiguration AXL operation",
        "description": "Execute removeHandoffConfiguration AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "handoffConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHandoffConfiguration AXL operation",
        "description": "Execute updateHandoffConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `handoffConfiguration` as the resource key (not `handoffconfiguration`).\n        For example: `{ \"handoffConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "handoffConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/httpprofile": {
      "put": {
        "summary": "Execute addHttpProfile AXL operation",
        "description": "Execute addHttpProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `httpProfile` as the resource key (not `httpprofile`).\n        For example: `{ \"httpProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "httpProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getHttpProfile AXL operation",
        "description": "Returns all available httpprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHttpProfile AXL operation",
        "description": "Execute removeHttpProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "httpProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHttpProfile AXL operation",
        "description": "Execute updateHttpProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `httpProfile` as the resource key (not `httpprofile`).\n        For example: `{ \"httpProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "httpProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlist": {
      "put": {
        "summary": "Execute addHuntList AXL operation",
        "description": "Execute addHuntList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `huntList` as the resource key (not `huntlist`).\n        For example: `{ \"huntList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getHuntList AXL operation",
        "description": "Returns all available huntlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHuntList AXL operation",
        "description": "Execute removeHuntList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHuntList AXL operation",
        "description": "Execute updateHuntList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `huntList` as the resource key (not `huntlist`).\n        For example: `{ \"huntList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilot": {
      "put": {
        "summary": "Execute addHuntPilot AXL operation",
        "description": "Execute addHuntPilot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `huntPilot` as the resource key (not `huntpilot`).\n        For example: `{ \"huntPilot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getHuntPilot AXL operation",
        "description": "Returns all available huntpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHuntPilot AXL operation",
        "description": "Execute removeHuntPilot AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHuntPilot AXL operation",
        "description": "Execute updateHuntPilot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `huntPilot` as the resource key (not `huntpilot`).\n        For example: `{ \"huntPilot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "huntPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclient": {
      "put": {
        "summary": "Execute addImeClient AXL operation",
        "description": "Execute addImeClient AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeClient` as the resource key (not `imeclient`).\n        For example: `{ \"imeClient\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeClient": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeClient AXL operation",
        "description": "Returns all available imeclient resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeClient AXL operation",
        "description": "Execute removeImeClient AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeClient": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeClient AXL operation",
        "description": "Execute updateImeClient AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeClient` as the resource key (not `imeclient`).\n        For example: `{ \"imeClient\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeClient": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformation": {
      "put": {
        "summary": "Execute addImeE164Transformation AXL operation",
        "description": "Execute addImeE164Transformation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeE164Transformation` as the resource key (not `imee164transformation`).\n        For example: `{ \"imeE164Transformation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeE164Transformation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation",
        "description": "Returns all available imee164transformation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeE164Transformation AXL operation",
        "description": "Execute removeImeE164Transformation AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeE164Transformation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeE164Transformation AXL operation",
        "description": "Execute updateImeE164Transformation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeE164Transformation` as the resource key (not `imee164transformation`).\n        For example: `{ \"imeE164Transformation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeE164Transformation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpattern": {
      "put": {
        "summary": "Execute addImeEnrolledPattern AXL operation",
        "description": "Execute addImeEnrolledPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeEnrolledPattern` as the resource key (not `imeenrolledpattern`).\n        For example: `{ \"imeEnrolledPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation",
        "description": "Returns all available imeenrolledpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeEnrolledPattern AXL operation",
        "description": "Execute removeImeEnrolledPattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeEnrolledPattern AXL operation",
        "description": "Execute updateImeEnrolledPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeEnrolledPattern` as the resource key (not `imeenrolledpattern`).\n        For example: `{ \"imeEnrolledPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroup": {
      "put": {
        "summary": "Execute addImeEnrolledPatternGroup AXL operation",
        "description": "Execute addImeEnrolledPatternGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeEnrolledPatternGroup` as the resource key (not `imeenrolledpatterngroup`).\n        For example: `{ \"imeEnrolledPatternGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPatternGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation",
        "description": "Returns all available imeenrolledpatterngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeEnrolledPatternGroup AXL operation",
        "description": "Execute removeImeEnrolledPatternGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPatternGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeEnrolledPatternGroup AXL operation",
        "description": "Execute updateImeEnrolledPatternGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeEnrolledPatternGroup` as the resource key (not `imeenrolledpatterngroup`).\n        For example: `{ \"imeEnrolledPatternGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeEnrolledPatternGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumber": {
      "put": {
        "summary": "Execute addImeExclusionNumber AXL operation",
        "description": "Execute addImeExclusionNumber AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeExclusionNumber` as the resource key (not `imeexclusionnumber`).\n        For example: `{ \"imeExclusionNumber\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumber": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation",
        "description": "Returns all available imeexclusionnumber resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeExclusionNumber AXL operation",
        "description": "Execute removeImeExclusionNumber AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumber": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeExclusionNumber AXL operation",
        "description": "Execute updateImeExclusionNumber AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeExclusionNumber` as the resource key (not `imeexclusionnumber`).\n        For example: `{ \"imeExclusionNumber\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumber": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroup": {
      "put": {
        "summary": "Execute addImeExclusionNumberGroup AXL operation",
        "description": "Execute addImeExclusionNumberGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeExclusionNumberGroup` as the resource key (not `imeexclusionnumbergroup`).\n        For example: `{ \"imeExclusionNumberGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumberGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation",
        "description": "Returns all available imeexclusionnumbergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeExclusionNumberGroup AXL operation",
        "description": "Execute removeImeExclusionNumberGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumberGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeExclusionNumberGroup AXL operation",
        "description": "Execute updateImeExclusionNumberGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeExclusionNumberGroup` as the resource key (not `imeexclusionnumbergroup`).\n        For example: `{ \"imeExclusionNumberGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeExclusionNumberGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewall": {
      "put": {
        "summary": "Execute addImeFirewall AXL operation",
        "description": "Execute addImeFirewall AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeFirewall` as the resource key (not `imefirewall`).\n        For example: `{ \"imeFirewall\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeFirewall": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeFirewall AXL operation",
        "description": "Returns all available imefirewall resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeFirewall AXL operation",
        "description": "Execute removeImeFirewall AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeFirewall": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeFirewall AXL operation",
        "description": "Execute updateImeFirewall AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeFirewall` as the resource key (not `imefirewall`).\n        For example: `{ \"imeFirewall\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeFirewall": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelement": {
      "put": {
        "summary": "Execute addImeRouteFilterElement AXL operation",
        "description": "Execute addImeRouteFilterElement AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeRouteFilterElement` as the resource key (not `imeroutefilterelement`).\n        For example: `{ \"imeRouteFilterElement\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterElement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation",
        "description": "Returns all available imeroutefilterelement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeRouteFilterElement AXL operation",
        "description": "Execute removeImeRouteFilterElement AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterElement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeRouteFilterElement AXL operation",
        "description": "Execute updateImeRouteFilterElement AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeRouteFilterElement` as the resource key (not `imeroutefilterelement`).\n        For example: `{ \"imeRouteFilterElement\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterElement": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroup": {
      "put": {
        "summary": "Execute addImeRouteFilterGroup AXL operation",
        "description": "Execute addImeRouteFilterGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeRouteFilterGroup` as the resource key (not `imeroutefiltergroup`).\n        For example: `{ \"imeRouteFilterGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation",
        "description": "Returns all available imeroutefiltergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeRouteFilterGroup AXL operation",
        "description": "Execute removeImeRouteFilterGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeRouteFilterGroup AXL operation",
        "description": "Execute updateImeRouteFilterGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeRouteFilterGroup` as the resource key (not `imeroutefiltergroup`).\n        For example: `{ \"imeRouteFilterGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeRouteFilterGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeserver": {
      "put": {
        "summary": "Execute addImeServer AXL operation",
        "description": "Execute addImeServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeServer` as the resource key (not `imeserver`).\n        For example: `{ \"imeServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getImeServer AXL operation",
        "description": "Returns all available imeserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeServer AXL operation",
        "description": "Execute removeImeServer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeServer AXL operation",
        "description": "Execute updateImeServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeServer` as the resource key (not `imeserver`).\n        For example: `{ \"imeServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/importeddirectoryuricatalogs": {
      "put": {
        "summary": "Execute addImportedDirectoryUriCatalogs AXL operation",
        "description": "Execute addImportedDirectoryUriCatalogs AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `importedDirectoryUriCatalogs` as the resource key (not `importeddirectoryuricatalogs`).\n        For example: `{ \"importedDirectoryUriCatalogs\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "importedDirectoryUriCatalogs": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listImportedDirectoryUriCatalogs AXL operation",
        "description": "Returns all available importeddirectoryuricatalogs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImportedDirectoryUriCatalogs AXL operation",
        "description": "Execute removeImportedDirectoryUriCatalogs AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "importedDirectoryUriCatalogs": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImportedDirectoryUriCatalogs AXL operation",
        "description": "Execute updateImportedDirectoryUriCatalogs AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `importedDirectoryUriCatalogs` as the resource key (not `importeddirectoryuricatalogs`).\n        For example: `{ \"importedDirectoryUriCatalogs\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "importedDirectoryUriCatalogs": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevice": {
      "put": {
        "summary": "Execute addInfrastructureDevice AXL operation",
        "description": "Execute addInfrastructureDevice AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `infrastructureDevice` as the resource key (not `infrastructuredevice`).\n        For example: `{ \"infrastructureDevice\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "infrastructureDevice": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation",
        "description": "Returns all available infrastructuredevice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeInfrastructureDevice AXL operation",
        "description": "Execute removeInfrastructureDevice AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "infrastructureDevice": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInfrastructureDevice AXL operation",
        "description": "Execute updateInfrastructureDevice AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `infrastructureDevice` as the resource key (not `infrastructuredevice`).\n        For example: `{ \"infrastructureDevice\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "infrastructureDevice": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ipphoneservices": {
      "put": {
        "summary": "Execute addIpPhoneServices AXL operation",
        "description": "Execute addIpPhoneServices AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ipPhoneServices` as the resource key (not `ipphoneservices`).\n        For example: `{ \"ipPhoneServices\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ipPhoneServices": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listIpPhoneServices AXL operation",
        "description": "Returns all available ipphoneservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeIpPhoneServices AXL operation",
        "description": "Execute removeIpPhoneServices AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ipPhoneServices": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIpPhoneServices AXL operation",
        "description": "Execute updateIpPhoneServices AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ipPhoneServices` as the resource key (not `ipphoneservices`).\n        For example: `{ \"ipPhoneServices\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ipPhoneServices": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocale": {
      "put": {
        "summary": "Execute addIvrUserLocale AXL operation",
        "description": "Execute addIvrUserLocale AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ivrUserLocale` as the resource key (not `ivruserlocale`).\n        For example: `{ \"ivrUserLocale\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ivrUserLocale": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation",
        "description": "Returns all available ivruserlocale resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeIvrUserLocale AXL operation",
        "description": "Execute removeIvrUserLocale AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ivrUserLocale": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIvrUserLocale AXL operation",
        "description": "Execute updateIvrUserLocale AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ivrUserLocale` as the resource key (not `ivruserlocale`).\n        For example: `{ \"ivrUserLocale\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ivrUserLocale": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroup": {
      "put": {
        "summary": "Execute addLbmGroup AXL operation",
        "description": "Execute addLbmGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lbmGroup` as the resource key (not `lbmgroup`).\n        For example: `{ \"lbmGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLbmGroup AXL operation",
        "description": "Returns all available lbmgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLbmGroup AXL operation",
        "description": "Execute removeLbmGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLbmGroup AXL operation",
        "description": "Execute updateLbmGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lbmGroup` as the resource key (not `lbmgroup`).\n        For example: `{ \"lbmGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroup": {
      "put": {
        "summary": "Execute addLbmHubGroup AXL operation",
        "description": "Execute addLbmHubGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lbmHubGroup` as the resource key (not `lbmhubgroup`).\n        For example: `{ \"lbmHubGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmHubGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation",
        "description": "Returns all available lbmhubgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLbmHubGroup AXL operation",
        "description": "Execute removeLbmHubGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmHubGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLbmHubGroup AXL operation",
        "description": "Execute updateLbmHubGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lbmHubGroup` as the resource key (not `lbmhubgroup`).\n        For example: `{ \"lbmHubGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lbmHubGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectory": {
      "put": {
        "summary": "Execute addLdapDirectory AXL operation",
        "description": "Execute addLdapDirectory AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapDirectory` as the resource key (not `ldapdirectory`).\n        For example: `{ \"ldapDirectory\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapDirectory": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLdapDirectory AXL operation",
        "description": "Returns all available ldapdirectory resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapDirectory AXL operation",
        "description": "Execute removeLdapDirectory AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapDirectory": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapDirectory AXL operation",
        "description": "Execute updateLdapDirectory AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapDirectory` as the resource key (not `ldapdirectory`).\n        For example: `{ \"ldapDirectory\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapDirectory": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilter": {
      "put": {
        "summary": "Execute addLdapFilter AXL operation",
        "description": "Execute addLdapFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapFilter` as the resource key (not `ldapfilter`).\n        For example: `{ \"ldapFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLdapFilter AXL operation",
        "description": "Returns all available ldapfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapFilter AXL operation",
        "description": "Execute removeLdapFilter AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapFilter AXL operation",
        "description": "Execute updateLdapFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapFilter` as the resource key (not `ldapfilter`).\n        For example: `{ \"ldapFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfield": {
      "put": {
        "summary": "Execute addLdapSyncCustomField AXL operation",
        "description": "Execute addLdapSyncCustomField AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapSyncCustomField` as the resource key (not `ldapsynccustomfield`).\n        For example: `{ \"ldapSyncCustomField\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapSyncCustomField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation",
        "description": "Returns all available ldapsynccustomfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapSyncCustomField AXL operation",
        "description": "Execute removeLdapSyncCustomField AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapSyncCustomField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSyncCustomField AXL operation",
        "description": "Execute updateLdapSyncCustomField AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapSyncCustomField` as the resource key (not `ldapsynccustomfield`).\n        For example: `{ \"ldapSyncCustomField\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapSyncCustomField": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/line": {
      "put": {
        "summary": "Execute addLine AXL operation",
        "description": "Execute addLine AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `line` as the resource key (not `line`).\n        For example: `{ \"line\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "line": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLine AXL operation",
        "description": "Returns all available line resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLine AXL operation",
        "description": "Execute removeLine AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "line": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLine AXL operation",
        "description": "Execute updateLine AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `line` as the resource key (not `line`).\n        For example: `{ \"line\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "line": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroup": {
      "put": {
        "summary": "Execute addLineGroup AXL operation",
        "description": "Execute addLineGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lineGroup` as the resource key (not `linegroup`).\n        For example: `{ \"lineGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lineGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLineGroup AXL operation",
        "description": "Returns all available linegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLineGroup AXL operation",
        "description": "Execute removeLineGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lineGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLineGroup AXL operation",
        "description": "Execute updateLineGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `lineGroup` as the resource key (not `linegroup`).\n        For example: `{ \"lineGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lineGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroup": {
      "put": {
        "summary": "Execute addLocalRouteGroup AXL operation",
        "description": "Execute addLocalRouteGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `localRouteGroup` as the resource key (not `localroutegroup`).\n        For example: `{ \"localRouteGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "localRouteGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation",
        "description": "Returns all available localroutegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLocalRouteGroup AXL operation",
        "description": "Execute removeLocalRouteGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "localRouteGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLocalRouteGroup AXL operation",
        "description": "Execute updateLocalRouteGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `localRouteGroup` as the resource key (not `localroutegroup`).\n        For example: `{ \"localRouteGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "localRouteGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/location": {
      "put": {
        "summary": "Execute addLocation AXL operation",
        "description": "Execute addLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `location` as the resource key (not `location`).\n        For example: `{ \"location\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "location": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getLocation AXL operation",
        "description": "Returns all available location resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLocation AXL operation",
        "description": "Execute removeLocation AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "location": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLocation AXL operation",
        "description": "Execute updateLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `location` as the resource key (not `location`).\n        For example: `{ \"location\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "location": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroup": {
      "put": {
        "summary": "Execute addMediaResourceGroup AXL operation",
        "description": "Execute addMediaResourceGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mediaResourceGroup` as the resource key (not `mediaresourcegroup`).\n        For example: `{ \"mediaResourceGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation",
        "description": "Returns all available mediaresourcegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMediaResourceGroup AXL operation",
        "description": "Execute removeMediaResourceGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMediaResourceGroup AXL operation",
        "description": "Execute updateMediaResourceGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mediaResourceGroup` as the resource key (not `mediaresourcegroup`).\n        For example: `{ \"mediaResourceGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelist": {
      "put": {
        "summary": "Execute addMediaResourceList AXL operation",
        "description": "Execute addMediaResourceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mediaResourceList` as the resource key (not `mediaresourcelist`).\n        For example: `{ \"mediaResourceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMediaResourceList AXL operation",
        "description": "Returns all available mediaresourcelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMediaResourceList AXL operation",
        "description": "Execute removeMediaResourceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMediaResourceList AXL operation",
        "description": "Execute updateMediaResourceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mediaResourceList` as the resource key (not `mediaresourcelist`).\n        For example: `{ \"mediaResourceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mediaResourceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetme": {
      "put": {
        "summary": "Execute addMeetMe AXL operation",
        "description": "Execute addMeetMe AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `meetMe` as the resource key (not `meetme`).\n        For example: `{ \"meetMe\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "meetMe": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMeetMe AXL operation",
        "description": "Returns all available meetme resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMeetMe AXL operation",
        "description": "Execute removeMeetMe AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "meetMe": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMeetMe AXL operation",
        "description": "Execute updateMeetMe AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `meetMe` as the resource key (not `meetme`).\n        For example: `{ \"meetMe\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "meetMe": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaiting": {
      "put": {
        "summary": "Execute addMessageWaiting AXL operation",
        "description": "Execute addMessageWaiting AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `messageWaiting` as the resource key (not `messagewaiting`).\n        For example: `{ \"messageWaiting\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "messageWaiting": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMessageWaiting AXL operation",
        "description": "Returns all available messagewaiting resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMessageWaiting AXL operation",
        "description": "Execute removeMessageWaiting AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "messageWaiting": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMessageWaiting AXL operation",
        "description": "Execute updateMessageWaiting AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `messageWaiting` as the resource key (not `messagewaiting`).\n        For example: `{ \"messageWaiting\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "messageWaiting": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomain": {
      "put": {
        "summary": "Execute addMlppDomain AXL operation",
        "description": "Execute addMlppDomain AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mlppDomain` as the resource key (not `mlppdomain`).\n        For example: `{ \"mlppDomain\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mlppDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMlppDomain AXL operation",
        "description": "Returns all available mlppdomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMlppDomain AXL operation",
        "description": "Execute removeMlppDomain AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mlppDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMlppDomain AXL operation",
        "description": "Execute updateMlppDomain AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mlppDomain` as the resource key (not `mlppdomain`).\n        For example: `{ \"mlppDomain\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mlppDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilevoiceaccess": {
      "put": {
        "summary": "Execute addMobileVoiceAccess AXL operation",
        "description": "Execute addMobileVoiceAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobileVoiceAccess` as the resource key (not `mobilevoiceaccess`).\n        For example: `{ \"mobileVoiceAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobileVoiceAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation",
        "description": "Returns all available mobilevoiceaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMobileVoiceAccess AXL operation",
        "description": "Execute removeMobileVoiceAccess AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobileVoiceAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobileVoiceAccess AXL operation",
        "description": "Execute updateMobileVoiceAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobileVoiceAccess` as the resource key (not `mobilevoiceaccess`).\n        For example: `{ \"mobileVoiceAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobileVoiceAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobility": {
      "put": {
        "summary": "Execute addMobility AXL operation",
        "description": "Execute addMobility AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobility` as the resource key (not `mobility`).\n        For example: `{ \"mobility\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMobility AXL operation",
        "description": "Returns all available mobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobility AXL operation",
        "description": "Execute updateMobility AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobility` as the resource key (not `mobility`).\n        For example: `{ \"mobility\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobility": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofile": {
      "put": {
        "summary": "Execute addMobilityProfile AXL operation",
        "description": "Execute addMobilityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobilityProfile` as the resource key (not `mobilityprofile`).\n        For example: `{ \"mobilityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobilityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMobilityProfile AXL operation",
        "description": "Returns all available mobilityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMobilityProfile AXL operation",
        "description": "Execute removeMobilityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobilityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobilityProfile AXL operation",
        "description": "Execute updateMobilityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mobilityProfile` as the resource key (not `mobilityprofile`).\n        For example: `{ \"mobilityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mobilityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomain": {
      "put": {
        "summary": "Execute addMraServiceDomain AXL operation",
        "description": "Execute addMraServiceDomain AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mraServiceDomain` as the resource key (not `mraservicedomain`).\n        For example: `{ \"mraServiceDomain\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mraServiceDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation",
        "description": "Returns all available mraservicedomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMraServiceDomain AXL operation",
        "description": "Execute removeMraServiceDomain AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mraServiceDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMraServiceDomain AXL operation",
        "description": "Execute updateMraServiceDomain AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mraServiceDomain` as the resource key (not `mraservicedomain`).\n        For example: `{ \"mraServiceDomain\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mraServiceDomain": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtp": {
      "put": {
        "summary": "Execute addMtp AXL operation",
        "description": "Execute addMtp AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mtp` as the resource key (not `mtp`).\n        For example: `{ \"mtp\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getMtp AXL operation",
        "description": "Returns all available mtp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMtp AXL operation",
        "description": "Execute removeMtp AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMtp AXL operation",
        "description": "Execute updateMtp AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mtp` as the resource key (not `mtp`).\n        For example: `{ \"mtp\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofile": {
      "put": {
        "summary": "Execute addNetworkAccessProfile AXL operation",
        "description": "Execute addNetworkAccessProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `networkAccessProfile` as the resource key (not `networkaccessprofile`).\n        For example: `{ \"networkAccessProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "networkAccessProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation",
        "description": "Returns all available networkaccessprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeNetworkAccessProfile AXL operation",
        "description": "Execute removeNetworkAccessProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "networkAccessProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateNetworkAccessProfile AXL operation",
        "description": "Execute updateNetworkAccessProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `networkAccessProfile` as the resource key (not `networkaccessprofile`).\n        For example: `{ \"networkAccessProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "networkAccessProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phone": {
      "put": {
        "summary": "Execute addPhone AXL operation",
        "description": "Execute addPhone AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phone` as the resource key (not `phone`).\n        For example: `{ \"phone\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPhone AXL operation",
        "description": "Returns all available phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhone AXL operation",
        "description": "Execute removePhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhone AXL operation",
        "description": "Execute updatePhone AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phone` as the resource key (not `phone`).\n        For example: `{ \"phone\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcode": {
      "put": {
        "summary": "Execute addPhoneActivationCode AXL operation",
        "description": "Execute addPhoneActivationCode AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneActivationCode` as the resource key (not `phoneactivationcode`).\n        For example: `{ \"phoneActivationCode\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneActivationCode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneActivationCode AXL operation",
        "description": "Execute removePhoneActivationCode AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneActivationCode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplate": {
      "put": {
        "summary": "Execute addPhoneButtonTemplate AXL operation",
        "description": "Execute addPhoneButtonTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneButtonTemplate` as the resource key (not `phonebuttontemplate`).\n        For example: `{ \"phoneButtonTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation",
        "description": "Returns all available phonebuttontemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneButtonTemplate AXL operation",
        "description": "Execute removePhoneButtonTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneButtonTemplate AXL operation",
        "description": "Execute updatePhoneButtonTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneButtonTemplate` as the resource key (not `phonebuttontemplate`).\n        For example: `{ \"phoneButtonTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentp": {
      "put": {
        "summary": "Execute addPhoneNtp AXL operation",
        "description": "Execute addPhoneNtp AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneNtp` as the resource key (not `phonentp`).\n        For example: `{ \"phoneNtp\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneNtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPhoneNtp AXL operation",
        "description": "Returns all available phonentp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneNtp AXL operation",
        "description": "Execute removePhoneNtp AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneNtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneNtp AXL operation",
        "description": "Execute updatePhoneNtp AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneNtp` as the resource key (not `phonentp`).\n        For example: `{ \"phoneNtp\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneNtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofile": {
      "put": {
        "summary": "Execute addPhoneSecurityProfile AXL operation",
        "description": "Execute addPhoneSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneSecurityProfile` as the resource key (not `phonesecurityprofile`).\n        For example: `{ \"phoneSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation",
        "description": "Returns all available phonesecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneSecurityProfile AXL operation",
        "description": "Execute removePhoneSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneSecurityProfile AXL operation",
        "description": "Execute updatePhoneSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `phoneSecurityProfile` as the resource key (not `phonesecurityprofile`).\n        For example: `{ \"phoneSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "phoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocation": {
      "put": {
        "summary": "Execute addPhysicalLocation AXL operation",
        "description": "Execute addPhysicalLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `physicalLocation` as the resource key (not `physicallocation`).\n        For example: `{ \"physicalLocation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "physicalLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation",
        "description": "Returns all available physicallocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhysicalLocation AXL operation",
        "description": "Execute removePhysicalLocation AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "physicalLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhysicalLocation AXL operation",
        "description": "Execute updatePhysicalLocation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `physicalLocation` as the resource key (not `physicallocation`).\n        For example: `{ \"physicalLocation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "physicalLocation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroup": {
      "put": {
        "summary": "Execute addPresenceGroup AXL operation",
        "description": "Execute addPresenceGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `presenceGroup` as the resource key (not `presencegroup`).\n        For example: `{ \"presenceGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPresenceGroup AXL operation",
        "description": "Returns all available presencegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePresenceGroup AXL operation",
        "description": "Execute removePresenceGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePresenceGroup AXL operation",
        "description": "Execute updatePresenceGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `presenceGroup` as the resource key (not `presencegroup`).\n        For example: `{ \"presenceGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroup": {
      "put": {
        "summary": "Execute addPresenceRedundancyGroup AXL operation",
        "description": "Execute addPresenceRedundancyGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `presenceRedundancyGroup` as the resource key (not `presenceredundancygroup`).\n        For example: `{ \"presenceRedundancyGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceRedundancyGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation",
        "description": "Returns all available presenceredundancygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePresenceRedundancyGroup AXL operation",
        "description": "Execute removePresenceRedundancyGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceRedundancyGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePresenceRedundancyGroup AXL operation",
        "description": "Execute updatePresenceRedundancyGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `presenceRedundancyGroup` as the resource key (not `presenceredundancygroup`).\n        For example: `{ \"presenceRedundancyGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "presenceRedundancyGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnode": {
      "put": {
        "summary": "Execute addProcessNode AXL operation",
        "description": "Execute addProcessNode AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `processNode` as the resource key (not `processnode`).\n        For example: `{ \"processNode\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "processNode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getProcessNode AXL operation",
        "description": "Returns all available processnode resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeProcessNode AXL operation",
        "description": "Execute removeProcessNode AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "processNode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateProcessNode AXL operation",
        "description": "Execute updateProcessNode AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `processNode` as the resource key (not `processnode`).\n        For example: `{ \"processNode\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "processNode": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofile": {
      "put": {
        "summary": "Execute addRecordingProfile AXL operation",
        "description": "Execute addRecordingProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `recordingProfile` as the resource key (not `recordingprofile`).\n        For example: `{ \"recordingProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "recordingProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRecordingProfile AXL operation",
        "description": "Returns all available recordingprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRecordingProfile AXL operation",
        "description": "Execute removeRecordingProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "recordingProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRecordingProfile AXL operation",
        "description": "Execute updateRecordingProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `recordingProfile` as the resource key (not `recordingprofile`).\n        For example: `{ \"recordingProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "recordingProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/region": {
      "put": {
        "summary": "Execute addRegion AXL operation",
        "description": "Execute addRegion AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `region` as the resource key (not `region`).\n        For example: `{ \"region\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "region": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRegion AXL operation",
        "description": "Returns all available region resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRegion AXL operation",
        "description": "Execute removeRegion AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "region": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRegion AXL operation",
        "description": "Execute updateRegion AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `region` as the resource key (not `region`).\n        For example: `{ \"region\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "region": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotecluster": {
      "put": {
        "summary": "Execute addRemoteCluster AXL operation",
        "description": "Execute addRemoteCluster AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteCluster` as the resource key (not `remotecluster`).\n        For example: `{ \"remoteCluster\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteCluster": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRemoteCluster AXL operation",
        "description": "Returns all available remotecluster resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteCluster AXL operation",
        "description": "Execute removeRemoteCluster AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteCluster": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteCluster AXL operation",
        "description": "Execute updateRemoteCluster AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteCluster` as the resource key (not `remotecluster`).\n        For example: `{ \"remoteCluster\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteCluster": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestination": {
      "put": {
        "summary": "Execute addRemoteDestination AXL operation",
        "description": "Execute addRemoteDestination AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteDestination` as the resource key (not `remotedestination`).\n        For example: `{ \"remoteDestination\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestination": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRemoteDestination AXL operation",
        "description": "Returns all available remotedestination resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteDestination AXL operation",
        "description": "Execute removeRemoteDestination AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestination": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteDestination AXL operation",
        "description": "Execute updateRemoteDestination AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteDestination` as the resource key (not `remotedestination`).\n        For example: `{ \"remoteDestination\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestination": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofile": {
      "put": {
        "summary": "Execute addRemoteDestinationProfile AXL operation",
        "description": "Execute addRemoteDestinationProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteDestinationProfile` as the resource key (not `remotedestinationprofile`).\n        For example: `{ \"remoteDestinationProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestinationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation",
        "description": "Returns all available remotedestinationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteDestinationProfile AXL operation",
        "description": "Execute removeRemoteDestinationProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestinationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteDestinationProfile AXL operation",
        "description": "Execute updateRemoteDestinationProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `remoteDestinationProfile` as the resource key (not `remotedestinationprofile`).\n        For example: `{ \"remoteDestinationProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "remoteDestinationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespace": {
      "put": {
        "summary": "Execute addResourcePriorityNamespace AXL operation",
        "description": "Execute addResourcePriorityNamespace AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `resourcePriorityNamespace` as the resource key (not `resourceprioritynamespace`).\n        For example: `{ \"resourcePriorityNamespace\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation",
        "description": "Returns all available resourceprioritynamespace resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeResourcePriorityNamespace AXL operation",
        "description": "Execute removeResourcePriorityNamespace AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateResourcePriorityNamespace AXL operation",
        "description": "Execute updateResourcePriorityNamespace AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `resourcePriorityNamespace` as the resource key (not `resourceprioritynamespace`).\n        For example: `{ \"resourcePriorityNamespace\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelist": {
      "put": {
        "summary": "Execute addResourcePriorityNamespaceList AXL operation",
        "description": "Execute addResourcePriorityNamespaceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `resourcePriorityNamespaceList` as the resource key (not `resourceprioritynamespacelist`).\n        For example: `{ \"resourcePriorityNamespaceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation",
        "description": "Returns all available resourceprioritynamespacelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeResourcePriorityNamespaceList AXL operation",
        "description": "Execute removeResourcePriorityNamespaceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateResourcePriorityNamespaceList AXL operation",
        "description": "Execute updateResourcePriorityNamespaceList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `resourcePriorityNamespaceList` as the resource key (not `resourceprioritynamespacelist`).\n        For example: `{ \"resourcePriorityNamespaceList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilter": {
      "put": {
        "summary": "Execute addRouteFilter AXL operation",
        "description": "Execute addRouteFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeFilter` as the resource key (not `routefilter`).\n        For example: `{ \"routeFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRouteFilter AXL operation",
        "description": "Returns all available routefilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteFilter AXL operation",
        "description": "Execute removeRouteFilter AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteFilter AXL operation",
        "description": "Execute updateRouteFilter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeFilter` as the resource key (not `routefilter`).\n        For example: `{ \"routeFilter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeFilter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroup": {
      "put": {
        "summary": "Execute addRouteGroup AXL operation",
        "description": "Execute addRouteGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeGroup` as the resource key (not `routegroup`).\n        For example: `{ \"routeGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRouteGroup AXL operation",
        "description": "Returns all available routegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteGroup AXL operation",
        "description": "Execute removeRouteGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteGroup AXL operation",
        "description": "Execute updateRouteGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeGroup` as the resource key (not `routegroup`).\n        For example: `{ \"routeGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelist": {
      "put": {
        "summary": "Execute addRouteList AXL operation",
        "description": "Execute addRouteList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeList` as the resource key (not `routelist`).\n        For example: `{ \"routeList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRouteList AXL operation",
        "description": "Returns all available routelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteList AXL operation",
        "description": "Execute removeRouteList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteList AXL operation",
        "description": "Execute updateRouteList AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routeList` as the resource key (not `routelist`).\n        For example: `{ \"routeList\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routeList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartition": {
      "put": {
        "summary": "Execute addRoutePartition AXL operation",
        "description": "Execute addRoutePartition AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routePartition` as the resource key (not `routepartition`).\n        For example: `{ \"routePartition\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRoutePartition AXL operation",
        "description": "Returns all available routepartition resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRoutePartition AXL operation",
        "description": "Execute removeRoutePartition AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRoutePartition AXL operation",
        "description": "Execute updateRoutePartition AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routePartition` as the resource key (not `routepartition`).\n        For example: `{ \"routePartition\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepattern": {
      "put": {
        "summary": "Execute addRoutePattern AXL operation",
        "description": "Execute addRoutePattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routePattern` as the resource key (not `routepattern`).\n        For example: `{ \"routePattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getRoutePattern AXL operation",
        "description": "Returns all available routepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRoutePattern AXL operation",
        "description": "Execute removeRoutePattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRoutePattern AXL operation",
        "description": "Execute updateRoutePattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routePattern` as the resource key (not `routepattern`).\n        For example: `{ \"routePattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safccdpurgeblocklearnedroutes": {
      "put": {
        "summary": "Execute addSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Execute addSafCcdPurgeBlockLearnedRoutes AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safCcdPurgeBlockLearnedRoutes` as the resource key (not `safccdpurgeblocklearnedroutes`).\n        For example: `{ \"safCcdPurgeBlockLearnedRoutes\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safCcdPurgeBlockLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Returns all available safccdpurgeblocklearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Execute removeSafCcdPurgeBlockLearnedRoutes AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safCcdPurgeBlockLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Execute updateSafCcdPurgeBlockLearnedRoutes AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safCcdPurgeBlockLearnedRoutes` as the resource key (not `safccdpurgeblocklearnedroutes`).\n        For example: `{ \"safCcdPurgeBlockLearnedRoutes\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safCcdPurgeBlockLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarder": {
      "put": {
        "summary": "Execute addSafForwarder AXL operation",
        "description": "Execute addSafForwarder AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safForwarder` as the resource key (not `safforwarder`).\n        For example: `{ \"safForwarder\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safForwarder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSafForwarder AXL operation",
        "description": "Returns all available safforwarder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafForwarder AXL operation",
        "description": "Execute removeSafForwarder AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safForwarder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafForwarder AXL operation",
        "description": "Execute updateSafForwarder AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safForwarder` as the resource key (not `safforwarder`).\n        For example: `{ \"safForwarder\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safForwarder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofile": {
      "put": {
        "summary": "Execute addSafSecurityProfile AXL operation",
        "description": "Execute addSafSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safSecurityProfile` as the resource key (not `safsecurityprofile`).\n        For example: `{ \"safSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation",
        "description": "Returns all available safsecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafSecurityProfile AXL operation",
        "description": "Execute removeSafSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafSecurityProfile AXL operation",
        "description": "Execute updateSafSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `safSecurityProfile` as the resource key (not `safsecurityprofile`).\n        For example: `{ \"safSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "safSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofile": {
      "put": {
        "summary": "Execute addSdpTransparencyProfile AXL operation",
        "description": "Execute addSdpTransparencyProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sdpTransparencyProfile` as the resource key (not `sdptransparencyprofile`).\n        For example: `{ \"sdpTransparencyProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sdpTransparencyProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation",
        "description": "Returns all available sdptransparencyprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSdpTransparencyProfile AXL operation",
        "description": "Execute removeSdpTransparencyProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sdpTransparencyProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSdpTransparencyProfile AXL operation",
        "description": "Execute updateSdpTransparencyProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sdpTransparencyProfile` as the resource key (not `sdptransparencyprofile`).\n        For example: `{ \"sdpTransparencyProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sdpTransparencyProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofile": {
      "put": {
        "summary": "Execute addServiceProfile AXL operation",
        "description": "Execute addServiceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `serviceProfile` as the resource key (not `serviceprofile`).\n        For example: `{ \"serviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "serviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getServiceProfile AXL operation",
        "description": "Returns all available serviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeServiceProfile AXL operation",
        "description": "Execute removeServiceProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "serviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateServiceProfile AXL operation",
        "description": "Execute updateServiceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `serviceProfile` as the resource key (not `serviceprofile`).\n        For example: `{ \"serviceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "serviceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipdialrules": {
      "put": {
        "summary": "Execute addSipDialRules AXL operation",
        "description": "Execute addSipDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipDialRules` as the resource key (not `sipdialrules`).\n        For example: `{ \"sipDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listSipDialRules AXL operation",
        "description": "Returns all available sipdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipDialRules AXL operation",
        "description": "Execute removeSipDialRules AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipDialRules AXL operation",
        "description": "Execute updateSipDialRules AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipDialRules` as the resource key (not `sipdialrules`).\n        For example: `{ \"sipDialRules\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipDialRules": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscript": {
      "put": {
        "summary": "Execute addSIPNormalizationScript AXL operation",
        "description": "Execute addSIPNormalizationScript AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sIPNormalizationScript` as the resource key (not `sipnormalizationscript`).\n        For example: `{ \"sIPNormalizationScript\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sIPNormalizationScript": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation",
        "description": "Returns all available sipnormalizationscript resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSIPNormalizationScript AXL operation",
        "description": "Execute removeSIPNormalizationScript AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sIPNormalizationScript": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSIPNormalizationScript AXL operation",
        "description": "Execute updateSIPNormalizationScript AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sIPNormalizationScript` as the resource key (not `sipnormalizationscript`).\n        For example: `{ \"sIPNormalizationScript\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sIPNormalizationScript": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofile": {
      "put": {
        "summary": "Execute addSipProfile AXL operation",
        "description": "Execute addSipProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipProfile` as the resource key (not `sipprofile`).\n        For example: `{ \"sipProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSipProfile AXL operation",
        "description": "Returns all available sipprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipProfile AXL operation",
        "description": "Execute removeSipProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipProfile AXL operation",
        "description": "Execute updateSipProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipProfile` as the resource key (not `sipprofile`).\n        For example: `{ \"sipProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealm": {
      "put": {
        "summary": "Execute addSipRealm AXL operation",
        "description": "Execute addSipRealm AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipRealm` as the resource key (not `siprealm`).\n        For example: `{ \"sipRealm\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRealm": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSipRealm AXL operation",
        "description": "Returns all available siprealm resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipRealm AXL operation",
        "description": "Execute removeSipRealm AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRealm": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipRealm AXL operation",
        "description": "Execute updateSipRealm AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipRealm` as the resource key (not `siprealm`).\n        For example: `{ \"sipRealm\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRealm": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepattern": {
      "put": {
        "summary": "Execute addSipRoutePattern AXL operation",
        "description": "Execute addSipRoutePattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipRoutePattern` as the resource key (not `siproutepattern`).\n        For example: `{ \"sipRoutePattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRoutePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation",
        "description": "Returns all available siproutepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipRoutePattern AXL operation",
        "description": "Execute removeSipRoutePattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRoutePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipRoutePattern AXL operation",
        "description": "Execute updateSipRoutePattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipRoutePattern` as the resource key (not `siproutepattern`).\n        For example: `{ \"sipRoutePattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipRoutePattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunk": {
      "put": {
        "summary": "Execute addSipTrunk AXL operation",
        "description": "Execute addSipTrunk AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipTrunk` as the resource key (not `siptrunk`).\n        For example: `{ \"sipTrunk\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSipTrunk AXL operation",
        "description": "Returns all available siptrunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipTrunk AXL operation",
        "description": "Execute removeSipTrunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipTrunk AXL operation",
        "description": "Execute updateSipTrunk AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipTrunk` as the resource key (not `siptrunk`).\n        For example: `{ \"sipTrunk\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofile": {
      "put": {
        "summary": "Execute addSipTrunkSecurityProfile AXL operation",
        "description": "Execute addSipTrunkSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipTrunkSecurityProfile` as the resource key (not `siptrunksecurityprofile`).\n        For example: `{ \"sipTrunkSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation",
        "description": "Returns all available siptrunksecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipTrunkSecurityProfile AXL operation",
        "description": "Execute removeSipTrunkSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipTrunkSecurityProfile AXL operation",
        "description": "Execute updateSipTrunkSecurityProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sipTrunkSecurityProfile` as the resource key (not `siptrunksecurityprofile`).\n        For example: `{ \"sipTrunkSecurityProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpcommunitystring": {
      "put": {
        "summary": "Execute addSNMPCommunityString AXL operation",
        "description": "Execute addSNMPCommunityString AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sNMPCommunityString` as the resource key (not `snmpcommunitystring`).\n        For example: `{ \"sNMPCommunityString\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPCommunityString": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation",
        "description": "Returns all available snmpcommunitystring resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSNMPCommunityString AXL operation",
        "description": "Execute removeSNMPCommunityString AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPCommunityString": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPCommunityString AXL operation",
        "description": "Execute updateSNMPCommunityString AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sNMPCommunityString` as the resource key (not `snmpcommunitystring`).\n        For example: `{ \"sNMPCommunityString\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPCommunityString": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpuser": {
      "put": {
        "summary": "Execute addSNMPUser AXL operation",
        "description": "Execute addSNMPUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sNMPUser` as the resource key (not `snmpuser`).\n        For example: `{ \"sNMPUser\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSNMPUser AXL operation",
        "description": "Returns all available snmpuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSNMPUser AXL operation",
        "description": "Execute removeSNMPUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPUser AXL operation",
        "description": "Execute updateSNMPUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sNMPUser` as the resource key (not `snmpuser`).\n        For example: `{ \"sNMPUser\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplate": {
      "put": {
        "summary": "Execute addSoftKeyTemplate AXL operation",
        "description": "Execute addSoftKeyTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `softKeyTemplate` as the resource key (not `softkeytemplate`).\n        For example: `{ \"softKeyTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "softKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation",
        "description": "Returns all available softkeytemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSoftKeyTemplate AXL operation",
        "description": "Execute removeSoftKeyTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "softKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSoftKeyTemplate AXL operation",
        "description": "Execute updateSoftKeyTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `softKeyTemplate` as the resource key (not `softkeytemplate`).\n        For example: `{ \"softKeyTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "softKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srst": {
      "put": {
        "summary": "Execute addSrst AXL operation",
        "description": "Execute addSrst AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `srst` as the resource key (not `srst`).\n        For example: `{ \"srst\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "srst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getSrst AXL operation",
        "description": "Returns all available srst resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSrst AXL operation",
        "description": "Execute removeSrst AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "srst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSrst AXL operation",
        "description": "Execute updateSrst AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `srst` as the resource key (not `srst`).\n        For example: `{ \"srst\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "srst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiod": {
      "put": {
        "summary": "Execute addTimePeriod AXL operation",
        "description": "Execute addTimePeriod AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `timePeriod` as the resource key (not `timeperiod`).\n        For example: `{ \"timePeriod\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timePeriod": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getTimePeriod AXL operation",
        "description": "Returns all available timeperiod resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTimePeriod AXL operation",
        "description": "Execute removeTimePeriod AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timePeriod": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTimePeriod AXL operation",
        "description": "Execute updateTimePeriod AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `timePeriod` as the resource key (not `timeperiod`).\n        For example: `{ \"timePeriod\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timePeriod": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedule": {
      "put": {
        "summary": "Execute addTimeSchedule AXL operation",
        "description": "Execute addTimeSchedule AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `timeSchedule` as the resource key (not `timeschedule`).\n        For example: `{ \"timeSchedule\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timeSchedule": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getTimeSchedule AXL operation",
        "description": "Returns all available timeschedule resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTimeSchedule AXL operation",
        "description": "Execute removeTimeSchedule AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timeSchedule": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTimeSchedule AXL operation",
        "description": "Execute updateTimeSchedule AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `timeSchedule` as the resource key (not `timeschedule`).\n        For example: `{ \"timeSchedule\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "timeSchedule": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/todaccess": {
      "put": {
        "summary": "Execute addTodAccess AXL operation",
        "description": "Execute addTodAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `todAccess` as the resource key (not `todaccess`).\n        For example: `{ \"todAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "todAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listTodAccess AXL operation",
        "description": "Returns all available todaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTodAccess AXL operation",
        "description": "Execute removeTodAccess AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "todAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTodAccess AXL operation",
        "description": "Execute updateTodAccess AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `todAccess` as the resource key (not `todaccess`).\n        For example: `{ \"todAccess\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "todAccess": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoder": {
      "put": {
        "summary": "Execute addTranscoder AXL operation",
        "description": "Execute addTranscoder AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transcoder` as the resource key (not `transcoder`).\n        For example: `{ \"transcoder\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transcoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getTranscoder AXL operation",
        "description": "Returns all available transcoder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTranscoder AXL operation",
        "description": "Execute removeTranscoder AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transcoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTranscoder AXL operation",
        "description": "Execute updateTranscoder AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transcoder` as the resource key (not `transcoder`).\n        For example: `{ \"transcoder\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transcoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofile": {
      "put": {
        "summary": "Execute addTransformationProfile AXL operation",
        "description": "Execute addTransformationProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transformationProfile` as the resource key (not `transformationprofile`).\n        For example: `{ \"transformationProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transformationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getTransformationProfile AXL operation",
        "description": "Returns all available transformationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTransformationProfile AXL operation",
        "description": "Execute removeTransformationProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transformationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTransformationProfile AXL operation",
        "description": "Execute updateTransformationProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transformationProfile` as the resource key (not `transformationprofile`).\n        For example: `{ \"transformationProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transformationProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpattern": {
      "put": {
        "summary": "Execute addTransPattern AXL operation",
        "description": "Execute addTransPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transPattern` as the resource key (not `transpattern`).\n        For example: `{ \"transPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getTransPattern AXL operation",
        "description": "Returns all available transpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTransPattern AXL operation",
        "description": "Execute removeTransPattern AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTransPattern AXL operation",
        "description": "Execute updateTransPattern AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `transPattern` as the resource key (not `transpattern`).\n        For example: `{ \"transPattern\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "transPattern": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservice": {
      "put": {
        "summary": "Execute addUcService AXL operation",
        "description": "Execute addUcService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ucService` as the resource key (not `ucservice`).\n        For example: `{ \"ucService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ucService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUcService AXL operation",
        "description": "Returns all available ucservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUcService AXL operation",
        "description": "Execute removeUcService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ucService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUcService AXL operation",
        "description": "Execute updateUcService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ucService` as the resource key (not `ucservice`).\n        For example: `{ \"ucService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ucService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unitstogateway": {
      "put": {
        "summary": "Execute addUnitsToGateway AXL operation",
        "description": "Execute addUnitsToGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `unitsToGateway` as the resource key (not `unitstogateway`).\n        For example: `{ \"unitsToGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "unitsToGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUnitsToGateway AXL operation",
        "description": "Execute removeUnitsToGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "unitsToGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplate": {
      "put": {
        "summary": "Execute addUniversalDeviceTemplate AXL operation",
        "description": "Execute addUniversalDeviceTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `universalDeviceTemplate` as the resource key (not `universaldevicetemplate`).\n        For example: `{ \"universalDeviceTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalDeviceTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation",
        "description": "Returns all available universaldevicetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUniversalDeviceTemplate AXL operation",
        "description": "Execute removeUniversalDeviceTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalDeviceTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUniversalDeviceTemplate AXL operation",
        "description": "Execute updateUniversalDeviceTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `universalDeviceTemplate` as the resource key (not `universaldevicetemplate`).\n        For example: `{ \"universalDeviceTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalDeviceTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplate": {
      "put": {
        "summary": "Execute addUniversalLineTemplate AXL operation",
        "description": "Execute addUniversalLineTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `universalLineTemplate` as the resource key (not `universallinetemplate`).\n        For example: `{ \"universalLineTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalLineTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation",
        "description": "Returns all available universallinetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUniversalLineTemplate AXL operation",
        "description": "Execute removeUniversalLineTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalLineTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUniversalLineTemplate AXL operation",
        "description": "Execute updateUniversalLineTemplate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `universalLineTemplate` as the resource key (not `universallinetemplate`).\n        For example: `{ \"universalLineTemplate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "universalLineTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/user": {
      "put": {
        "summary": "Execute addUser AXL operation",
        "description": "Execute addUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `user` as the resource key (not `user`).\n        For example: `{ \"user\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "user": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUser AXL operation",
        "description": "Returns all available user resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUser AXL operation",
        "description": "Execute removeUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "user": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUser AXL operation",
        "description": "Execute updateUser AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `user` as the resource key (not `user`).\n        For example: `{ \"user\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "user": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroup": {
      "put": {
        "summary": "Execute addUserGroup AXL operation",
        "description": "Execute addUserGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `userGroup` as the resource key (not `usergroup`).\n        For example: `{ \"userGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUserGroup AXL operation",
        "description": "Returns all available usergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUserGroup AXL operation",
        "description": "Execute removeUserGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUserGroup AXL operation",
        "description": "Execute updateUserGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `userGroup` as the resource key (not `usergroup`).\n        For example: `{ \"userGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userphoneassociation": {
      "put": {
        "summary": "Execute addUserPhoneAssociation AXL operation",
        "description": "Execute addUserPhoneAssociation AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `userPhoneAssociation` as the resource key (not `userphoneassociation`).\n        For example: `{ \"userPhoneAssociation\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userPhoneAssociation": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovision": {
      "put": {
        "summary": "Execute addUserProfileProvision AXL operation",
        "description": "Execute addUserProfileProvision AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `userProfileProvision` as the resource key (not `userprofileprovision`).\n        For example: `{ \"userProfileProvision\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userProfileProvision": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation",
        "description": "Returns all available userprofileprovision resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUserProfileProvision AXL operation",
        "description": "Execute removeUserProfileProvision AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userProfileProvision": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUserProfileProvision AXL operation",
        "description": "Execute updateUserProfileProvision AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `userProfileProvision` as the resource key (not `userprofileprovision`).\n        For example: `{ \"userProfileProvision\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "userProfileProvision": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vg224": {
      "put": {
        "summary": "Execute addVg224 AXL operation",
        "description": "Execute addVg224 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vg224` as the resource key (not `vg224`).\n        For example: `{ \"vg224\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVg224 AXL operation",
        "description": "Returns all available vg224 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVg224 AXL operation",
        "description": "Execute removeVg224 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVg224 AXL operation",
        "description": "Execute updateVg224 AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vg224` as the resource key (not `vg224`).\n        For example: `{ \"vg224\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohserver": {
      "put": {
        "summary": "Execute addVohServer AXL operation",
        "description": "Execute addVohServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vohServer` as the resource key (not `vohserver`).\n        For example: `{ \"vohServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vohServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVohServer AXL operation",
        "description": "Returns all available vohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVohServer AXL operation",
        "description": "Execute removeVohServer AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vohServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVohServer AXL operation",
        "description": "Execute updateVohServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vohServer` as the resource key (not `vohserver`).\n        For example: `{ \"vohServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vohServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilot": {
      "put": {
        "summary": "Execute addVoiceMailPilot AXL operation",
        "description": "Execute addVoiceMailPilot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailPilot` as the resource key (not `voicemailpilot`).\n        For example: `{ \"voiceMailPilot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation",
        "description": "Returns all available voicemailpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailPilot AXL operation",
        "description": "Execute removeVoiceMailPilot AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailPilot AXL operation",
        "description": "Execute updateVoiceMailPilot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailPilot` as the resource key (not `voicemailpilot`).\n        For example: `{ \"voiceMailPilot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPilot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailport": {
      "put": {
        "summary": "Execute addVoiceMailPort AXL operation",
        "description": "Execute addVoiceMailPort AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailPort` as the resource key (not `voicemailport`).\n        For example: `{ \"voiceMailPort\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation",
        "description": "Returns all available voicemailport resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailPort AXL operation",
        "description": "Execute removeVoiceMailPort AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailPort AXL operation",
        "description": "Execute updateVoiceMailPort AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailPort` as the resource key (not `voicemailport`).\n        For example: `{ \"voiceMailPort\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofile": {
      "put": {
        "summary": "Execute addVoiceMailProfile AXL operation",
        "description": "Execute addVoiceMailProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailProfile` as the resource key (not `voicemailprofile`).\n        For example: `{ \"voiceMailProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation",
        "description": "Returns all available voicemailprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailProfile AXL operation",
        "description": "Execute removeVoiceMailProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailProfile AXL operation",
        "description": "Execute updateVoiceMailProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `voiceMailProfile` as the resource key (not `voicemailprofile`).\n        For example: `{ \"voiceMailProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "voiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateway": {
      "put": {
        "summary": "Execute addVpnGateway AXL operation",
        "description": "Execute addVpnGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnGateway` as the resource key (not `vpngateway`).\n        For example: `{ \"vpnGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVpnGateway AXL operation",
        "description": "Returns all available vpngateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnGateway AXL operation",
        "description": "Execute removeVpnGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnGateway AXL operation",
        "description": "Execute updateVpnGateway AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnGateway` as the resource key (not `vpngateway`).\n        For example: `{ \"vpnGateway\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroup": {
      "put": {
        "summary": "Execute addVpnGroup AXL operation",
        "description": "Execute addVpnGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnGroup` as the resource key (not `vpngroup`).\n        For example: `{ \"vpnGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVpnGroup AXL operation",
        "description": "Returns all available vpngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnGroup AXL operation",
        "description": "Execute removeVpnGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnGroup AXL operation",
        "description": "Execute updateVpnGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnGroup` as the resource key (not `vpngroup`).\n        For example: `{ \"vpnGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofile": {
      "put": {
        "summary": "Execute addVpnProfile AXL operation",
        "description": "Execute addVpnProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnProfile` as the resource key (not `vpnprofile`).\n        For example: `{ \"vpnProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getVpnProfile AXL operation",
        "description": "Returns all available vpnprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnProfile AXL operation",
        "description": "Execute removeVpnProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnProfile AXL operation",
        "description": "Execute updateVpnProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `vpnProfile` as the resource key (not `vpnprofile`).\n        For example: `{ \"vpnProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "vpnProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspot": {
      "put": {
        "summary": "Execute addWifiHotspot AXL operation",
        "description": "Execute addWifiHotspot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wifiHotspot` as the resource key (not `wifihotspot`).\n        For example: `{ \"wifiHotspot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wifiHotspot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getWifiHotspot AXL operation",
        "description": "Returns all available wifihotspot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWifiHotspot AXL operation",
        "description": "Execute removeWifiHotspot AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wifiHotspot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWifiHotspot AXL operation",
        "description": "Execute updateWifiHotspot AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wifiHotspot` as the resource key (not `wifihotspot`).\n        For example: `{ \"wifiHotspot\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wifiHotspot": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wirelessaccesspointcontrollers": {
      "put": {
        "summary": "Execute addWirelessAccessPointControllers AXL operation",
        "description": "Execute addWirelessAccessPointControllers AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wirelessAccessPointControllers` as the resource key (not `wirelessaccesspointcontrollers`).\n        For example: `{ \"wirelessAccessPointControllers\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wirelessAccessPointControllers": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute listWirelessAccessPointControllers AXL operation",
        "description": "Returns all available wirelessaccesspointcontrollers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWirelessAccessPointControllers AXL operation",
        "description": "Execute removeWirelessAccessPointControllers AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wirelessAccessPointControllers": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWirelessAccessPointControllers AXL operation",
        "description": "Execute updateWirelessAccessPointControllers AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wirelessAccessPointControllers` as the resource key (not `wirelessaccesspointcontrollers`).\n        For example: `{ \"wirelessAccessPointControllers\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wirelessAccessPointControllers": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofile": {
      "put": {
        "summary": "Execute addWLANProfile AXL operation",
        "description": "Execute addWLANProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wLANProfile` as the resource key (not `wlanprofile`).\n        For example: `{ \"wLANProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wLANProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getWLANProfile AXL operation",
        "description": "Returns all available wlanprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWLANProfile AXL operation",
        "description": "Execute removeWLANProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wLANProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWLANProfile AXL operation",
        "description": "Execute updateWLANProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wLANProfile` as the resource key (not `wlanprofile`).\n        For example: `{ \"wLANProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wLANProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroup": {
      "put": {
        "summary": "Execute addWlanProfileGroup AXL operation",
        "description": "Execute addWlanProfileGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wlanProfileGroup` as the resource key (not `wlanprofilegroup`).\n        For example: `{ \"wlanProfileGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wlanProfileGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation",
        "description": "Returns all available wlanprofilegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWlanProfileGroup AXL operation",
        "description": "Execute removeWlanProfileGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wlanProfileGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWlanProfileGroup AXL operation",
        "description": "Execute updateWlanProfileGroup AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `wlanProfileGroup` as the resource key (not `wlanprofilegroup`).\n        For example: `{ \"wlanProfileGroup\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wlanProfileGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycallmanager": {
      "post": {
        "summary": "Execute applyCallManager AXL operation",
        "description": "Execute applyCallManager AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCallManager": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycallmanagergroup": {
      "post": {
        "summary": "Execute applyCallManagerGroup AXL operation",
        "description": "Execute applyCallManagerGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCallManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "Execute applyCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute applyCiscoCatalyst6000E1VoIPGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCiscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "Execute applyCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute applyCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCiscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "Execute applyCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute applyCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCiscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "Execute applyCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute applyCiscoCatalyst600024PortFXSGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCiscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycommondeviceconfig": {
      "post": {
        "summary": "Execute applyCommonDeviceConfig AXL operation",
        "description": "Execute applyCommonDeviceConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCommonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applycommonphoneconfig": {
      "post": {
        "summary": "Execute applyCommonPhoneConfig AXL operation",
        "description": "Execute applyCommonPhoneConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCommonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyconferencebridge": {
      "post": {
        "summary": "Execute applyConferenceBridge AXL operation",
        "description": "Execute applyConferenceBridge AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyConferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyconfigenterpriseparameters": {
      "post": {
        "summary": "Execute applyConfigEnterpriseParameters AXL operation",
        "description": "Execute applyConfigEnterpriseParameters AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyConfigEnterpriseParameters": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyctiroutepoint": {
      "post": {
        "summary": "Execute applyCtiRoutePoint AXL operation",
        "description": "Execute applyCtiRoutePoint AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyCtiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydatetimegroup": {
      "post": {
        "summary": "Execute applyDateTimeGroup AXL operation",
        "description": "Execute applyDateTimeGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyDateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydevicepool": {
      "post": {
        "summary": "Execute applyDevicePool AXL operation",
        "description": "Execute applyDevicePool AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyDevicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applydirectedcallpark": {
      "post": {
        "summary": "Execute applyDirectedCallPark AXL operation",
        "description": "Execute applyDirectedCallPark AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyDirectedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applygatekeeper": {
      "post": {
        "summary": "Execute applyGatekeeper AXL operation",
        "description": "Execute applyGatekeeper AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyGatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applygateway": {
      "post": {
        "summary": "Execute applyGateway AXL operation",
        "description": "Execute applyGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyh323gateway": {
      "post": {
        "summary": "Execute applyH323Gateway AXL operation",
        "description": "Execute applyH323Gateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyH323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyh323phone": {
      "post": {
        "summary": "Execute applyH323Phone AXL operation",
        "description": "Execute applyH323Phone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyH323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyhuntlist": {
      "post": {
        "summary": "Execute applyHuntList AXL operation",
        "description": "Execute applyHuntList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyHuntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyline": {
      "post": {
        "summary": "Execute applyLine AXL operation",
        "description": "Execute applyLine AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyLine": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applymtp": {
      "post": {
        "summary": "Execute applyMtp AXL operation",
        "description": "Execute applyMtp AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyMtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphone": {
      "post": {
        "summary": "Execute applyPhone AXL operation",
        "description": "Execute applyPhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyPhone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphonebuttontemplate": {
      "post": {
        "summary": "Execute applyPhoneButtonTemplate AXL operation",
        "description": "Execute applyPhoneButtonTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyPhoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyphonesecurityprofile": {
      "post": {
        "summary": "Execute applyPhoneSecurityProfile AXL operation",
        "description": "Execute applyPhoneSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyPhoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyregion": {
      "post": {
        "summary": "Execute applyRegion AXL operation",
        "description": "Execute applyRegion AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyRegion": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyresourceprioritynamespace": {
      "post": {
        "summary": "Execute applyResourcePriorityNamespace AXL operation",
        "description": "Execute applyResourcePriorityNamespace AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyResourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyresourceprioritynamespacelist": {
      "post": {
        "summary": "Execute applyResourcePriorityNamespaceList AXL operation",
        "description": "Execute applyResourcePriorityNamespaceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyResourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyroutelist": {
      "post": {
        "summary": "Execute applyRouteList AXL operation",
        "description": "Execute applyRouteList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyRouteList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyroutepartition": {
      "post": {
        "summary": "Execute applyRoutePartition AXL operation",
        "description": "Execute applyRoutePartition AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyRoutePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysipprofile": {
      "post": {
        "summary": "Execute applySipProfile AXL operation",
        "description": "Execute applySipProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applySipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysiptrunksecurityprofile": {
      "post": {
        "summary": "Execute applySipTrunkSecurityProfile AXL operation",
        "description": "Execute applySipTrunkSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applySipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysoftkeytemplate": {
      "post": {
        "summary": "Execute applySoftKeyTemplate AXL operation",
        "description": "Execute applySoftKeyTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applySoftKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applysrst": {
      "post": {
        "summary": "Execute applySrst AXL operation",
        "description": "Execute applySrst AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applySrst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applytranscoder": {
      "post": {
        "summary": "Execute applyTranscoder AXL operation",
        "description": "Execute applyTranscoder AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyTranscoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyucservice": {
      "post": {
        "summary": "Execute applyUcService AXL operation",
        "description": "Execute applyUcService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyUcService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyvoicemailport": {
      "post": {
        "summary": "Execute applyVoiceMailPort AXL operation",
        "description": "Execute applyVoiceMailPort AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyVoiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applyvoicemailprofile": {
      "post": {
        "summary": "Execute applyVoiceMailProfile AXL operation",
        "description": "Execute applyVoiceMailProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "applyVoiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignpresenceuser": {
      "post": {
        "summary": "Execute assignPresenceUser AXL operation",
        "description": "Execute assignPresenceUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "assignPresenceUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doauthenticateuser": {
      "post": {
        "summary": "Execute doAuthenticateUser AXL operation",
        "description": "Execute doAuthenticateUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doAuthenticateUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dochangedndstatus": {
      "post": {
        "summary": "Execute doChangeDNDStatus AXL operation",
        "description": "Execute doChangeDNDStatus AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doChangeDNDStatus": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicelogin": {
      "post": {
        "summary": "Execute doDeviceLogin AXL operation",
        "description": "Execute doDeviceLogin AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doDeviceLogin": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicelogout": {
      "post": {
        "summary": "Execute doDeviceLogout AXL operation",
        "description": "Execute doDeviceLogout AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doDeviceLogout": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dodevicereset": {
      "post": {
        "summary": "Execute doDeviceReset AXL operation",
        "description": "Execute doDeviceReset AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doDeviceReset": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doenterpriseparametersreset": {
      "post": {
        "summary": "Execute doEnterpriseParametersReset AXL operation",
        "description": "Execute doEnterpriseParametersReset AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doEnterpriseParametersReset": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doldapsync": {
      "post": {
        "summary": "Execute doLdapSync AXL operation",
        "description": "Execute doLdapSync AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doLdapSync": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doserviceparametersreset": {
      "post": {
        "summary": "Execute doServiceParametersReset AXL operation",
        "description": "Execute doServiceParametersReset AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doServiceParametersReset": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartentitlementrequest": {
      "post": {
        "summary": "Execute doSmartEntitlementRequest AXL operation",
        "description": "Execute doSmartEntitlementRequest AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartEntitlementRequest": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicensederegister": {
      "post": {
        "summary": "Execute doSmartLicenseDeRegister AXL operation",
        "description": "Execute doSmartLicenseDeRegister AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartLicenseDeRegister": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenseregister": {
      "post": {
        "summary": "Execute doSmartLicenseRegister AXL operation",
        "description": "Execute doSmartLicenseRegister AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartLicenseRegister": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenserenewauthorization": {
      "post": {
        "summary": "Execute doSmartLicenseRenewAuthorization AXL operation",
        "description": "Execute doSmartLicenseRenewAuthorization AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartLicenseRenewAuthorization": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicenserenewregistration": {
      "post": {
        "summary": "Execute doSmartLicenseRenewRegistration AXL operation",
        "description": "Execute doSmartLicenseRenewRegistration AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartLicenseRenewRegistration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dosmartlicensereregister": {
      "post": {
        "summary": "Execute doSmartLicenseReRegister AXL operation",
        "description": "Execute doSmartLicenseReRegister AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doSmartLicenseReRegister": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdatelicenseusage": {
      "post": {
        "summary": "Execute doUpdateLicenseUsage AXL operation",
        "description": "Execute doUpdateLicenseUsage AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doUpdateLicenseUsage": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdateremotecluster": {
      "post": {
        "summary": "Execute doUpdateRemoteCluster AXL operation",
        "description": "Execute doUpdateRemoteCluster AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doUpdateRemoteCluster": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/doupdatetransportsettings": {
      "post": {
        "summary": "Execute doUpdateTransportSettings AXL operation",
        "description": "Execute doUpdateTransportSettings AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "doUpdateTransportSettings": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlquery": {
      "post": {
        "summary": "Execute executeSQLQuery AXL operation",
        "description": "Execute executeSQLQuery AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "executeSQLQuery": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlqueryinactive": {
      "post": {
        "summary": "Execute executeSQLQueryInactive AXL operation",
        "description": "Execute executeSQLQueryInactive AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "executeSQLQueryInactive": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/executesqlupdate": {
      "post": {
        "summary": "Execute executeSQLUpdate AXL operation",
        "description": "Execute executeSQLUpdate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "executeSQLUpdate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAarGroup AXL operation with dynamic parameter",
        "description": "Filter aargroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAarGroup AXL operation with dynamic parameter",
        "description": "Filter aargroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAarGroup AXL operation with dynamic parameter",
        "description": "Filter aargroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `aarGroup` as the resource key (not `aargroup`).\n          For example: `{ \"aarGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/advertisedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAdvertisedPatterns AXL operation with dynamic parameter",
        "description": "Filter advertisedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAdvertisedPatterns AXL operation with dynamic parameter",
        "description": "Filter advertisedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAdvertisedPatterns AXL operation with dynamic parameter",
        "description": "Filter advertisedpatterns resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `advertisedPatterns` as the resource key (not `advertisedpatterns`).\n          For example: `{ \"advertisedPatterns\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnouncement AXL operation with dynamic parameter",
        "description": "Filter announcement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAnnouncement AXL operation with dynamic parameter",
        "description": "Filter announcement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAnnouncement AXL operation with dynamic parameter",
        "description": "Filter announcement resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `announcement` as the resource key (not `announcement`).\n          For example: `{ \"announcement\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciator": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation",
        "description": "Returns all available annunciator resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAnnunciator AXL operation",
        "description": "Execute updateAnnunciator AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `annunciator` as the resource key (not `annunciator`).\n        For example: `{ \"annunciator\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "annunciator": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciator/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation with dynamic parameter",
        "description": "Filter annunciator resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAnnunciator AXL operation with dynamic parameter",
        "description": "Filter annunciator resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `annunciator` as the resource key (not `annunciator`).\n          For example: `{ \"annunciator\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute listApplicationDialRules AXL operation with dynamic parameter",
        "description": "Filter applicationdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationDialRules AXL operation with dynamic parameter",
        "description": "Filter applicationdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationDialRules AXL operation with dynamic parameter",
        "description": "Filter applicationdialrules resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `applicationDialRules` as the resource key (not `applicationdialrules`).\n          For example: `{ \"applicationDialRules\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationServer AXL operation with dynamic parameter",
        "description": "Filter applicationserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationServer AXL operation with dynamic parameter",
        "description": "Filter applicationserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationServer AXL operation with dynamic parameter",
        "description": "Filter applicationserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `applicationServer` as the resource key (not `applicationserver`).\n          For example: `{ \"applicationServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter applicationusercapfprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `applicationUserCapfProfile` as the resource key (not `applicationusercapfprofile`).\n          For example: `{ \"applicationUserCapfProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appserverinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppServerInfo AXL operation with dynamic parameter",
        "description": "Filter appserverinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAppServerInfo AXL operation with dynamic parameter",
        "description": "Filter appserverinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAppServerInfo AXL operation with dynamic parameter",
        "description": "Filter appserverinfo resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `appServerInfo` as the resource key (not `appserverinfo`).\n          For example: `{ \"appServerInfo\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppUser AXL operation with dynamic parameter",
        "description": "Filter appuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAppUser AXL operation with dynamic parameter",
        "description": "Filter appuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAppUser AXL operation with dynamic parameter",
        "description": "Filter appuser resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `appUser` as the resource key (not `appuser`).\n          For example: `{ \"appUser\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter audiocodecpreferencelist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `audioCodecPreferenceList` as the resource key (not `audiocodecpreferencelist`).\n          For example: `{ \"audioCodecPreferenceList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getBillingServer AXL operation with dynamic parameter",
        "description": "Filter billingserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeBillingServer AXL operation with dynamic parameter",
        "description": "Filter billingserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateBillingServer AXL operation with dynamic parameter",
        "description": "Filter billingserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `billingServer` as the resource key (not `billingserver`).\n          For example: `{ \"billingServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/blockedlearnedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listBlockedLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeBlockedLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateBlockedLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter blockedlearnedpatterns resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `blockedLearnedPatterns` as the resource key (not `blockedlearnedpatterns`).\n          For example: `{ \"blockedLearnedPatterns\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter calledpartytransformationpattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `calledPartyTransformationPattern` as the resource key (not `calledpartytransformationpattern`).\n          For example: `{ \"calledPartyTransformationPattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter callerfilterlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter callerfilterlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter callerfilterlist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callerFilterList` as the resource key (not `callerfilterlist`).\n          For example: `{ \"callerFilterList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter callingpartytransformationpattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callingPartyTransformationPattern` as the resource key (not `callingpartytransformationpattern`).\n          For example: `{ \"callingPartyTransformationPattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanager": {
      "get": {
        "summary": "Execute getCallManager AXL operation",
        "description": "Returns all available callmanager resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallManager AXL operation",
        "description": "Execute updateCallManager AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `callManager` as the resource key (not `callmanager`).\n        For example: `{ \"callManager\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "callManager": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanager/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManager AXL operation with dynamic parameter",
        "description": "Filter callmanager resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallManager AXL operation with dynamic parameter",
        "description": "Filter callmanager resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callManager` as the resource key (not `callmanager`).\n          For example: `{ \"callManager\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter callmanagergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter callmanagergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter callmanagergroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callManagerGroup` as the resource key (not `callmanagergroup`).\n          For example: `{ \"callManagerGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPark AXL operation with dynamic parameter",
        "description": "Filter callpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallPark AXL operation with dynamic parameter",
        "description": "Filter callpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallPark AXL operation with dynamic parameter",
        "description": "Filter callpark resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callPark` as the resource key (not `callpark`).\n          For example: `{ \"callPark\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter callpickupgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter callpickupgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter callpickupgroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `callPickupGroup` as the resource key (not `callpickupgroup`).\n          For example: `{ \"callPickupGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccaprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCCAProfiles AXL operation with dynamic parameter",
        "description": "Filter ccaprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCCAProfiles AXL operation with dynamic parameter",
        "description": "Filter ccaprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCCAProfiles AXL operation with dynamic parameter",
        "description": "Filter ccaprofiles resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `cCAProfiles` as the resource key (not `ccaprofiles`).\n          For example: `{ \"cCAProfiles\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter ccdadvertisingservice resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ccdAdvertisingService` as the resource key (not `ccdadvertisingservice`).\n          For example: `{ \"ccdAdvertisingService\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdfeatureconfig": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation",
        "description": "Returns all available ccdfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdFeatureConfig AXL operation",
        "description": "Execute updateCcdFeatureConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ccdFeatureConfig` as the resource key (not `ccdfeatureconfig`).\n        For example: `{ \"ccdFeatureConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ccdFeatureConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter ccdfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter ccdfeatureconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ccdFeatureConfig` as the resource key (not `ccdfeatureconfig`).\n          For example: `{ \"ccdFeatureConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddn/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddn resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddn resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddn resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ccdHostedDN` as the resource key (not `ccdhosteddn`).\n          For example: `{ \"ccdHostedDN\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddngroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ccdHostedDNGroup` as the resource key (not `ccdhosteddngroup`).\n          For example: `{ \"ccdHostedDNGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdrequestingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation with dynamic parameter",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCcdRequestingService AXL operation with dynamic parameter",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCcdRequestingService AXL operation with dynamic parameter",
        "description": "Filter ccdrequestingservice resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ccdRequestingService` as the resource key (not `ccdrequestingservice`).\n          For example: `{ \"ccdRequestingService\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccmversion": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation",
        "description": "Returns all available ccmversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccmversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation with dynamic parameter",
        "description": "Filter ccmversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000e1voipgateway resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ciscoCatalyst6000E1VoIPGateway` as the resource key (not `ciscocatalyst6000e1voipgateway`).\n          For example: `{ \"ciscoCatalyst6000E1VoIPGateway\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayPri` as the resource key (not `ciscocatalyst6000t1voipgatewaypri`).\n          For example: `{ \"ciscoCatalyst6000T1VoIPGatewayPri\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ciscoCatalyst6000T1VoIPGatewayT1` as the resource key (not `ciscocatalyst6000t1voipgatewayt1`).\n          For example: `{ \"ciscoCatalyst6000T1VoIPGatewayT1\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst600024portfxsgateway resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ciscoCatalyst600024PortFXSGateway` as the resource key (not `ciscocatalyst600024portfxsgateway`).\n          For example: `{ \"ciscoCatalyst600024PortFXSGateway\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCmcInfo AXL operation with dynamic parameter",
        "description": "Filter cmcinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCmcInfo AXL operation with dynamic parameter",
        "description": "Filter cmcinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCmcInfo AXL operation with dynamic parameter",
        "description": "Filter cmcinfo resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `cmcInfo` as the resource key (not `cmcinfo`).\n          For example: `{ \"cmcInfo\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter commondeviceconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter commondeviceconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter commondeviceconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `commonDeviceConfig` as the resource key (not `commondeviceconfig`).\n          For example: `{ \"commonDeviceConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter commonphoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter commonphoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter commonphoneconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `commonPhoneConfig` as the resource key (not `commonphoneconfig`).\n          For example: `{ \"commonPhoneConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridge/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter conferencebridge resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter conferencebridge resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter conferencebridge resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `conferenceBridge` as the resource key (not `conferencebridge`).\n          For example: `{ \"conferenceBridge\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenow/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceNow AXL operation with dynamic parameter",
        "description": "Filter conferencenow resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeConferenceNow AXL operation with dynamic parameter",
        "description": "Filter conferencenow resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateConferenceNow AXL operation with dynamic parameter",
        "description": "Filter conferencenow resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `conferenceNow` as the resource key (not `conferencenow`).\n          For example: `{ \"conferenceNow\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter credentialpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter credentialpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter credentialpolicy resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `credentialPolicy` as the resource key (not `credentialpolicy`).\n          For example: `{ \"credentialPolicy\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicydefault": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation",
        "description": "Returns all available credentialpolicydefault resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCredentialPolicyDefault AXL operation",
        "description": "Execute updateCredentialPolicyDefault AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `credentialPolicyDefault` as the resource key (not `credentialpolicydefault`).\n        For example: `{ \"credentialPolicyDefault\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "credentialPolicyDefault": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicydefault/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation with dynamic parameter",
        "description": "Filter credentialpolicydefault resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCredentialPolicyDefault AXL operation with dynamic parameter",
        "description": "Filter credentialpolicydefault resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `credentialPolicyDefault` as the resource key (not `credentialpolicydefault`).\n          For example: `{ \"credentialPolicyDefault\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/css/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCss AXL operation with dynamic parameter",
        "description": "Filter css resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCss AXL operation with dynamic parameter",
        "description": "Filter css resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCss AXL operation with dynamic parameter",
        "description": "Filter css resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `css` as the resource key (not `css`).\n          For example: `{ \"css\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoint/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter ctiroutepoint resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter ctiroutepoint resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter ctiroutepoint resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ctiRoutePoint` as the resource key (not `ctiroutepoint`).\n          For example: `{ \"ctiRoutePoint\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter cumaserversecurityprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `cumaServerSecurityProfile` as the resource key (not `cumaserversecurityprofile`).\n          For example: `{ \"cumaServerSecurityProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customer/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomer AXL operation with dynamic parameter",
        "description": "Filter customer resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCustomer AXL operation with dynamic parameter",
        "description": "Filter customer resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCustomer AXL operation with dynamic parameter",
        "description": "Filter customer resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `customer` as the resource key (not `customer`).\n          For example: `{ \"customer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomUserField AXL operation with dynamic parameter",
        "description": "Filter customuserfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeCustomUserField AXL operation with dynamic parameter",
        "description": "Filter customuserfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateCustomUserField AXL operation with dynamic parameter",
        "description": "Filter customuserfield resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `customUserField` as the resource key (not `customuserfield`).\n          For example: `{ \"customUserField\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter datetimegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter datetimegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter datetimegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `dateTimeGroup` as the resource key (not `datetimegroup`).\n          For example: `{ \"dateTimeGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddi": {
      "get": {
        "summary": "Execute getDdi AXL operation",
        "description": "Returns all available ddi resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddi/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDdi AXL operation with dynamic parameter",
        "description": "Filter ddi resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter defaultdeviceprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `defaultDeviceProfile` as the resource key (not `defaultdeviceprofile`).\n          For example: `{ \"defaultDeviceProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicedefaults": {
      "get": {
        "summary": "Execute listDeviceDefaults AXL operation",
        "description": "Returns all available devicedefaults resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceDefaults AXL operation",
        "description": "Execute updateDeviceDefaults AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `deviceDefaults` as the resource key (not `devicedefaults`).\n        For example: `{ \"deviceDefaults\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "deviceDefaults": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicedefaults/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDeviceDefaults AXL operation with dynamic parameter",
        "description": "Filter devicedefaults resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceDefaults AXL operation with dynamic parameter",
        "description": "Filter devicedefaults resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `deviceDefaults` as the resource key (not `devicedefaults`).\n          For example: `{ \"deviceDefaults\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter devicemobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter devicemobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter devicemobility resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `deviceMobility` as the resource key (not `devicemobility`).\n          For example: `{ \"deviceMobility\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter devicemobilitygroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `deviceMobilityGroup` as the resource key (not `devicemobilitygroup`).\n          For example: `{ \"deviceMobilityGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepool/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDevicePool AXL operation with dynamic parameter",
        "description": "Filter devicepool resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDevicePool AXL operation with dynamic parameter",
        "description": "Filter devicepool resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDevicePool AXL operation with dynamic parameter",
        "description": "Filter devicepool resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `devicePool` as the resource key (not `devicepool`).\n          For example: `{ \"devicePool\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter deviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter deviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter deviceprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `deviceProfile` as the resource key (not `deviceprofile`).\n          For example: `{ \"deviceProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofileoptions": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation",
        "description": "Returns all available deviceprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation with dynamic parameter",
        "description": "Filter deviceprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpServer AXL operation with dynamic parameter",
        "description": "Filter dhcpserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDhcpServer AXL operation with dynamic parameter",
        "description": "Filter dhcpserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDhcpServer AXL operation with dynamic parameter",
        "description": "Filter dhcpserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `dhcpServer` as the resource key (not `dhcpserver`).\n          For example: `{ \"dhcpServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnet/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter dhcpsubnet resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter dhcpsubnet resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter dhcpsubnet resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `dhcpSubnet` as the resource key (not `dhcpsubnet`).\n          For example: `{ \"dhcpSubnet\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplan": {
      "get": {
        "summary": "Execute getDialPlan AXL operation",
        "description": "Returns all available dialplan resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplan/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlan AXL operation with dynamic parameter",
        "description": "Filter dialplan resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantag": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation",
        "description": "Returns all available dialplantag resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantag/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation with dynamic parameter",
        "description": "Filter dialplantag resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter directedcallpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter directedcallpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter directedcallpark resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `directedCallPark` as the resource key (not `directedcallpark`).\n          For example: `{ \"directedCallPark\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directorylookupdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDirectoryLookupDialRules AXL operation with dynamic parameter",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirectoryLookupDialRules AXL operation with dynamic parameter",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirectoryLookupDialRules AXL operation with dynamic parameter",
        "description": "Filter directorylookupdialrules resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `directoryLookupDialRules` as the resource key (not `directorylookupdialrules`).\n          For example: `{ \"directoryLookupDialRules\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsync/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter dirnumberaliaslookupandsync resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `dirNumberAliasLookupandSync` as the resource key (not `dirnumberaliaslookupandsync`).\n          For example: `{ \"dirNumberAliasLookupandSync\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getElinGroup AXL operation with dynamic parameter",
        "description": "Filter elingroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeElinGroup AXL operation with dynamic parameter",
        "description": "Filter elingroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateElinGroup AXL operation with dynamic parameter",
        "description": "Filter elingroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `elinGroup` as the resource key (not `elingroup`).\n          For example: `{ \"elinGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/emccfeatureconfig": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation",
        "description": "Returns all available emccfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEmccFeatureConfig AXL operation",
        "description": "Execute updateEmccFeatureConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `emccFeatureConfig` as the resource key (not `emccfeatureconfig`).\n        For example: `{ \"emccFeatureConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "emccFeatureConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/emccfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter emccfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEmccFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter emccfeatureconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `emccFeatureConfig` as the resource key (not `emccfeatureconfig`).\n          For example: `{ \"emccFeatureConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter endusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter endusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter endusercapfprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `endUserCapfProfile` as the resource key (not `endusercapfprofile`).\n          For example: `{ \"endUserCapfProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter enterprisefeatureaccessconfiguration resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `enterpriseFeatureAccessConfiguration` as the resource key (not `enterprisefeatureaccessconfiguration`).\n          For example: `{ \"enterpriseFeatureAccessConfiguration\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisephoneconfig": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation",
        "description": "Returns all available enterprisephoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEnterprisePhoneConfig AXL operation",
        "description": "Execute updateEnterprisePhoneConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `enterprisePhoneConfig` as the resource key (not `enterprisephoneconfig`).\n        For example: `{ \"enterprisePhoneConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "enterprisePhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisephoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation with dynamic parameter",
        "description": "Filter enterprisephoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateEnterprisePhoneConfig AXL operation with dynamic parameter",
        "description": "Filter enterprisephoneconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `enterprisePhoneConfig` as the resource key (not `enterprisephoneconfig`).\n          For example: `{ \"enterprisePhoneConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter expresswaycconfiguration resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `expresswayCConfiguration` as the resource key (not `expresswaycconfiguration`).\n          For example: `{ \"expresswayCConfiguration\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter externalcallcontrolprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `externalCallControlProfile` as the resource key (not `externalcallcontrolprofile`).\n          For example: `{ \"externalCallControlProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFacInfo AXL operation with dynamic parameter",
        "description": "Filter facinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFacInfo AXL operation with dynamic parameter",
        "description": "Filter facinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFacInfo AXL operation with dynamic parameter",
        "description": "Filter facinfo resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `facInfo` as the resource key (not `facinfo`).\n          For example: `{ \"facInfo\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackfeatureconfig": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation",
        "description": "Returns all available fallbackfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFallbackFeatureConfig AXL operation",
        "description": "Execute updateFallbackFeatureConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `fallbackFeatureConfig` as the resource key (not `fallbackfeatureconfig`).\n        For example: `{ \"fallbackFeatureConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "fallbackFeatureConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter fallbackfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFallbackFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter fallbackfeatureconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `fallbackFeatureConfig` as the resource key (not `fallbackfeatureconfig`).\n          For example: `{ \"fallbackFeatureConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter fallbackprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter fallbackprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter fallbackprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `fallbackProfile` as the resource key (not `fallbackprofile`).\n          For example: `{ \"fallbackProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter featurecontrolpolicy resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `featureControlPolicy` as the resource key (not `featurecontrolpolicy`).\n          For example: `{ \"featureControlPolicy\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter featuregrouptemplate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `featureGroupTemplate` as the resource key (not `featuregrouptemplate`).\n          For example: `{ \"featureGroupTemplate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fixedmohaudiosource": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation",
        "description": "Returns all available fixedmohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFixedMohAudioSource AXL operation",
        "description": "Execute updateFixedMohAudioSource AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `fixedMohAudioSource` as the resource key (not `fixedmohaudiosource`).\n        For example: `{ \"fixedMohAudioSource\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "fixedMohAudioSource": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fixedmohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter fixedmohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateFixedMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter fixedmohaudiosource resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `fixedMohAudioSource` as the resource key (not `fixedmohaudiosource`).\n          For example: `{ \"fixedMohAudioSource\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeeper/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatekeeper AXL operation with dynamic parameter",
        "description": "Filter gatekeeper resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatekeeper AXL operation with dynamic parameter",
        "description": "Filter gatekeeper resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatekeeper AXL operation with dynamic parameter",
        "description": "Filter gatekeeper resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatekeeper` as the resource key (not `gatekeeper`).\n          For example: `{ \"gatekeeper\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGateway AXL operation with dynamic parameter",
        "description": "Filter gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGateway AXL operation with dynamic parameter",
        "description": "Filter gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGateway AXL operation with dynamic parameter",
        "description": "Filter gateway resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gateway` as the resource key (not `gateway`).\n          For example: `{ \"gateway\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointanalogaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointAnalogAccess AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointAnalogAccess AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointanalogaccess resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatewayEndpointAnalogAccess` as the resource key (not `gatewayendpointanalogaccess`).\n          For example: `{ \"gatewayEndpointAnalogAccess\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccessbri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessBri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessBri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccessbri resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatewayEndpointDigitalAccessBri` as the resource key (not `gatewayendpointdigitalaccessbri`).\n          For example: `{ \"gatewayEndpointDigitalAccessBri\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesspri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessPri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessPri AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesspri resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatewayEndpointDigitalAccessPri` as the resource key (not `gatewayendpointdigitalaccesspri`).\n          For example: `{ \"gatewayEndpointDigitalAccessPri\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewayendpointdigitalaccesst1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewayEndpointDigitalAccessT1 AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewayEndpointDigitalAccessT1 AXL operation with dynamic parameter",
        "description": "Filter gatewayendpointdigitalaccesst1 resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatewayEndpointDigitalAccessT1` as the resource key (not `gatewayendpointdigitalaccesst1`).\n          For example: `{ \"gatewayEndpointDigitalAccessT1\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysccpendpoints/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation with dynamic parameter",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGatewaySccpEndpoints AXL operation with dynamic parameter",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGatewaySccpEndpoints AXL operation with dynamic parameter",
        "description": "Filter gatewaysccpendpoints resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `gatewaySccpEndpoints` as the resource key (not `gatewaysccpendpoints`).\n          For example: `{ \"gatewaySccpEndpoints\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocation AXL operation with dynamic parameter",
        "description": "Filter geolocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocation AXL operation with dynamic parameter",
        "description": "Filter geolocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocation AXL operation with dynamic parameter",
        "description": "Filter geolocation resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `geoLocation` as the resource key (not `geolocation`).\n          For example: `{ \"geoLocation\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter geolocationfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter geolocationfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter geolocationfilter resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `geoLocationFilter` as the resource key (not `geolocationfilter`).\n          For example: `{ \"geoLocationFilter\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter geolocationpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter geolocationpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter geolocationpolicy resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `geoLocationPolicy` as the resource key (not `geolocationpolicy`).\n          For example: `{ \"geoLocationPolicy\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Gateway AXL operation with dynamic parameter",
        "description": "Filter h323gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Gateway AXL operation with dynamic parameter",
        "description": "Filter h323gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Gateway AXL operation with dynamic parameter",
        "description": "Filter h323gateway resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `h323Gateway` as the resource key (not `h323gateway`).\n          For example: `{ \"h323Gateway\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Phone AXL operation with dynamic parameter",
        "description": "Filter h323phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Phone AXL operation with dynamic parameter",
        "description": "Filter h323phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Phone AXL operation with dynamic parameter",
        "description": "Filter h323phone resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `h323Phone` as the resource key (not `h323phone`).\n          For example: `{ \"h323Phone\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Trunk AXL operation with dynamic parameter",
        "description": "Filter h323trunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeH323Trunk AXL operation with dynamic parameter",
        "description": "Filter h323trunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateH323Trunk AXL operation with dynamic parameter",
        "description": "Filter h323trunk resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `h323Trunk` as the resource key (not `h323trunk`).\n          For example: `{ \"h323Trunk\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/handoffconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation with dynamic parameter",
        "description": "Filter handoffconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHandoffConfiguration AXL operation with dynamic parameter",
        "description": "Filter handoffconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHandoffConfiguration AXL operation with dynamic parameter",
        "description": "Filter handoffconfiguration resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `handoffConfiguration` as the resource key (not `handoffconfiguration`).\n          For example: `{ \"handoffConfiguration\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/httpprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHttpProfile AXL operation with dynamic parameter",
        "description": "Filter httpprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHttpProfile AXL operation with dynamic parameter",
        "description": "Filter httpprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHttpProfile AXL operation with dynamic parameter",
        "description": "Filter httpprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `httpProfile` as the resource key (not `httpprofile`).\n          For example: `{ \"httpProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntList AXL operation with dynamic parameter",
        "description": "Filter huntlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHuntList AXL operation with dynamic parameter",
        "description": "Filter huntlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHuntList AXL operation with dynamic parameter",
        "description": "Filter huntlist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `huntList` as the resource key (not `huntlist`).\n          For example: `{ \"huntList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntPilot AXL operation with dynamic parameter",
        "description": "Filter huntpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeHuntPilot AXL operation with dynamic parameter",
        "description": "Filter huntpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateHuntPilot AXL operation with dynamic parameter",
        "description": "Filter huntpilot resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `huntPilot` as the resource key (not `huntpilot`).\n          For example: `{ \"huntPilot\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ilsconfig": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation",
        "description": "Returns all available ilsconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIlsConfig AXL operation",
        "description": "Execute updateIlsConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ilsConfig` as the resource key (not `ilsconfig`).\n        For example: `{ \"ilsConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ilsConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ilsconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation with dynamic parameter",
        "description": "Filter ilsconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIlsConfig AXL operation with dynamic parameter",
        "description": "Filter ilsconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ilsConfig` as the resource key (not `ilsconfig`).\n          For example: `{ \"ilsConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclient/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeClient AXL operation with dynamic parameter",
        "description": "Filter imeclient resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeClient AXL operation with dynamic parameter",
        "description": "Filter imeclient resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeClient AXL operation with dynamic parameter",
        "description": "Filter imeclient resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeClient` as the resource key (not `imeclient`).\n          For example: `{ \"imeClient\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter imee164transformation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter imee164transformation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter imee164transformation resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeE164Transformation` as the resource key (not `imee164transformation`).\n          For example: `{ \"imeE164Transformation\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeEnrolledPattern` as the resource key (not `imeenrolledpattern`).\n          For example: `{ \"imeEnrolledPattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpatterngroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeEnrolledPatternGroup` as the resource key (not `imeenrolledpatterngroup`).\n          For example: `{ \"imeEnrolledPatternGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumber/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumber resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeExclusionNumber` as the resource key (not `imeexclusionnumber`).\n          For example: `{ \"imeExclusionNumber\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumbergroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeExclusionNumberGroup` as the resource key (not `imeexclusionnumbergroup`).\n          For example: `{ \"imeExclusionNumberGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefeatureconfig": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation",
        "description": "Returns all available imefeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeFeatureConfig AXL operation",
        "description": "Execute updateImeFeatureConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeFeatureConfig` as the resource key (not `imefeatureconfig`).\n        For example: `{ \"imeFeatureConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeFeatureConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter imefeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter imefeatureconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeFeatureConfig` as the resource key (not `imefeatureconfig`).\n          For example: `{ \"imeFeatureConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewall/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFirewall AXL operation with dynamic parameter",
        "description": "Filter imefirewall resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeFirewall AXL operation with dynamic parameter",
        "description": "Filter imefirewall resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeFirewall AXL operation with dynamic parameter",
        "description": "Filter imefirewall resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeFirewall` as the resource key (not `imefirewall`).\n          For example: `{ \"imeFirewall\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imelearnedroutes": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation",
        "description": "Returns all available imelearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeLearnedRoutes AXL operation",
        "description": "Execute removeImeLearnedRoutes AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeLearnedRoutes AXL operation",
        "description": "Execute updateImeLearnedRoutes AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `imeLearnedRoutes` as the resource key (not `imelearnedroutes`).\n        For example: `{ \"imeLearnedRoutes\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "imeLearnedRoutes": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imelearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter imelearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter imelearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter imelearnedroutes resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeLearnedRoutes` as the resource key (not `imelearnedroutes`).\n          For example: `{ \"imeLearnedRoutes\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter imeroutefilterelement resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeRouteFilterElement` as the resource key (not `imeroutefilterelement`).\n          For example: `{ \"imeRouteFilterElement\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter imeroutefiltergroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeRouteFilterGroup` as the resource key (not `imeroutefiltergroup`).\n          For example: `{ \"imeRouteFilterGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeServer AXL operation with dynamic parameter",
        "description": "Filter imeserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImeServer AXL operation with dynamic parameter",
        "description": "Filter imeserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImeServer AXL operation with dynamic parameter",
        "description": "Filter imeserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `imeServer` as the resource key (not `imeserver`).\n          For example: `{ \"imeServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/importeddirectoryuricatalogs/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImportedDirectoryUriCatalogs AXL operation with dynamic parameter",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeImportedDirectoryUriCatalogs AXL operation with dynamic parameter",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateImportedDirectoryUriCatalogs AXL operation with dynamic parameter",
        "description": "Filter importeddirectoryuricatalogs resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `importedDirectoryUriCatalogs` as the resource key (not `importeddirectoryuricatalogs`).\n          For example: `{ \"importedDirectoryUriCatalogs\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter infrastructuredevice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter infrastructuredevice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter infrastructuredevice resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `infrastructureDevice` as the resource key (not `infrastructuredevice`).\n          For example: `{ \"infrastructureDevice\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponse": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation",
        "description": "Returns all available interactivevoiceresponse resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInteractiveVoiceResponse AXL operation",
        "description": "Execute updateInteractiveVoiceResponse AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `interactiveVoiceResponse` as the resource key (not `interactivevoiceresponse`).\n        For example: `{ \"interactiveVoiceResponse\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "interactiveVoiceResponse": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponse/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation with dynamic parameter",
        "description": "Filter interactivevoiceresponse resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInteractiveVoiceResponse AXL operation with dynamic parameter",
        "description": "Filter interactivevoiceresponse resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `interactiveVoiceResponse` as the resource key (not `interactivevoiceresponse`).\n          For example: `{ \"interactiveVoiceResponse\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterserviceprofile": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation",
        "description": "Returns all available interclusterserviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInterClusterServiceProfile AXL operation",
        "description": "Execute updateInterClusterServiceProfile AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `interClusterServiceProfile` as the resource key (not `interclusterserviceprofile`).\n        For example: `{ \"interClusterServiceProfile\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "interClusterServiceProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterserviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation with dynamic parameter",
        "description": "Filter interclusterserviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateInterClusterServiceProfile AXL operation with dynamic parameter",
        "description": "Filter interclusterserviceprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `interClusterServiceProfile` as the resource key (not `interclusterserviceprofile`).\n          For example: `{ \"interClusterServiceProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ipphoneservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listIpPhoneServices AXL operation with dynamic parameter",
        "description": "Filter ipphoneservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeIpPhoneServices AXL operation with dynamic parameter",
        "description": "Filter ipphoneservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIpPhoneServices AXL operation with dynamic parameter",
        "description": "Filter ipphoneservices resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ipPhoneServices` as the resource key (not `ipphoneservices`).\n          For example: `{ \"ipPhoneServices\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocale/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter ivruserlocale resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter ivruserlocale resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter ivruserlocale resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ivrUserLocale` as the resource key (not `ivruserlocale`).\n          For example: `{ \"ivrUserLocale\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmGroup AXL operation with dynamic parameter",
        "description": "Filter lbmgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLbmGroup AXL operation with dynamic parameter",
        "description": "Filter lbmgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLbmGroup AXL operation with dynamic parameter",
        "description": "Filter lbmgroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `lbmGroup` as the resource key (not `lbmgroup`).\n          For example: `{ \"lbmGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter lbmhubgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter lbmhubgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter lbmhubgroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `lbmHubGroup` as the resource key (not `lbmhubgroup`).\n          For example: `{ \"lbmHubGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapauthentication": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation",
        "description": "Returns all available ldapauthentication resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapAuthentication AXL operation",
        "description": "Execute updateLdapAuthentication AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapAuthentication` as the resource key (not `ldapauthentication`).\n        For example: `{ \"ldapAuthentication\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapAuthentication": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapauthentication/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation with dynamic parameter",
        "description": "Filter ldapauthentication resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapAuthentication AXL operation with dynamic parameter",
        "description": "Filter ldapauthentication resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapAuthentication` as the resource key (not `ldapauthentication`).\n          For example: `{ \"ldapAuthentication\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectory/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter ldapdirectory resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter ldapdirectory resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter ldapdirectory resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapDirectory` as the resource key (not `ldapdirectory`).\n          For example: `{ \"ldapDirectory\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapFilter AXL operation with dynamic parameter",
        "description": "Filter ldapfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapFilter AXL operation with dynamic parameter",
        "description": "Filter ldapfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapFilter AXL operation with dynamic parameter",
        "description": "Filter ldapfilter resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapFilter` as the resource key (not `ldapfilter`).\n          For example: `{ \"ldapFilter\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearch": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation",
        "description": "Returns all available ldapsearch resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSearch AXL operation",
        "description": "Execute updateLdapSearch AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapSearch` as the resource key (not `ldapsearch`).\n        For example: `{ \"ldapSearch\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapSearch": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearch/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation with dynamic parameter",
        "description": "Filter ldapsearch resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSearch AXL operation with dynamic parameter",
        "description": "Filter ldapsearch resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapSearch` as the resource key (not `ldapsearch`).\n          For example: `{ \"ldapSearch\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter ldapsynccustomfield resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapSyncCustomField` as the resource key (not `ldapsynccustomfield`).\n          For example: `{ \"ldapSyncCustomField\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsyncstatus": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation",
        "description": "Returns all available ldapsyncstatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsyncstatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation with dynamic parameter",
        "description": "Filter ldapsyncstatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsystem": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation",
        "description": "Returns all available ldapsystem resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSystem AXL operation",
        "description": "Execute updateLdapSystem AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ldapSystem` as the resource key (not `ldapsystem`).\n        For example: `{ \"ldapSystem\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ldapSystem": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsystem/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation with dynamic parameter",
        "description": "Filter ldapsystem resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLdapSystem AXL operation with dynamic parameter",
        "description": "Filter ldapsystem resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ldapSystem` as the resource key (not `ldapsystem`).\n          For example: `{ \"ldapSystem\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licenseduser": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation",
        "description": "Returns all available licenseduser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licenseduser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation with dynamic parameter",
        "description": "Filter licenseduser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/line/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLine AXL operation with dynamic parameter",
        "description": "Filter line resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLine AXL operation with dynamic parameter",
        "description": "Filter line resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLine AXL operation with dynamic parameter",
        "description": "Filter line resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `line` as the resource key (not `line`).\n          For example: `{ \"line\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineGroup AXL operation with dynamic parameter",
        "description": "Filter linegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLineGroup AXL operation with dynamic parameter",
        "description": "Filter linegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLineGroup AXL operation with dynamic parameter",
        "description": "Filter linegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `lineGroup` as the resource key (not `linegroup`).\n          For example: `{ \"lineGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lineoptions": {
      "get": {
        "summary": "Execute getLineOptions AXL operation",
        "description": "Returns all available lineoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lineoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineOptions AXL operation with dynamic parameter",
        "description": "Filter lineoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter localroutegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter localroutegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter localroutegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `localRouteGroup` as the resource key (not `localroutegroup`).\n          For example: `{ \"localRouteGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/location/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocation AXL operation with dynamic parameter",
        "description": "Filter location resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeLocation AXL operation with dynamic parameter",
        "description": "Filter location resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateLocation AXL operation with dynamic parameter",
        "description": "Filter location resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `location` as the resource key (not `location`).\n          For example: `{ \"location\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter mediaresourcegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mediaResourceGroup` as the resource key (not `mediaresourcegroup`).\n          For example: `{ \"mediaResourceGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter mediaresourcelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter mediaresourcelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter mediaresourcelist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mediaResourceList` as the resource key (not `mediaresourcelist`).\n          For example: `{ \"mediaResourceList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetme/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMeetMe AXL operation with dynamic parameter",
        "description": "Filter meetme resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMeetMe AXL operation with dynamic parameter",
        "description": "Filter meetme resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMeetMe AXL operation with dynamic parameter",
        "description": "Filter meetme resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `meetMe` as the resource key (not `meetme`).\n          For example: `{ \"meetMe\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaiting/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter messagewaiting resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter messagewaiting resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter messagewaiting resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `messageWaiting` as the resource key (not `messagewaiting`).\n          For example: `{ \"messageWaiting\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMlppDomain AXL operation with dynamic parameter",
        "description": "Filter mlppdomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMlppDomain AXL operation with dynamic parameter",
        "description": "Filter mlppdomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMlppDomain AXL operation with dynamic parameter",
        "description": "Filter mlppdomain resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mlppDomain` as the resource key (not `mlppdomain`).\n          For example: `{ \"mlppDomain\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofile": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation",
        "description": "Returns all available mobilesmartclientprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation with dynamic parameter",
        "description": "Filter mobilesmartclientprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilevoiceaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation with dynamic parameter",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMobileVoiceAccess AXL operation with dynamic parameter",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobileVoiceAccess AXL operation with dynamic parameter",
        "description": "Filter mobilevoiceaccess resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mobileVoiceAccess` as the resource key (not `mobilevoiceaccess`).\n          For example: `{ \"mobileVoiceAccess\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobility AXL operation with dynamic parameter",
        "description": "Filter mobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobility AXL operation with dynamic parameter",
        "description": "Filter mobility resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mobility` as the resource key (not `mobility`).\n          For example: `{ \"mobility\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter mobilityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter mobilityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter mobilityprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mobilityProfile` as the resource key (not `mobilityprofile`).\n          For example: `{ \"mobilityProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosource": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation",
        "description": "Returns all available mohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMohAudioSource AXL operation",
        "description": "Execute removeMohAudioSource AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mohAudioSource": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMohAudioSource AXL operation",
        "description": "Execute updateMohAudioSource AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mohAudioSource` as the resource key (not `mohaudiosource`).\n        For example: `{ \"mohAudioSource\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mohAudioSource": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter mohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter mohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter mohaudiosource resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mohAudioSource` as the resource key (not `mohaudiosource`).\n          For example: `{ \"mohAudioSource\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohserver": {
      "get": {
        "summary": "Execute getMohServer AXL operation",
        "description": "Returns all available mohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMohServer AXL operation",
        "description": "Execute updateMohServer AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `mohServer` as the resource key (not `mohserver`).\n        For example: `{ \"mohServer\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "mohServer": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohServer AXL operation with dynamic parameter",
        "description": "Filter mohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMohServer AXL operation with dynamic parameter",
        "description": "Filter mohserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mohServer` as the resource key (not `mohserver`).\n          For example: `{ \"mohServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter mraservicedomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter mraservicedomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter mraservicedomain resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mraServiceDomain` as the resource key (not `mraservicedomain`).\n          For example: `{ \"mraServiceDomain\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMtp AXL operation with dynamic parameter",
        "description": "Filter mtp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeMtp AXL operation with dynamic parameter",
        "description": "Filter mtp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateMtp AXL operation with dynamic parameter",
        "description": "Filter mtp resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `mtp` as the resource key (not `mtp`).\n          For example: `{ \"mtp\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter networkaccessprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter networkaccessprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter networkaccessprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `networkAccessProfile` as the resource key (not `networkaccessprofile`).\n          For example: `{ \"networkAccessProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/numdevices": {
      "get": {
        "summary": "Execute getNumDevices AXL operation",
        "description": "Returns all available numdevices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/numdevices/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNumDevices AXL operation with dynamic parameter",
        "description": "Filter numdevices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/osversion": {
      "get": {
        "summary": "Execute getOSVersion AXL operation",
        "description": "Returns all available osversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/osversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getOSVersion AXL operation with dynamic parameter",
        "description": "Filter osversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/pagelayoutpreferences": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation",
        "description": "Returns all available pagelayoutpreferences resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePageLayoutPreferences AXL operation",
        "description": "Execute updatePageLayoutPreferences AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `pageLayoutPreferences` as the resource key (not `pagelayoutpreferences`).\n        For example: `{ \"pageLayoutPreferences\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "pageLayoutPreferences": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/pagelayoutpreferences/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation with dynamic parameter",
        "description": "Filter pagelayoutpreferences resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePageLayoutPreferences AXL operation with dynamic parameter",
        "description": "Filter pagelayoutpreferences resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `pageLayoutPreferences` as the resource key (not `pagelayoutpreferences`).\n          For example: `{ \"pageLayoutPreferences\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhone AXL operation with dynamic parameter",
        "description": "Filter phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhone AXL operation with dynamic parameter",
        "description": "Filter phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhone AXL operation with dynamic parameter",
        "description": "Filter phone resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `phone` as the resource key (not `phone`).\n          For example: `{ \"phone\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter phonebuttontemplate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `phoneButtonTemplate` as the resource key (not `phonebuttontemplate`).\n          For example: `{ \"phoneButtonTemplate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneNtp AXL operation with dynamic parameter",
        "description": "Filter phonentp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneNtp AXL operation with dynamic parameter",
        "description": "Filter phonentp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneNtp AXL operation with dynamic parameter",
        "description": "Filter phonentp resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `phoneNtp` as the resource key (not `phonentp`).\n          For example: `{ \"phoneNtp\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneoptions": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation",
        "description": "Returns all available phoneoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation with dynamic parameter",
        "description": "Filter phoneoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter phonesecurityprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `phoneSecurityProfile` as the resource key (not `phonesecurityprofile`).\n          For example: `{ \"phoneSecurityProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonetypedisplayinstance": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation",
        "description": "Returns all available phonetypedisplayinstance resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonetypedisplayinstance/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation with dynamic parameter",
        "description": "Filter phonetypedisplayinstance resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter physicallocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter physicallocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter physicallocation resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `physicalLocation` as the resource key (not `physicallocation`).\n          For example: `{ \"physicalLocation\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceGroup AXL operation with dynamic parameter",
        "description": "Filter presencegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePresenceGroup AXL operation with dynamic parameter",
        "description": "Filter presencegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePresenceGroup AXL operation with dynamic parameter",
        "description": "Filter presencegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `presenceGroup` as the resource key (not `presencegroup`).\n          For example: `{ \"presenceGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removePresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updatePresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter presenceredundancygroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `presenceRedundancyGroup` as the resource key (not `presenceredundancygroup`).\n          For example: `{ \"presenceRedundancyGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnode/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNode AXL operation with dynamic parameter",
        "description": "Filter processnode resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeProcessNode AXL operation with dynamic parameter",
        "description": "Filter processnode resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateProcessNode AXL operation with dynamic parameter",
        "description": "Filter processnode resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `processNode` as the resource key (not `processnode`).\n          For example: `{ \"processNode\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservice": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation",
        "description": "Returns all available processnodeservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateProcessNodeService AXL operation",
        "description": "Execute updateProcessNodeService AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `processNodeService` as the resource key (not `processnodeservice`).\n        For example: `{ \"processNodeService\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "processNodeService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation with dynamic parameter",
        "description": "Filter processnodeservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateProcessNodeService AXL operation with dynamic parameter",
        "description": "Filter processnodeservice resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `processNodeService` as the resource key (not `processnodeservice`).\n          For example: `{ \"processNodeService\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter recordingprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter recordingprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter recordingprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `recordingProfile` as the resource key (not `recordingprofile`).\n          For example: `{ \"recordingProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/region/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegion AXL operation with dynamic parameter",
        "description": "Filter region resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRegion AXL operation with dynamic parameter",
        "description": "Filter region resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRegion AXL operation with dynamic parameter",
        "description": "Filter region resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `region` as the resource key (not `region`).\n          For example: `{ \"region\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamic": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation",
        "description": "Returns all available registrationdynamic resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamic/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation with dynamic parameter",
        "description": "Filter registrationdynamic resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotecluster/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter remotecluster resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter remotecluster resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter remotecluster resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `remoteCluster` as the resource key (not `remotecluster`).\n          For example: `{ \"remoteCluster\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestination/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter remotedestination resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter remotedestination resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter remotedestination resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `remoteDestination` as the resource key (not `remotedestination`).\n          For example: `{ \"remoteDestination\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter remotedestinationprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `remoteDestinationProfile` as the resource key (not `remotedestinationprofile`).\n          For example: `{ \"remoteDestinationProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespace/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespace resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `resourcePriorityNamespace` as the resource key (not `resourceprioritynamespace`).\n          For example: `{ \"resourcePriorityNamespace\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespacelist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `resourcePriorityNamespaceList` as the resource key (not `resourceprioritynamespacelist`).\n          For example: `{ \"resourcePriorityNamespaceList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteFilter AXL operation with dynamic parameter",
        "description": "Filter routefilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteFilter AXL operation with dynamic parameter",
        "description": "Filter routefilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteFilter AXL operation with dynamic parameter",
        "description": "Filter routefilter resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routeFilter` as the resource key (not `routefilter`).\n          For example: `{ \"routeFilter\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteGroup AXL operation with dynamic parameter",
        "description": "Filter routegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteGroup AXL operation with dynamic parameter",
        "description": "Filter routegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteGroup AXL operation with dynamic parameter",
        "description": "Filter routegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routeGroup` as the resource key (not `routegroup`).\n          For example: `{ \"routeGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteList AXL operation with dynamic parameter",
        "description": "Filter routelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRouteList AXL operation with dynamic parameter",
        "description": "Filter routelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRouteList AXL operation with dynamic parameter",
        "description": "Filter routelist resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routeList` as the resource key (not `routelist`).\n          For example: `{ \"routeList\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartition/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePartition AXL operation with dynamic parameter",
        "description": "Filter routepartition resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRoutePartition AXL operation with dynamic parameter",
        "description": "Filter routepartition resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRoutePartition AXL operation with dynamic parameter",
        "description": "Filter routepartition resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routePartition` as the resource key (not `routepartition`).\n          For example: `{ \"routePartition\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePattern AXL operation with dynamic parameter",
        "description": "Filter routepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeRoutePattern AXL operation with dynamic parameter",
        "description": "Filter routepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateRoutePattern AXL operation with dynamic parameter",
        "description": "Filter routepattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routePattern` as the resource key (not `routepattern`).\n          For example: `{ \"routePattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safccdpurgeblocklearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSafCcdPurgeBlockLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafCcdPurgeBlockLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafCcdPurgeBlockLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter safccdpurgeblocklearnedroutes resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `safCcdPurgeBlockLearnedRoutes` as the resource key (not `safccdpurgeblocklearnedroutes`).\n          For example: `{ \"safCcdPurgeBlockLearnedRoutes\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafForwarder AXL operation with dynamic parameter",
        "description": "Filter safforwarder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafForwarder AXL operation with dynamic parameter",
        "description": "Filter safforwarder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafForwarder AXL operation with dynamic parameter",
        "description": "Filter safforwarder resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `safForwarder` as the resource key (not `safforwarder`).\n          For example: `{ \"safForwarder\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter safsecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter safsecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter safsecurityprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `safSecurityProfile` as the resource key (not `safsecurityprofile`).\n          For example: `{ \"safSecurityProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter sdptransparencyprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sdpTransparencyProfile` as the resource key (not `sdptransparencyprofile`).\n          For example: `{ \"sdpTransparencyProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/secureconfig": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation",
        "description": "Returns all available secureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSecureConfig AXL operation",
        "description": "Execute updateSecureConfig AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `secureConfig` as the resource key (not `secureconfig`).\n        For example: `{ \"secureConfig\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "secureConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/secureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation with dynamic parameter",
        "description": "Filter secureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSecureConfig AXL operation with dynamic parameter",
        "description": "Filter secureconfig resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `secureConfig` as the resource key (not `secureconfig`).\n          For example: `{ \"secureConfig\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameter": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation",
        "description": "Returns all available serviceparameter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateServiceParameter AXL operation",
        "description": "Execute updateServiceParameter AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `serviceParameter` as the resource key (not `serviceparameter`).\n        For example: `{ \"serviceParameter\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "serviceParameter": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation with dynamic parameter",
        "description": "Filter serviceparameter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateServiceParameter AXL operation with dynamic parameter",
        "description": "Filter serviceparameter resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `serviceParameter` as the resource key (not `serviceparameter`).\n          For example: `{ \"serviceParameter\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceProfile AXL operation with dynamic parameter",
        "description": "Filter serviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeServiceProfile AXL operation with dynamic parameter",
        "description": "Filter serviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateServiceProfile AXL operation with dynamic parameter",
        "description": "Filter serviceprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `serviceProfile` as the resource key (not `serviceprofile`).\n          For example: `{ \"serviceProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipDialRules AXL operation with dynamic parameter",
        "description": "Filter sipdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipDialRules AXL operation with dynamic parameter",
        "description": "Filter sipdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipDialRules AXL operation with dynamic parameter",
        "description": "Filter sipdialrules resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipDialRules` as the resource key (not `sipdialrules`).\n          For example: `{ \"sipDialRules\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscript/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter sipnormalizationscript resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sIPNormalizationScript` as the resource key (not `sipnormalizationscript`).\n          For example: `{ \"sIPNormalizationScript\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfile AXL operation with dynamic parameter",
        "description": "Filter sipprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipProfile AXL operation with dynamic parameter",
        "description": "Filter sipprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipProfile AXL operation with dynamic parameter",
        "description": "Filter sipprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipProfile` as the resource key (not `sipprofile`).\n          For example: `{ \"sipProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofileoptions": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation",
        "description": "Returns all available sipprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation with dynamic parameter",
        "description": "Filter sipprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealm/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRealm AXL operation with dynamic parameter",
        "description": "Filter siprealm resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipRealm AXL operation with dynamic parameter",
        "description": "Filter siprealm resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipRealm AXL operation with dynamic parameter",
        "description": "Filter siprealm resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipRealm` as the resource key (not `siprealm`).\n          For example: `{ \"sipRealm\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter siproutepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter siproutepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter siproutepattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipRoutePattern` as the resource key (not `siproutepattern`).\n          For example: `{ \"sipRoutePattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunk AXL operation with dynamic parameter",
        "description": "Filter siptrunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipTrunk AXL operation with dynamic parameter",
        "description": "Filter siptrunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipTrunk AXL operation with dynamic parameter",
        "description": "Filter siptrunk resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipTrunk` as the resource key (not `siptrunk`).\n          For example: `{ \"sipTrunk\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter siptrunksecurityprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sipTrunkSecurityProfile` as the resource key (not `siptrunksecurityprofile`).\n          For example: `{ \"sipTrunkSecurityProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/smartlicensestatus": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation",
        "description": "Returns all available smartlicensestatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/smartlicensestatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation with dynamic parameter",
        "description": "Filter smartlicensestatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpcommunitystring/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation with dynamic parameter",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSNMPCommunityString AXL operation with dynamic parameter",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPCommunityString AXL operation with dynamic parameter",
        "description": "Filter snmpcommunitystring resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sNMPCommunityString` as the resource key (not `snmpcommunitystring`).\n          For example: `{ \"sNMPCommunityString\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpmib2list": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation",
        "description": "Returns all available snmpmib2list resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPMIB2List AXL operation",
        "description": "Execute updateSNMPMIB2List AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `sNMPMIB2List` as the resource key (not `snmpmib2list`).\n        For example: `{ \"sNMPMIB2List\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "sNMPMIB2List": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpmib2list/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation with dynamic parameter",
        "description": "Filter snmpmib2list resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPMIB2List AXL operation with dynamic parameter",
        "description": "Filter snmpmib2list resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sNMPMIB2List` as the resource key (not `snmpmib2list`).\n          For example: `{ \"sNMPMIB2List\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/snmpuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPUser AXL operation with dynamic parameter",
        "description": "Filter snmpuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSNMPUser AXL operation with dynamic parameter",
        "description": "Filter snmpuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSNMPUser AXL operation with dynamic parameter",
        "description": "Filter snmpuser resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `sNMPUser` as the resource key (not `snmpuser`).\n          For example: `{ \"sNMPUser\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeyset": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation",
        "description": "Returns all available softkeyset resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSoftKeySet AXL operation",
        "description": "Execute updateSoftKeySet AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `softKeySet` as the resource key (not `softkeyset`).\n        For example: `{ \"softKeySet\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "softKeySet": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeyset/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation with dynamic parameter",
        "description": "Filter softkeyset resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSoftKeySet AXL operation with dynamic parameter",
        "description": "Filter softkeyset resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `softKeySet` as the resource key (not `softkeyset`).\n          For example: `{ \"softKeySet\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter softkeytemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter softkeytemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter softkeytemplate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `softKeyTemplate` as the resource key (not `softkeytemplate`).\n          For example: `{ \"softKeyTemplate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srst/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSrst AXL operation with dynamic parameter",
        "description": "Filter srst resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeSrst AXL operation with dynamic parameter",
        "description": "Filter srst resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSrst AXL operation with dynamic parameter",
        "description": "Filter srst resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `srst` as the resource key (not `srst`).\n          For example: `{ \"srst\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/syslogconfiguration": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation",
        "description": "Returns all available syslogconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSyslogConfiguration AXL operation",
        "description": "Execute updateSyslogConfiguration AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `syslogConfiguration` as the resource key (not `syslogconfiguration`).\n        For example: `{ \"syslogConfiguration\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "syslogConfiguration": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/syslogconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation with dynamic parameter",
        "description": "Filter syslogconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateSyslogConfiguration AXL operation with dynamic parameter",
        "description": "Filter syslogconfiguration resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `syslogConfiguration` as the resource key (not `syslogconfiguration`).\n          For example: `{ \"syslogConfiguration\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiod/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimePeriod AXL operation with dynamic parameter",
        "description": "Filter timeperiod resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTimePeriod AXL operation with dynamic parameter",
        "description": "Filter timeperiod resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTimePeriod AXL operation with dynamic parameter",
        "description": "Filter timeperiod resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `timePeriod` as the resource key (not `timeperiod`).\n          For example: `{ \"timePeriod\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedule/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter timeschedule resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter timeschedule resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter timeschedule resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `timeSchedule` as the resource key (not `timeschedule`).\n          For example: `{ \"timeSchedule\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/todaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTodAccess AXL operation with dynamic parameter",
        "description": "Filter todaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTodAccess AXL operation with dynamic parameter",
        "description": "Filter todaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTodAccess AXL operation with dynamic parameter",
        "description": "Filter todaccess resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `todAccess` as the resource key (not `todaccess`).\n          For example: `{ \"todAccess\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTranscoder AXL operation with dynamic parameter",
        "description": "Filter transcoder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTranscoder AXL operation with dynamic parameter",
        "description": "Filter transcoder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTranscoder AXL operation with dynamic parameter",
        "description": "Filter transcoder resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `transcoder` as the resource key (not `transcoder`).\n          For example: `{ \"transcoder\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter transformationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter transformationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter transformationprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `transformationProfile` as the resource key (not `transformationprofile`).\n          For example: `{ \"transformationProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPattern AXL operation with dynamic parameter",
        "description": "Filter transpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeTransPattern AXL operation with dynamic parameter",
        "description": "Filter transpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTransPattern AXL operation with dynamic parameter",
        "description": "Filter transpattern resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `transPattern` as the resource key (not `transpattern`).\n          For example: `{ \"transPattern\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatternoptions": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation",
        "description": "Returns all available transpatternoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatternoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation with dynamic parameter",
        "description": "Filter transpatternoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transportsettings": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation",
        "description": "Returns all available transportsettings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transportsettings/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation with dynamic parameter",
        "description": "Filter transportsettings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificate": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation",
        "description": "Returns all available tvscertificate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTvsCertificate AXL operation",
        "description": "Execute updateTvsCertificate AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `tvsCertificate` as the resource key (not `tvscertificate`).\n        For example: `{ \"tvsCertificate\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "tvsCertificate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation with dynamic parameter",
        "description": "Filter tvscertificate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateTvsCertificate AXL operation with dynamic parameter",
        "description": "Filter tvscertificate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `tvsCertificate` as the resource key (not `tvscertificate`).\n          For example: `{ \"tvsCertificate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUcService AXL operation with dynamic parameter",
        "description": "Filter ucservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUcService AXL operation with dynamic parameter",
        "description": "Filter ucservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUcService AXL operation with dynamic parameter",
        "description": "Filter ucservice resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ucService` as the resource key (not `ucservice`).\n          For example: `{ \"ucService\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter universaldevicetemplate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `universalDeviceTemplate` as the resource key (not `universaldevicetemplate`).\n          For example: `{ \"universalDeviceTemplate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter universallinetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter universallinetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter universallinetemplate resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `universalLineTemplate` as the resource key (not `universallinetemplate`).\n          For example: `{ \"universalLineTemplate\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/user/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUser AXL operation with dynamic parameter",
        "description": "Filter user resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUser AXL operation with dynamic parameter",
        "description": "Filter user resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUser AXL operation with dynamic parameter",
        "description": "Filter user resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `user` as the resource key (not `user`).\n          For example: `{ \"user\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserGroup AXL operation with dynamic parameter",
        "description": "Filter usergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUserGroup AXL operation with dynamic parameter",
        "description": "Filter usergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUserGroup AXL operation with dynamic parameter",
        "description": "Filter usergroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `userGroup` as the resource key (not `usergroup`).\n          For example: `{ \"userGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovision/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter userprofileprovision resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter userprofileprovision resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter userprofileprovision resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `userProfileProvision` as the resource key (not `userprofileprovision`).\n          For example: `{ \"userProfileProvision\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vg224/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVg224 AXL operation with dynamic parameter",
        "description": "Filter vg224 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVg224 AXL operation with dynamic parameter",
        "description": "Filter vg224 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVg224 AXL operation with dynamic parameter",
        "description": "Filter vg224 resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `vg224` as the resource key (not `vg224`).\n          For example: `{ \"vg224\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVohServer AXL operation with dynamic parameter",
        "description": "Filter vohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVohServer AXL operation with dynamic parameter",
        "description": "Filter vohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVohServer AXL operation with dynamic parameter",
        "description": "Filter vohserver resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `vohServer` as the resource key (not `vohserver`).\n          For example: `{ \"vohServer\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter voicemailpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter voicemailpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter voicemailpilot resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `voiceMailPilot` as the resource key (not `voicemailpilot`).\n          For example: `{ \"voiceMailPilot\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailport/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter voicemailport resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter voicemailport resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter voicemailport resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `voiceMailPort` as the resource key (not `voicemailport`).\n          For example: `{ \"voiceMailPort\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter voicemailprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter voicemailprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter voicemailprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `voiceMailProfile` as the resource key (not `voicemailprofile`).\n          For example: `{ \"voiceMailProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGateway AXL operation with dynamic parameter",
        "description": "Filter vpngateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnGateway AXL operation with dynamic parameter",
        "description": "Filter vpngateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnGateway AXL operation with dynamic parameter",
        "description": "Filter vpngateway resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `vpnGateway` as the resource key (not `vpngateway`).\n          For example: `{ \"vpnGateway\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGroup AXL operation with dynamic parameter",
        "description": "Filter vpngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnGroup AXL operation with dynamic parameter",
        "description": "Filter vpngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnGroup AXL operation with dynamic parameter",
        "description": "Filter vpngroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `vpnGroup` as the resource key (not `vpngroup`).\n          For example: `{ \"vpnGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnProfile AXL operation with dynamic parameter",
        "description": "Filter vpnprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeVpnProfile AXL operation with dynamic parameter",
        "description": "Filter vpnprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateVpnProfile AXL operation with dynamic parameter",
        "description": "Filter vpnprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `vpnProfile` as the resource key (not `vpnprofile`).\n          For example: `{ \"vpnProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter wifihotspot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter wifihotspot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter wifihotspot resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `wifiHotspot` as the resource key (not `wifihotspot`).\n          For example: `{ \"wifiHotspot\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wirelessaccesspointcontrollers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listWirelessAccessPointControllers AXL operation with dynamic parameter",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWirelessAccessPointControllers AXL operation with dynamic parameter",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWirelessAccessPointControllers AXL operation with dynamic parameter",
        "description": "Filter wirelessaccesspointcontrollers resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `wirelessAccessPointControllers` as the resource key (not `wirelessaccesspointcontrollers`).\n          For example: `{ \"wirelessAccessPointControllers\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWLANProfile AXL operation with dynamic parameter",
        "description": "Filter wlanprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWLANProfile AXL operation with dynamic parameter",
        "description": "Filter wlanprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWLANProfile AXL operation with dynamic parameter",
        "description": "Filter wlanprofile resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `wLANProfile` as the resource key (not `wlanprofile`).\n          For example: `{ \"wLANProfile\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Execute removeWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Execute updateWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter wlanprofilegroup resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `wlanProfileGroup` as the resource key (not `wlanprofilegroup`).\n          For example: `{ \"wlanProfileGroup\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroups": {
      "get": {
        "summary": "Execute listAarGroup AXL operation",
        "description": "Returns all available aargroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAarGroup AXL operation with dynamic parameter",
        "description": "Filter aargroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcements": {
      "get": {
        "summary": "Execute listAnnouncement AXL operation",
        "description": "Returns all available announcements resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/announcements/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAnnouncement AXL operation with dynamic parameter",
        "description": "Filter announcements resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciators": {
      "get": {
        "summary": "Execute listAnnunciator AXL operation",
        "description": "Returns all available annunciators resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/annunciators/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAnnunciator AXL operation with dynamic parameter",
        "description": "Filter annunciators resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationservers": {
      "get": {
        "summary": "Execute listApplicationServer AXL operation",
        "description": "Returns all available applicationservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listApplicationServer AXL operation with dynamic parameter",
        "description": "Filter applicationservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofiles": {
      "get": {
        "summary": "Execute listApplicationUserCapfProfile AXL operation",
        "description": "Returns all available applicationusercapfprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationusercapfprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter applicationusercapfprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appusers": {
      "get": {
        "summary": "Execute listAppUser AXL operation",
        "description": "Returns all available appusers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/appusers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAppUser AXL operation with dynamic parameter",
        "description": "Filter appusers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceservers": {
      "get": {
        "summary": "Execute listAssignedPresenceServers AXL operation",
        "description": "Returns all available assignedpresenceservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAssignedPresenceServers AXL operation with dynamic parameter",
        "description": "Filter assignedpresenceservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceusers": {
      "get": {
        "summary": "Execute listAssignedPresenceUsers AXL operation",
        "description": "Returns all available assignedpresenceusers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/assignedpresenceusers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAssignedPresenceUsers AXL operation with dynamic parameter",
        "description": "Filter assignedpresenceusers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelists": {
      "get": {
        "summary": "Execute listAudioCodecPreferenceList AXL operation",
        "description": "Returns all available audiocodecpreferencelists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/audiocodecpreferencelists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter audiocodecpreferencelists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingservers": {
      "get": {
        "summary": "Execute listBillingServer AXL operation",
        "description": "Returns all available billingservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/billingservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listBillingServer AXL operation with dynamic parameter",
        "description": "Filter billingservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracings": {
      "get": {
        "summary": "Execute listCalledPartyTracing AXL operation",
        "description": "Returns all available calledpartytracings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracings/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCalledPartyTracing AXL operation with dynamic parameter",
        "description": "Filter calledpartytracings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpatterns": {
      "get": {
        "summary": "Execute listCalledPartyTransformationPattern AXL operation",
        "description": "Returns all available calledpartytransformationpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytransformationpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter calledpartytransformationpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlists": {
      "get": {
        "summary": "Execute listCallerFilterList AXL operation",
        "description": "Returns all available callerfilterlists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callerfilterlists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter callerfilterlists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpatterns": {
      "get": {
        "summary": "Execute listCallingPartyTransformationPattern AXL operation",
        "description": "Returns all available callingpartytransformationpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callingpartytransformationpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter callingpartytransformationpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagers": {
      "get": {
        "summary": "Execute listCallManager AXL operation",
        "description": "Returns all available callmanagers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallManager AXL operation with dynamic parameter",
        "description": "Filter callmanagers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroups": {
      "get": {
        "summary": "Execute listCallManagerGroup AXL operation",
        "description": "Returns all available callmanagergroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callmanagergroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter callmanagergroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callparks": {
      "get": {
        "summary": "Execute listCallPark AXL operation",
        "description": "Returns all available callparks resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callparks/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallPark AXL operation with dynamic parameter",
        "description": "Filter callparks resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroups": {
      "get": {
        "summary": "Execute listCallPickupGroup AXL operation",
        "description": "Returns all available callpickupgroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/callpickupgroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter callpickupgroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservices": {
      "get": {
        "summary": "Execute listCcdAdvertisingService AXL operation",
        "description": "Returns all available ccdadvertisingservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdadvertisingservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter ccdadvertisingservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddns": {
      "get": {
        "summary": "Execute listCcdHostedDN AXL operation",
        "description": "Returns all available ccdhosteddns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroups": {
      "get": {
        "summary": "Execute listCcdHostedDNGroup AXL operation",
        "description": "Returns all available ccdhosteddngroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ccdhosteddngroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter ccdhosteddngroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/changes": {
      "get": {
        "summary": "Execute listChange AXL operation",
        "description": "Returns all available changes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/changes/{parameter}/{value}": {
      "get": {
        "summary": "Execute listChange AXL operation with dynamic parameter",
        "description": "Filter changes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateways": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Returns all available ciscocatalyst6000e1voipgateways resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000e1voipgateways/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000e1voipgateways resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypris": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Returns all available ciscocatalyst6000t1voipgatewaypris resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewaypris/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewaypris resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1s": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Returns all available ciscocatalyst6000t1voipgatewayt1s resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst6000t1voipgatewayt1s/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst6000t1voipgatewayt1s resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateways": {
      "get": {
        "summary": "Execute listCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Returns all available ciscocatalyst600024portfxsgateways resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocatalyst600024portfxsgateways/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter ciscocatalyst600024portfxsgateways resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboardings": {
      "get": {
        "summary": "Execute listCiscoCloudOnboarding AXL operation",
        "description": "Returns all available ciscocloudonboardings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboardings/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCiscoCloudOnboarding AXL operation with dynamic parameter",
        "description": "Filter ciscocloudonboardings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfos": {
      "get": {
        "summary": "Execute listCmcInfo AXL operation",
        "description": "Returns all available cmcinfos resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cmcinfos/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCmcInfo AXL operation with dynamic parameter",
        "description": "Filter cmcinfos resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfigs": {
      "get": {
        "summary": "Execute listCommonDeviceConfig AXL operation",
        "description": "Returns all available commondeviceconfigs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commondeviceconfigs/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter commondeviceconfigs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfigs": {
      "get": {
        "summary": "Execute listCommonPhoneConfig AXL operation",
        "description": "Returns all available commonphoneconfigs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/commonphoneconfigs/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter commonphoneconfigs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridges": {
      "get": {
        "summary": "Execute listConferenceBridge AXL operation",
        "description": "Returns all available conferencebridges resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencebridges/{parameter}/{value}": {
      "get": {
        "summary": "Execute listConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter conferencebridges resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenows": {
      "get": {
        "summary": "Execute listConferenceNow AXL operation",
        "description": "Returns all available conferencenows resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/conferencenows/{parameter}/{value}": {
      "get": {
        "summary": "Execute listConferenceNow AXL operation with dynamic parameter",
        "description": "Filter conferencenows resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicys": {
      "get": {
        "summary": "Execute listCredentialPolicy AXL operation",
        "description": "Returns all available credentialpolicys resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/credentialpolicys/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter credentialpolicys resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoints": {
      "get": {
        "summary": "Execute listCtiRoutePoint AXL operation",
        "description": "Returns all available ctiroutepoints resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ctiroutepoints/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter ctiroutepoints resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofiles": {
      "get": {
        "summary": "Execute listCumaServerSecurityProfile AXL operation",
        "description": "Returns all available cumaserversecurityprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/cumaserversecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter cumaserversecurityprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customers": {
      "get": {
        "summary": "Execute listCustomer AXL operation",
        "description": "Returns all available customers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCustomer AXL operation with dynamic parameter",
        "description": "Filter customers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfields": {
      "get": {
        "summary": "Execute listCustomUserField AXL operation",
        "description": "Returns all available customuserfields resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/customuserfields/{parameter}/{value}": {
      "get": {
        "summary": "Execute listCustomUserField AXL operation with dynamic parameter",
        "description": "Filter customuserfields resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroups": {
      "get": {
        "summary": "Execute listDateTimeGroup AXL operation",
        "description": "Returns all available datetimegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/datetimegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter datetimegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddis": {
      "get": {
        "summary": "Execute listDdi AXL operation",
        "description": "Returns all available ddis resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ddis/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDdi AXL operation with dynamic parameter",
        "description": "Filter ddis resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofiles": {
      "get": {
        "summary": "Execute listDefaultDeviceProfile AXL operation",
        "description": "Returns all available defaultdeviceprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/defaultdeviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter defaultdeviceprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitys": {
      "get": {
        "summary": "Execute listDeviceMobility AXL operation",
        "description": "Returns all available devicemobilitys resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitys/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter devicemobilitys resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroups": {
      "get": {
        "summary": "Execute listDeviceMobilityGroup AXL operation",
        "description": "Returns all available devicemobilitygroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicemobilitygroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter devicemobilitygroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepools": {
      "get": {
        "summary": "Execute listDevicePool AXL operation",
        "description": "Returns all available devicepools resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/devicepools/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDevicePool AXL operation with dynamic parameter",
        "description": "Filter devicepools resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofiles": {
      "get": {
        "summary": "Execute listDeviceProfile AXL operation",
        "description": "Returns all available deviceprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/deviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter deviceprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpservers": {
      "get": {
        "summary": "Execute listDhcpServer AXL operation",
        "description": "Returns all available dhcpservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDhcpServer AXL operation with dynamic parameter",
        "description": "Filter dhcpservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnets": {
      "get": {
        "summary": "Execute listDhcpSubnet AXL operation",
        "description": "Returns all available dhcpsubnets resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dhcpsubnets/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter dhcpsubnets resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplans": {
      "get": {
        "summary": "Execute listDialPlan AXL operation",
        "description": "Returns all available dialplans resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplans/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDialPlan AXL operation with dynamic parameter",
        "description": "Filter dialplans resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantags": {
      "get": {
        "summary": "Execute listDialPlanTag AXL operation",
        "description": "Returns all available dialplantags resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dialplantags/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDialPlanTag AXL operation with dynamic parameter",
        "description": "Filter dialplantags resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallparks": {
      "get": {
        "summary": "Execute listDirectedCallPark AXL operation",
        "description": "Returns all available directedcallparks resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/directedcallparks/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter directedcallparks resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsyncs": {
      "get": {
        "summary": "Execute listDirNumberAliasLookupandSync AXL operation",
        "description": "Returns all available dirnumberaliaslookupandsyncs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/dirnumberaliaslookupandsyncs/{parameter}/{value}": {
      "get": {
        "summary": "Execute listDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter dirnumberaliaslookupandsyncs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroups": {
      "get": {
        "summary": "Execute listElinGroup AXL operation",
        "description": "Returns all available elingroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/elingroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listElinGroup AXL operation with dynamic parameter",
        "description": "Filter elingroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofiles": {
      "get": {
        "summary": "Execute listEndUserCapfProfile AXL operation",
        "description": "Returns all available endusercapfprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/endusercapfprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter endusercapfprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfigurations": {
      "get": {
        "summary": "Execute listEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Returns all available enterprisefeatureaccessconfigurations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/enterprisefeatureaccessconfigurations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter enterprisefeatureaccessconfigurations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfigurations": {
      "get": {
        "summary": "Execute listExpresswayCConfiguration AXL operation",
        "description": "Returns all available expresswaycconfigurations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/expresswaycconfigurations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter expresswaycconfigurations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofiles": {
      "get": {
        "summary": "Execute listExternalCallControlProfile AXL operation",
        "description": "Returns all available externalcallcontrolprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/externalcallcontrolprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter externalcallcontrolprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfos": {
      "get": {
        "summary": "Execute listFacInfo AXL operation",
        "description": "Returns all available facinfos resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/facinfos/{parameter}/{value}": {
      "get": {
        "summary": "Execute listFacInfo AXL operation with dynamic parameter",
        "description": "Filter facinfos resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofiles": {
      "get": {
        "summary": "Execute listFallbackProfile AXL operation",
        "description": "Returns all available fallbackprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/fallbackprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter fallbackprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicys": {
      "get": {
        "summary": "Execute listFeatureControlPolicy AXL operation",
        "description": "Returns all available featurecontrolpolicys resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featurecontrolpolicys/{parameter}/{value}": {
      "get": {
        "summary": "Execute listFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter featurecontrolpolicys resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplates": {
      "get": {
        "summary": "Execute listFeatureGroupTemplate AXL operation",
        "description": "Returns all available featuregrouptemplates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/featuregrouptemplates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter featuregrouptemplates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeepers": {
      "get": {
        "summary": "Execute listGatekeeper AXL operation",
        "description": "Returns all available gatekeepers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatekeepers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listGatekeeper AXL operation with dynamic parameter",
        "description": "Filter gatekeepers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateways": {
      "get": {
        "summary": "Execute listGateway AXL operation",
        "description": "Returns all available gateways resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gateways/{parameter}/{value}": {
      "get": {
        "summary": "Execute listGateway AXL operation with dynamic parameter",
        "description": "Filter gateways resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocations": {
      "get": {
        "summary": "Execute listGeoLocation AXL operation",
        "description": "Returns all available geolocations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listGeoLocation AXL operation with dynamic parameter",
        "description": "Filter geolocations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilters": {
      "get": {
        "summary": "Execute listGeoLocationFilter AXL operation",
        "description": "Returns all available geolocationfilters resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationfilters/{parameter}/{value}": {
      "get": {
        "summary": "Execute listGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter geolocationfilters resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicys": {
      "get": {
        "summary": "Execute listGeoLocationPolicy AXL operation",
        "description": "Returns all available geolocationpolicys resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/geolocationpolicys/{parameter}/{value}": {
      "get": {
        "summary": "Execute listGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter geolocationpolicys resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateways": {
      "get": {
        "summary": "Execute listH323Gateway AXL operation",
        "description": "Returns all available h323gateways resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323gateways/{parameter}/{value}": {
      "get": {
        "summary": "Execute listH323Gateway AXL operation with dynamic parameter",
        "description": "Filter h323gateways resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phones": {
      "get": {
        "summary": "Execute listH323Phone AXL operation",
        "description": "Returns all available h323phones resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323phones/{parameter}/{value}": {
      "get": {
        "summary": "Execute listH323Phone AXL operation with dynamic parameter",
        "description": "Filter h323phones resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunks": {
      "get": {
        "summary": "Execute listH323Trunk AXL operation",
        "description": "Returns all available h323trunks resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/h323trunks/{parameter}/{value}": {
      "get": {
        "summary": "Execute listH323Trunk AXL operation with dynamic parameter",
        "description": "Filter h323trunks resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlists": {
      "get": {
        "summary": "Execute listHuntList AXL operation",
        "description": "Returns all available huntlists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntlists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listHuntList AXL operation with dynamic parameter",
        "description": "Filter huntlists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilots": {
      "get": {
        "summary": "Execute listHuntPilot AXL operation",
        "description": "Returns all available huntpilots resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/huntpilots/{parameter}/{value}": {
      "get": {
        "summary": "Execute listHuntPilot AXL operation with dynamic parameter",
        "description": "Filter huntpilots resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclients": {
      "get": {
        "summary": "Execute listImeClient AXL operation",
        "description": "Returns all available imeclients resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeclients/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeClient AXL operation with dynamic parameter",
        "description": "Filter imeclients resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformations": {
      "get": {
        "summary": "Execute listImeE164Transformation AXL operation",
        "description": "Returns all available imee164transformations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imee164transformations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter imee164transformations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterns": {
      "get": {
        "summary": "Execute listImeEnrolledPattern AXL operation",
        "description": "Returns all available imeenrolledpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroups": {
      "get": {
        "summary": "Execute listImeEnrolledPatternGroup AXL operation",
        "description": "Returns all available imeenrolledpatterngroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeenrolledpatterngroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter imeenrolledpatterngroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbers": {
      "get": {
        "summary": "Execute listImeExclusionNumber AXL operation",
        "description": "Returns all available imeexclusionnumbers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumbers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroups": {
      "get": {
        "summary": "Execute listImeExclusionNumberGroup AXL operation",
        "description": "Returns all available imeexclusionnumbergroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeexclusionnumbergroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter imeexclusionnumbergroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewalls": {
      "get": {
        "summary": "Execute listImeFirewall AXL operation",
        "description": "Returns all available imefirewalls resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imefirewalls/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeFirewall AXL operation with dynamic parameter",
        "description": "Filter imefirewalls resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelements": {
      "get": {
        "summary": "Execute listImeRouteFilterElement AXL operation",
        "description": "Returns all available imeroutefilterelements resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefilterelements/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter imeroutefilterelements resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroups": {
      "get": {
        "summary": "Execute listImeRouteFilterGroup AXL operation",
        "description": "Returns all available imeroutefiltergroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeroutefiltergroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter imeroutefiltergroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeservers": {
      "get": {
        "summary": "Execute listImeServer AXL operation",
        "description": "Returns all available imeservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/imeservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listImeServer AXL operation with dynamic parameter",
        "description": "Filter imeservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevices": {
      "get": {
        "summary": "Execute listInfrastructureDevice AXL operation",
        "description": "Returns all available infrastructuredevices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/infrastructuredevices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter infrastructuredevices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponses": {
      "get": {
        "summary": "Execute listInteractiveVoiceResponse AXL operation",
        "description": "Returns all available interactivevoiceresponses resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interactivevoiceresponses/{parameter}/{value}": {
      "get": {
        "summary": "Execute listInteractiveVoiceResponse AXL operation with dynamic parameter",
        "description": "Filter interactivevoiceresponses resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocales": {
      "get": {
        "summary": "Execute listIvrUserLocale AXL operation",
        "description": "Returns all available ivruserlocales resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ivruserlocales/{parameter}/{value}": {
      "get": {
        "summary": "Execute listIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter ivruserlocales resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroups": {
      "get": {
        "summary": "Execute listLbmGroup AXL operation",
        "description": "Returns all available lbmgroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmgroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLbmGroup AXL operation with dynamic parameter",
        "description": "Filter lbmgroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroups": {
      "get": {
        "summary": "Execute listLbmHubGroup AXL operation",
        "description": "Returns all available lbmhubgroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lbmhubgroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter lbmhubgroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectorys": {
      "get": {
        "summary": "Execute listLdapDirectory AXL operation",
        "description": "Returns all available ldapdirectorys resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapdirectorys/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter ldapdirectorys resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilters": {
      "get": {
        "summary": "Execute listLdapFilter AXL operation",
        "description": "Returns all available ldapfilters resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapfilters/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLdapFilter AXL operation with dynamic parameter",
        "description": "Filter ldapfilters resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearchs": {
      "get": {
        "summary": "Execute listLdapSearch AXL operation",
        "description": "Returns all available ldapsearchs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsearchs/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLdapSearch AXL operation with dynamic parameter",
        "description": "Filter ldapsearchs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfields": {
      "get": {
        "summary": "Execute listLdapSyncCustomField AXL operation",
        "description": "Returns all available ldapsynccustomfields resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ldapsynccustomfields/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter ldapsynccustomfields resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licensedusers": {
      "get": {
        "summary": "Execute listLicensedUser AXL operation",
        "description": "Returns all available licensedusers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/licensedusers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLicensedUser AXL operation with dynamic parameter",
        "description": "Filter licensedusers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lines": {
      "get": {
        "summary": "Execute listLine AXL operation",
        "description": "Returns all available lines resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lines/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLine AXL operation with dynamic parameter",
        "description": "Filter lines resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroups": {
      "get": {
        "summary": "Execute listLineGroup AXL operation",
        "description": "Returns all available linegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/linegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLineGroup AXL operation with dynamic parameter",
        "description": "Filter linegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroups": {
      "get": {
        "summary": "Execute listLocalRouteGroup AXL operation",
        "description": "Returns all available localroutegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/localroutegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter localroutegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/locations": {
      "get": {
        "summary": "Execute listLocation AXL operation",
        "description": "Returns all available locations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/locations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listLocation AXL operation with dynamic parameter",
        "description": "Filter locations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroups": {
      "get": {
        "summary": "Execute listMediaResourceGroup AXL operation",
        "description": "Returns all available mediaresourcegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter mediaresourcegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelists": {
      "get": {
        "summary": "Execute listMediaResourceList AXL operation",
        "description": "Returns all available mediaresourcelists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mediaresourcelists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter mediaresourcelists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetmes": {
      "get": {
        "summary": "Execute listMeetMe AXL operation",
        "description": "Returns all available meetmes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/meetmes/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMeetMe AXL operation with dynamic parameter",
        "description": "Filter meetmes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaitings": {
      "get": {
        "summary": "Execute listMessageWaiting AXL operation",
        "description": "Returns all available messagewaitings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/messagewaitings/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter messagewaitings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomains": {
      "get": {
        "summary": "Execute listMlppDomain AXL operation",
        "description": "Returns all available mlppdomains resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mlppdomains/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMlppDomain AXL operation with dynamic parameter",
        "description": "Filter mlppdomains resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofiles": {
      "get": {
        "summary": "Execute listMobileSmartClientProfile AXL operation",
        "description": "Returns all available mobilesmartclientprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilesmartclientprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMobileSmartClientProfile AXL operation with dynamic parameter",
        "description": "Filter mobilesmartclientprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofiles": {
      "get": {
        "summary": "Execute listMobilityProfile AXL operation",
        "description": "Returns all available mobilityprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mobilityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter mobilityprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosources": {
      "get": {
        "summary": "Execute listMohAudioSource AXL operation",
        "description": "Returns all available mohaudiosources resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohaudiosources/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter mohaudiosources resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohservers": {
      "get": {
        "summary": "Execute listMohServer AXL operation",
        "description": "Returns all available mohservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mohservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMohServer AXL operation with dynamic parameter",
        "description": "Filter mohservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomains": {
      "get": {
        "summary": "Execute listMraServiceDomain AXL operation",
        "description": "Returns all available mraservicedomains resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mraservicedomains/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter mraservicedomains resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtps": {
      "get": {
        "summary": "Execute listMtp AXL operation",
        "description": "Returns all available mtps resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/mtps/{parameter}/{value}": {
      "get": {
        "summary": "Execute listMtp AXL operation with dynamic parameter",
        "description": "Filter mtps resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofiles": {
      "get": {
        "summary": "Execute listNetworkAccessProfile AXL operation",
        "description": "Returns all available networkaccessprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/networkaccessprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter networkaccessprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phones": {
      "get": {
        "summary": "Execute listPhone AXL operation",
        "description": "Returns all available phones resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phones/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhone AXL operation with dynamic parameter",
        "description": "Filter phones resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcodes": {
      "get": {
        "summary": "Execute listPhoneActivationCode AXL operation",
        "description": "Returns all available phoneactivationcodes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcodes/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhoneActivationCode AXL operation with dynamic parameter",
        "description": "Filter phoneactivationcodes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplates": {
      "get": {
        "summary": "Execute listPhoneButtonTemplate AXL operation",
        "description": "Returns all available phonebuttontemplates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonebuttontemplates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter phonebuttontemplates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentps": {
      "get": {
        "summary": "Execute listPhoneNtp AXL operation",
        "description": "Returns all available phonentps resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonentps/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhoneNtp AXL operation with dynamic parameter",
        "description": "Filter phonentps resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofiles": {
      "get": {
        "summary": "Execute listPhoneSecurityProfile AXL operation",
        "description": "Returns all available phonesecurityprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phonesecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter phonesecurityprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocations": {
      "get": {
        "summary": "Execute listPhysicalLocation AXL operation",
        "description": "Returns all available physicallocations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/physicallocations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter physicallocations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroups": {
      "get": {
        "summary": "Execute listPresenceGroup AXL operation",
        "description": "Returns all available presencegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presencegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPresenceGroup AXL operation with dynamic parameter",
        "description": "Filter presencegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroups": {
      "get": {
        "summary": "Execute listPresenceRedundancyGroup AXL operation",
        "description": "Returns all available presenceredundancygroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/presenceredundancygroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listPresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter presenceredundancygroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodes": {
      "get": {
        "summary": "Execute listProcessNode AXL operation",
        "description": "Returns all available processnodes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodes/{parameter}/{value}": {
      "get": {
        "summary": "Execute listProcessNode AXL operation with dynamic parameter",
        "description": "Filter processnodes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservices": {
      "get": {
        "summary": "Execute listProcessNodeService AXL operation",
        "description": "Returns all available processnodeservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/processnodeservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listProcessNodeService AXL operation with dynamic parameter",
        "description": "Filter processnodeservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofiles": {
      "get": {
        "summary": "Execute listRecordingProfile AXL operation",
        "description": "Returns all available recordingprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/recordingprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter recordingprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regions": {
      "get": {
        "summary": "Execute listRegion AXL operation",
        "description": "Returns all available regions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regions/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRegion AXL operation with dynamic parameter",
        "description": "Filter regions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamics": {
      "get": {
        "summary": "Execute listRegistrationDynamic AXL operation",
        "description": "Returns all available registrationdynamics resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/registrationdynamics/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRegistrationDynamic AXL operation with dynamic parameter",
        "description": "Filter registrationdynamics resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remoteclusters": {
      "get": {
        "summary": "Execute listRemoteCluster AXL operation",
        "description": "Returns all available remoteclusters resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remoteclusters/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter remoteclusters resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinations": {
      "get": {
        "summary": "Execute listRemoteDestination AXL operation",
        "description": "Returns all available remotedestinations resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinations/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter remotedestinations resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofiles": {
      "get": {
        "summary": "Execute listRemoteDestinationProfile AXL operation",
        "description": "Returns all available remotedestinationprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/remotedestinationprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter remotedestinationprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespaces": {
      "get": {
        "summary": "Execute listResourcePriorityNamespace AXL operation",
        "description": "Returns all available resourceprioritynamespaces resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespaces/{parameter}/{value}": {
      "get": {
        "summary": "Execute listResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespaces resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelists": {
      "get": {
        "summary": "Execute listResourcePriorityNamespaceList AXL operation",
        "description": "Returns all available resourceprioritynamespacelists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resourceprioritynamespacelists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter resourceprioritynamespacelists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilters": {
      "get": {
        "summary": "Execute listRouteFilter AXL operation",
        "description": "Returns all available routefilters resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routefilters/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRouteFilter AXL operation with dynamic parameter",
        "description": "Filter routefilters resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroups": {
      "get": {
        "summary": "Execute listRouteGroup AXL operation",
        "description": "Returns all available routegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRouteGroup AXL operation with dynamic parameter",
        "description": "Filter routegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelists": {
      "get": {
        "summary": "Execute listRouteList AXL operation",
        "description": "Returns all available routelists resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routelists/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRouteList AXL operation with dynamic parameter",
        "description": "Filter routelists resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitions": {
      "get": {
        "summary": "Execute listRoutePartition AXL operation",
        "description": "Returns all available routepartitions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitions/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRoutePartition AXL operation with dynamic parameter",
        "description": "Filter routepartitions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepatterns": {
      "get": {
        "summary": "Execute listRoutePattern AXL operation",
        "description": "Returns all available routepatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRoutePattern AXL operation with dynamic parameter",
        "description": "Filter routepatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routeplans": {
      "get": {
        "summary": "Execute listRoutePlan AXL operation",
        "description": "Returns all available routeplans resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routeplans/{parameter}/{value}": {
      "get": {
        "summary": "Execute listRoutePlan AXL operation with dynamic parameter",
        "description": "Filter routeplans resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarders": {
      "get": {
        "summary": "Execute listSafForwarder AXL operation",
        "description": "Returns all available safforwarders resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safforwarders/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSafForwarder AXL operation with dynamic parameter",
        "description": "Filter safforwarders resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofiles": {
      "get": {
        "summary": "Execute listSafSecurityProfile AXL operation",
        "description": "Returns all available safsecurityprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/safsecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter safsecurityprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofiles": {
      "get": {
        "summary": "Execute listSdpTransparencyProfile AXL operation",
        "description": "Returns all available sdptransparencyprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sdptransparencyprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter sdptransparencyprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameters": {
      "get": {
        "summary": "Execute listServiceParameter AXL operation",
        "description": "Returns all available serviceparameters resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceparameters/{parameter}/{value}": {
      "get": {
        "summary": "Execute listServiceParameter AXL operation with dynamic parameter",
        "description": "Filter serviceparameters resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofiles": {
      "get": {
        "summary": "Execute listServiceProfile AXL operation",
        "description": "Returns all available serviceprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/serviceprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listServiceProfile AXL operation with dynamic parameter",
        "description": "Filter serviceprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscripts": {
      "get": {
        "summary": "Execute listSIPNormalizationScript AXL operation",
        "description": "Returns all available sipnormalizationscripts resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipnormalizationscripts/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter sipnormalizationscripts resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofiles": {
      "get": {
        "summary": "Execute listSipProfile AXL operation",
        "description": "Returns all available sipprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/sipprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipProfile AXL operation with dynamic parameter",
        "description": "Filter sipprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealms": {
      "get": {
        "summary": "Execute listSipRealm AXL operation",
        "description": "Returns all available siprealms resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siprealms/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipRealm AXL operation with dynamic parameter",
        "description": "Filter siprealms resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepatterns": {
      "get": {
        "summary": "Execute listSipRoutePattern AXL operation",
        "description": "Returns all available siproutepatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siproutepatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter siproutepatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunks": {
      "get": {
        "summary": "Execute listSipTrunk AXL operation",
        "description": "Returns all available siptrunks resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunks/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipTrunk AXL operation with dynamic parameter",
        "description": "Filter siptrunks resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofiles": {
      "get": {
        "summary": "Execute listSipTrunkSecurityProfile AXL operation",
        "description": "Returns all available siptrunksecurityprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/siptrunksecurityprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter siptrunksecurityprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplates": {
      "get": {
        "summary": "Execute listSoftKeyTemplate AXL operation",
        "description": "Returns all available softkeytemplates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/softkeytemplates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter softkeytemplates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srsts": {
      "get": {
        "summary": "Execute listSrst AXL operation",
        "description": "Returns all available srsts resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/srsts/{parameter}/{value}": {
      "get": {
        "summary": "Execute listSrst AXL operation with dynamic parameter",
        "description": "Filter srsts resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiods": {
      "get": {
        "summary": "Execute listTimePeriod AXL operation",
        "description": "Returns all available timeperiods resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeperiods/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTimePeriod AXL operation with dynamic parameter",
        "description": "Filter timeperiods resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedules": {
      "get": {
        "summary": "Execute listTimeSchedule AXL operation",
        "description": "Returns all available timeschedules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/timeschedules/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter timeschedules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoders": {
      "get": {
        "summary": "Execute listTranscoder AXL operation",
        "description": "Returns all available transcoders resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transcoders/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTranscoder AXL operation with dynamic parameter",
        "description": "Filter transcoders resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofiles": {
      "get": {
        "summary": "Execute listTransformationProfile AXL operation",
        "description": "Returns all available transformationprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transformationprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter transformationprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatterns": {
      "get": {
        "summary": "Execute listTransPattern AXL operation",
        "description": "Returns all available transpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/transpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTransPattern AXL operation with dynamic parameter",
        "description": "Filter transpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificates": {
      "get": {
        "summary": "Execute listTvsCertificate AXL operation",
        "description": "Returns all available tvscertificates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/tvscertificates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listTvsCertificate AXL operation with dynamic parameter",
        "description": "Filter tvscertificates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservices": {
      "get": {
        "summary": "Execute listUcService AXL operation",
        "description": "Returns all available ucservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ucservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUcService AXL operation with dynamic parameter",
        "description": "Filter ucservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassigneddevices": {
      "get": {
        "summary": "Execute listUnassignedDevice AXL operation",
        "description": "Returns all available unassigneddevices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassigneddevices/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUnassignedDevice AXL operation with dynamic parameter",
        "description": "Filter unassigneddevices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceservers": {
      "get": {
        "summary": "Execute listUnassignedPresenceServers AXL operation",
        "description": "Returns all available unassignedpresenceservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUnassignedPresenceServers AXL operation with dynamic parameter",
        "description": "Filter unassignedpresenceservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceusers": {
      "get": {
        "summary": "Execute listUnassignedPresenceUsers AXL operation",
        "description": "Returns all available unassignedpresenceusers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignedpresenceusers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUnassignedPresenceUsers AXL operation with dynamic parameter",
        "description": "Filter unassignedpresenceusers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplates": {
      "get": {
        "summary": "Execute listUniversalDeviceTemplate AXL operation",
        "description": "Returns all available universaldevicetemplates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universaldevicetemplates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter universaldevicetemplates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplates": {
      "get": {
        "summary": "Execute listUniversalLineTemplate AXL operation",
        "description": "Returns all available universallinetemplates resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/universallinetemplates/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter universallinetemplates resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/users": {
      "get": {
        "summary": "Execute listUser AXL operation",
        "description": "Returns all available users resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/users/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUser AXL operation with dynamic parameter",
        "description": "Filter users resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroups": {
      "get": {
        "summary": "Execute listUserGroup AXL operation",
        "description": "Returns all available usergroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/usergroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUserGroup AXL operation with dynamic parameter",
        "description": "Filter usergroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovisions": {
      "get": {
        "summary": "Execute listUserProfileProvision AXL operation",
        "description": "Returns all available userprofileprovisions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/userprofileprovisions/{parameter}/{value}": {
      "get": {
        "summary": "Execute listUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter userprofileprovisions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohservers": {
      "get": {
        "summary": "Execute listVohServer AXL operation",
        "description": "Returns all available vohservers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vohservers/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVohServer AXL operation with dynamic parameter",
        "description": "Filter vohservers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilots": {
      "get": {
        "summary": "Execute listVoiceMailPilot AXL operation",
        "description": "Returns all available voicemailpilots resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailpilots/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter voicemailpilots resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailports": {
      "get": {
        "summary": "Execute listVoiceMailPort AXL operation",
        "description": "Returns all available voicemailports resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailports/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter voicemailports resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofiles": {
      "get": {
        "summary": "Execute listVoiceMailProfile AXL operation",
        "description": "Returns all available voicemailprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/voicemailprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter voicemailprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateways": {
      "get": {
        "summary": "Execute listVpnGateway AXL operation",
        "description": "Returns all available vpngateways resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngateways/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVpnGateway AXL operation with dynamic parameter",
        "description": "Filter vpngateways resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroups": {
      "get": {
        "summary": "Execute listVpnGroup AXL operation",
        "description": "Returns all available vpngroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpngroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVpnGroup AXL operation with dynamic parameter",
        "description": "Filter vpngroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofiles": {
      "get": {
        "summary": "Execute listVpnProfile AXL operation",
        "description": "Returns all available vpnprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/vpnprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listVpnProfile AXL operation with dynamic parameter",
        "description": "Filter vpnprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspots": {
      "get": {
        "summary": "Execute listWifiHotspot AXL operation",
        "description": "Returns all available wifihotspots resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wifihotspots/{parameter}/{value}": {
      "get": {
        "summary": "Execute listWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter wifihotspots resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofiles": {
      "get": {
        "summary": "Execute listWLANProfile AXL operation",
        "description": "Returns all available wlanprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute listWLANProfile AXL operation with dynamic parameter",
        "description": "Filter wlanprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroups": {
      "get": {
        "summary": "Execute listWlanProfileGroup AXL operation",
        "description": "Returns all available wlanprofilegroups resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wlanprofilegroups/{parameter}/{value}": {
      "get": {
        "summary": "Execute listWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter wlanprofilegroups resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/lockphone": {
      "post": {
        "summary": "Execute lockPhone AXL operation",
        "description": "Execute lockPhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "lockPhone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/applicationtosoftkeytemplate/{parameter}/{value}": {
      "delete": {
        "summary": "Execute removeApplicationToSoftkeyTemplate AXL operation with dynamic parameter",
        "description": "Filter applicationtosoftkeytemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/calledpartytracing/{parameter}/{value}": {
      "delete": {
        "summary": "Execute removeCalledPartyTracing AXL operation with dynamic parameter",
        "description": "Filter calledpartytracing resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/gatewaysubunits/{parameter}/{value}": {
      "delete": {
        "summary": "Execute removeGatewaySubunits AXL operation with dynamic parameter",
        "description": "Filter gatewaysubunits resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/phoneactivationcode/{parameter}/{value}": {
      "delete": {
        "summary": "Execute removePhoneActivationCode AXL operation with dynamic parameter",
        "description": "Filter phoneactivationcode resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unitstogateway/{parameter}/{value}": {
      "delete": {
        "summary": "Execute removeUnitsToGateway AXL operation with dynamic parameter",
        "description": "Filter unitstogateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcallmanager": {
      "post": {
        "summary": "Execute resetCallManager AXL operation",
        "description": "Execute resetCallManager AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCallManager": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcallmanagergroup": {
      "post": {
        "summary": "Execute resetCallManagerGroup AXL operation",
        "description": "Execute resetCallManagerGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCallManagerGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "Execute resetCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute resetCiscoCatalyst6000E1VoIPGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCiscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "Execute resetCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute resetCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCiscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "Execute resetCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute resetCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCiscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "Execute resetCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute resetCiscoCatalyst600024PortFXSGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCiscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcommondeviceconfig": {
      "post": {
        "summary": "Execute resetCommonDeviceConfig AXL operation",
        "description": "Execute resetCommonDeviceConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCommonDeviceConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetcommonphoneconfig": {
      "post": {
        "summary": "Execute resetCommonPhoneConfig AXL operation",
        "description": "Execute resetCommonPhoneConfig AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCommonPhoneConfig": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetconferencebridge": {
      "post": {
        "summary": "Execute resetConferenceBridge AXL operation",
        "description": "Execute resetConferenceBridge AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetConferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetctiroutepoint": {
      "post": {
        "summary": "Execute resetCtiRoutePoint AXL operation",
        "description": "Execute resetCtiRoutePoint AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetCtiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdatetimegroup": {
      "post": {
        "summary": "Execute resetDateTimeGroup AXL operation",
        "description": "Execute resetDateTimeGroup AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetDateTimeGroup": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdevicepool": {
      "post": {
        "summary": "Execute resetDevicePool AXL operation",
        "description": "Execute resetDevicePool AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetDevicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetdirectedcallpark": {
      "post": {
        "summary": "Execute resetDirectedCallPark AXL operation",
        "description": "Execute resetDirectedCallPark AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetDirectedCallPark": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetenterpriseparameters": {
      "post": {
        "summary": "Execute resetEnterpriseParameters AXL operation",
        "description": "Execute resetEnterpriseParameters AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetEnterpriseParameters": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetgatekeeper": {
      "post": {
        "summary": "Execute resetGatekeeper AXL operation",
        "description": "Execute resetGatekeeper AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetGatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetgateway": {
      "post": {
        "summary": "Execute resetGateway AXL operation",
        "description": "Execute resetGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323gateway": {
      "post": {
        "summary": "Execute resetH323Gateway AXL operation",
        "description": "Execute resetH323Gateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetH323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323phone": {
      "post": {
        "summary": "Execute resetH323Phone AXL operation",
        "description": "Execute resetH323Phone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetH323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/reseth323trunk": {
      "post": {
        "summary": "Execute resetH323Trunk AXL operation",
        "description": "Execute resetH323Trunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetH323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resethuntlist": {
      "post": {
        "summary": "Execute resetHuntList AXL operation",
        "description": "Execute resetHuntList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetHuntList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetline": {
      "post": {
        "summary": "Execute resetLine AXL operation",
        "description": "Execute resetLine AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetLine": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetmtp": {
      "post": {
        "summary": "Execute resetMtp AXL operation",
        "description": "Execute resetMtp AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetMtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetphone": {
      "post": {
        "summary": "Execute resetPhone AXL operation",
        "description": "Execute resetPhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetPhone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetphonesecurityprofile": {
      "post": {
        "summary": "Execute resetPhoneSecurityProfile AXL operation",
        "description": "Execute resetPhoneSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetPhoneSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetresourceprioritynamespace": {
      "post": {
        "summary": "Execute resetResourcePriorityNamespace AXL operation",
        "description": "Execute resetResourcePriorityNamespace AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetResourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetresourceprioritynamespacelist": {
      "post": {
        "summary": "Execute resetResourcePriorityNamespaceList AXL operation",
        "description": "Execute resetResourcePriorityNamespaceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetResourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetroutelist": {
      "post": {
        "summary": "Execute resetRouteList AXL operation",
        "description": "Execute resetRouteList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetRouteList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsiptrunk": {
      "post": {
        "summary": "Execute resetSipTrunk AXL operation",
        "description": "Execute resetSipTrunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetSipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsiptrunksecurityprofile": {
      "post": {
        "summary": "Execute resetSipTrunkSecurityProfile AXL operation",
        "description": "Execute resetSipTrunkSecurityProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetSipTrunkSecurityProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetsrst": {
      "post": {
        "summary": "Execute resetSrst AXL operation",
        "description": "Execute resetSrst AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetSrst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resettranscoder": {
      "post": {
        "summary": "Execute resetTranscoder AXL operation",
        "description": "Execute resetTranscoder AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetTranscoder": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetucservice": {
      "post": {
        "summary": "Execute resetUcService AXL operation",
        "description": "Execute resetUcService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetUcService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvg224": {
      "post": {
        "summary": "Execute resetVg224 AXL operation",
        "description": "Execute resetVg224 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetVg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvoicemailport": {
      "post": {
        "summary": "Execute resetVoiceMailPort AXL operation",
        "description": "Execute resetVoiceMailPort AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetVoiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/resetvoicemailprofile": {
      "post": {
        "summary": "Execute resetVoiceMailProfile AXL operation",
        "description": "Execute resetVoiceMailProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "resetVoiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartcallmanager": {
      "post": {
        "summary": "Execute restartCallManager AXL operation",
        "description": "Execute restartCallManager AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCallManager": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000e1voipgateway": {
      "post": {
        "summary": "Execute restartCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Execute restartCiscoCatalyst6000E1VoIPGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCiscoCatalyst6000E1VoIPGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000t1voipgatewaypri": {
      "post": {
        "summary": "Execute restartCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Execute restartCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCiscoCatalyst6000T1VoIPGatewayPri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst6000t1voipgatewayt1": {
      "post": {
        "summary": "Execute restartCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Execute restartCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCiscoCatalyst6000T1VoIPGatewayT1": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartciscocatalyst600024portfxsgateway": {
      "post": {
        "summary": "Execute restartCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Execute restartCiscoCatalyst600024PortFXSGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCiscoCatalyst600024PortFXSGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartconferencebridge": {
      "post": {
        "summary": "Execute restartConferenceBridge AXL operation",
        "description": "Execute restartConferenceBridge AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartConferenceBridge": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartctiroutepoint": {
      "post": {
        "summary": "Execute restartCtiRoutePoint AXL operation",
        "description": "Execute restartCtiRoutePoint AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartCtiRoutePoint": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartdevicepool": {
      "post": {
        "summary": "Execute restartDevicePool AXL operation",
        "description": "Execute restartDevicePool AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartDevicePool": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartenterpriseparameters": {
      "post": {
        "summary": "Execute restartEnterpriseParameters AXL operation",
        "description": "Execute restartEnterpriseParameters AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartEnterpriseParameters": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartgatekeeper": {
      "post": {
        "summary": "Execute restartGatekeeper AXL operation",
        "description": "Execute restartGatekeeper AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartGatekeeper": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartgateway": {
      "post": {
        "summary": "Execute restartGateway AXL operation",
        "description": "Execute restartGateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartGateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323gateway": {
      "post": {
        "summary": "Execute restartH323Gateway AXL operation",
        "description": "Execute restartH323Gateway AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartH323Gateway": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323phone": {
      "post": {
        "summary": "Execute restartH323Phone AXL operation",
        "description": "Execute restartH323Phone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartH323Phone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restarth323trunk": {
      "post": {
        "summary": "Execute restartH323Trunk AXL operation",
        "description": "Execute restartH323Trunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartH323Trunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartline": {
      "post": {
        "summary": "Execute restartLine AXL operation",
        "description": "Execute restartLine AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartLine": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartmtp": {
      "post": {
        "summary": "Execute restartMtp AXL operation",
        "description": "Execute restartMtp AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartMtp": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartphone": {
      "post": {
        "summary": "Execute restartPhone AXL operation",
        "description": "Execute restartPhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartPhone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartphonebuttontemplate": {
      "post": {
        "summary": "Execute restartPhoneButtonTemplate AXL operation",
        "description": "Execute restartPhoneButtonTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartPhoneButtonTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartregion": {
      "post": {
        "summary": "Execute restartRegion AXL operation",
        "description": "Execute restartRegion AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartRegion": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartresourceprioritynamespace": {
      "post": {
        "summary": "Execute restartResourcePriorityNamespace AXL operation",
        "description": "Execute restartResourcePriorityNamespace AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartResourcePriorityNamespace": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartresourceprioritynamespacelist": {
      "post": {
        "summary": "Execute restartResourcePriorityNamespaceList AXL operation",
        "description": "Execute restartResourcePriorityNamespaceList AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartResourcePriorityNamespaceList": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartroutepartition": {
      "post": {
        "summary": "Execute restartRoutePartition AXL operation",
        "description": "Execute restartRoutePartition AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartRoutePartition": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsipprofile": {
      "post": {
        "summary": "Execute restartSipProfile AXL operation",
        "description": "Execute restartSipProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartSipProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsiptrunk": {
      "post": {
        "summary": "Execute restartSipTrunk AXL operation",
        "description": "Execute restartSipTrunk AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartSipTrunk": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsoftkeytemplate": {
      "post": {
        "summary": "Execute restartSoftKeyTemplate AXL operation",
        "description": "Execute restartSoftKeyTemplate AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartSoftKeyTemplate": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartsrst": {
      "post": {
        "summary": "Execute restartSrst AXL operation",
        "description": "Execute restartSrst AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartSrst": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartucservice": {
      "post": {
        "summary": "Execute restartUcService AXL operation",
        "description": "Execute restartUcService AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartUcService": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvg224": {
      "post": {
        "summary": "Execute restartVg224 AXL operation",
        "description": "Execute restartVg224 AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartVg224": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvoicemailport": {
      "post": {
        "summary": "Execute restartVoiceMailPort AXL operation",
        "description": "Execute restartVoiceMailPort AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartVoiceMailPort": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/restartvoicemailprofile": {
      "post": {
        "summary": "Execute restartVoiceMailProfile AXL operation",
        "description": "Execute restartVoiceMailProfile AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "restartVoiceMailProfile": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/unassignpresenceuser": {
      "post": {
        "summary": "Execute unassignPresenceUser AXL operation",
        "description": "Execute unassignPresenceUser AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "unassignPresenceUser": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroupmatrix": {
      "patch": {
        "summary": "Execute updateAarGroupMatrix AXL operation",
        "description": "Execute updateAarGroupMatrix AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `aarGroupMatrix` as the resource key (not `aargroupmatrix`).\n        For example: `{ \"aarGroupMatrix\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "aarGroupMatrix": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/aargroupmatrix/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateAarGroupMatrix AXL operation with dynamic parameter",
        "description": "Filter aargroupmatrix resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `aarGroupMatrix` as the resource key (not `aargroupmatrix`).\n          For example: `{ \"aarGroupMatrix\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboarding": {
      "patch": {
        "summary": "Execute updateCiscoCloudOnboarding AXL operation",
        "description": "Execute updateCiscoCloudOnboarding AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `ciscoCloudOnboarding` as the resource key (not `ciscocloudonboarding`).\n        For example: `{ \"ciscoCloudOnboarding\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "ciscoCloudOnboarding": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/ciscocloudonboarding/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateCiscoCloudOnboarding AXL operation with dynamic parameter",
        "description": "Filter ciscocloudonboarding resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `ciscoCloudOnboarding` as the resource key (not `ciscocloudonboarding`).\n          For example: `{ \"ciscoCloudOnboarding\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterdirectoryuri": {
      "patch": {
        "summary": "Execute updateInterClusterDirectoryUri AXL operation",
        "description": "Execute updateInterClusterDirectoryUri AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `interClusterDirectoryUri` as the resource key (not `interclusterdirectoryuri`).\n        For example: `{ \"interClusterDirectoryUri\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "interClusterDirectoryUri": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/interclusterdirectoryuri/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateInterClusterDirectoryUri AXL operation with dynamic parameter",
        "description": "Filter interclusterdirectoryuri resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `interClusterDirectoryUri` as the resource key (not `interclusterdirectoryuri`).\n          For example: `{ \"interClusterDirectoryUri\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regionmatrix": {
      "patch": {
        "summary": "Execute updateRegionMatrix AXL operation",
        "description": "Execute updateRegionMatrix AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `regionMatrix` as the resource key (not `regionmatrix`).\n        For example: `{ \"regionMatrix\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "regionMatrix": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/regionmatrix/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateRegionMatrix AXL operation with dynamic parameter",
        "description": "Filter regionmatrix resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `regionMatrix` as the resource key (not `regionmatrix`).\n          For example: `{ \"regionMatrix\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitionsforlearnedpatterns": {
      "patch": {
        "summary": "Execute updateRoutePartitionsForLearnedPatterns AXL operation",
        "description": "Execute updateRoutePartitionsForLearnedPatterns AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `routePartitionsForLearnedPatterns` as the resource key (not `routepartitionsforlearnedpatterns`).\n        For example: `{ \"routePartitionsForLearnedPatterns\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "routePartitionsForLearnedPatterns": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/routepartitionsforlearnedpatterns/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateRoutePartitionsForLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter routepartitionsforlearnedpatterns resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `routePartitionsForLearnedPatterns` as the resource key (not `routepartitionsforlearnedpatterns`).\n          For example: `{ \"routePartitionsForLearnedPatterns\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/selfprovisioning": {
      "patch": {
        "summary": "Execute updateSelfProvisioning AXL operation",
        "description": "Execute updateSelfProvisioning AXL operation\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n        For this endpoint, use `selfProvisioning` as the resource key (not `selfprovisioning`).\n        For example: `{ \"selfProvisioning\": { \"name\": \"Example\" } }`\n        See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "selfProvisioning": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/selfprovisioning/{parameter}/{value}": {
      "patch": {
        "summary": "Execute updateSelfProvisioning AXL operation with dynamic parameter",
        "description": "Filter selfprovisioning resources by specified parameter type and value\n\n**IMPORTANT - Case-Sensitive Resource Names:** This endpoint requires the exact camelCase for resource names.\n          For this endpoint, use `selfProvisioning` as the resource key (not `selfprovisioning`).\n          For example: `{ \"selfProvisioning\": { \"name\": \"Example\" } }`\n          See the examples below for proper request structure.",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/wipephone": {
      "post": {
        "summary": "Execute wipePhone AXL operation",
        "description": "Execute wipePhone AXL operation",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "example1": {
                  "summary": "With correct camelCase key",
                  "value": {
                    "wipePhone": {
                      "name": "Example-Name",
                      "description": "Example created using the REST API"
                    }
                  }
                },
                "example2": {
                  "summary": "Without resource key wrapper",
                  "value": {
                    "name": "Example-Name",
                    "description": "Example created using the REST API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-aargroup": {
      "get": {
        "summary": "Execute getAarGroup AXL operation",
        "description": "Returns all available get-aargroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-aargroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAarGroup AXL operation with dynamic parameter",
        "description": "Filter get-aargroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-advertisedpatterns": {
      "get": {
        "summary": "Execute getAdvertisedPatterns AXL operation",
        "description": "Returns all available get-advertisedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-advertisedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAdvertisedPatterns AXL operation with dynamic parameter",
        "description": "Filter get-advertisedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-announcement": {
      "get": {
        "summary": "Execute getAnnouncement AXL operation",
        "description": "Returns all available get-announcement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-announcement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnouncement AXL operation with dynamic parameter",
        "description": "Filter get-announcement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-annunciator": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation",
        "description": "Returns all available get-annunciator resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-annunciator/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAnnunciator AXL operation with dynamic parameter",
        "description": "Filter get-annunciator resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationdialrules": {
      "get": {
        "summary": "Execute getApplicationDialRules AXL operation",
        "description": "Returns all available get-applicationdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationDialRules AXL operation with dynamic parameter",
        "description": "Filter get-applicationdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationserver": {
      "get": {
        "summary": "Execute getApplicationServer AXL operation",
        "description": "Returns all available get-applicationserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationServer AXL operation with dynamic parameter",
        "description": "Filter get-applicationserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationusercapfprofile": {
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation",
        "description": "Returns all available get-applicationusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-applicationusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getApplicationUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter get-applicationusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appserverinfo": {
      "get": {
        "summary": "Execute getAppServerInfo AXL operation",
        "description": "Returns all available get-appserverinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appserverinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppServerInfo AXL operation with dynamic parameter",
        "description": "Filter get-appserverinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appuser": {
      "get": {
        "summary": "Execute getAppUser AXL operation",
        "description": "Returns all available get-appuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-appuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAppUser AXL operation with dynamic parameter",
        "description": "Filter get-appuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-audiocodecpreferencelist": {
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation",
        "description": "Returns all available get-audiocodecpreferencelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-audiocodecpreferencelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getAudioCodecPreferenceList AXL operation with dynamic parameter",
        "description": "Filter get-audiocodecpreferencelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-billingserver": {
      "get": {
        "summary": "Execute getBillingServer AXL operation",
        "description": "Returns all available get-billingserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-billingserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getBillingServer AXL operation with dynamic parameter",
        "description": "Filter get-billingserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-blockedlearnedpatterns": {
      "get": {
        "summary": "Execute getBlockedLearnedPatterns AXL operation",
        "description": "Returns all available get-blockedlearnedpatterns resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-blockedlearnedpatterns/{parameter}/{value}": {
      "get": {
        "summary": "Execute getBlockedLearnedPatterns AXL operation with dynamic parameter",
        "description": "Filter get-blockedlearnedpatterns resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-calledpartytransformationpattern": {
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation",
        "description": "Returns all available get-calledpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-calledpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCalledPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter get-calledpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callerfilterlist": {
      "get": {
        "summary": "Execute getCallerFilterList AXL operation",
        "description": "Returns all available get-callerfilterlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callerfilterlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallerFilterList AXL operation with dynamic parameter",
        "description": "Filter get-callerfilterlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callingpartytransformationpattern": {
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation",
        "description": "Returns all available get-callingpartytransformationpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callingpartytransformationpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallingPartyTransformationPattern AXL operation with dynamic parameter",
        "description": "Filter get-callingpartytransformationpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanager": {
      "get": {
        "summary": "Execute getCallManager AXL operation",
        "description": "Returns all available get-callmanager resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanager/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManager AXL operation with dynamic parameter",
        "description": "Filter get-callmanager resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanagergroup": {
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation",
        "description": "Returns all available get-callmanagergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callmanagergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallManagerGroup AXL operation with dynamic parameter",
        "description": "Filter get-callmanagergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpark": {
      "get": {
        "summary": "Execute getCallPark AXL operation",
        "description": "Returns all available get-callpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPark AXL operation with dynamic parameter",
        "description": "Filter get-callpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpickupgroup": {
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation",
        "description": "Returns all available get-callpickupgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-callpickupgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCallPickupGroup AXL operation with dynamic parameter",
        "description": "Filter get-callpickupgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccaprofiles": {
      "get": {
        "summary": "Execute getCCAProfiles AXL operation",
        "description": "Returns all available get-ccaprofiles resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccaprofiles/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCCAProfiles AXL operation with dynamic parameter",
        "description": "Filter get-ccaprofiles resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdadvertisingservice": {
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation",
        "description": "Returns all available get-ccdadvertisingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdadvertisingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdAdvertisingService AXL operation with dynamic parameter",
        "description": "Filter get-ccdadvertisingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdfeatureconfig": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation",
        "description": "Returns all available get-ccdfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-ccdfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddn": {
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation",
        "description": "Returns all available get-ccdhosteddn resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddn/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDN AXL operation with dynamic parameter",
        "description": "Filter get-ccdhosteddn resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddngroup": {
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation",
        "description": "Returns all available get-ccdhosteddngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdhosteddngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdHostedDNGroup AXL operation with dynamic parameter",
        "description": "Filter get-ccdhosteddngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdrequestingservice": {
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation",
        "description": "Returns all available get-ccdrequestingservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccdrequestingservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCcdRequestingService AXL operation with dynamic parameter",
        "description": "Filter get-ccdrequestingservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccmversion": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation",
        "description": "Returns all available get-ccmversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ccmversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCCMVersion AXL operation with dynamic parameter",
        "description": "Filter get-ccmversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000e1voipgateway": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation",
        "description": "Returns all available get-ciscocatalyst6000e1voipgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000e1voipgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000E1VoIPGateway AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000e1voipgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewaypri": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation",
        "description": "Returns all available get-ciscocatalyst6000t1voipgatewaypri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewaypri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayPri AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000t1voipgatewaypri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewayt1": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation",
        "description": "Returns all available get-ciscocatalyst6000t1voipgatewayt1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst6000t1voipgatewayt1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst6000T1VoIPGatewayT1 AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst6000t1voipgatewayt1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst600024portfxsgateway": {
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation",
        "description": "Returns all available get-ciscocatalyst600024portfxsgateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ciscocatalyst600024portfxsgateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCiscoCatalyst600024PortFXSGateway AXL operation with dynamic parameter",
        "description": "Filter get-ciscocatalyst600024portfxsgateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cmcinfo": {
      "get": {
        "summary": "Execute getCmcInfo AXL operation",
        "description": "Returns all available get-cmcinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cmcinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCmcInfo AXL operation with dynamic parameter",
        "description": "Filter get-cmcinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commondeviceconfig": {
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation",
        "description": "Returns all available get-commondeviceconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commondeviceconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonDeviceConfig AXL operation with dynamic parameter",
        "description": "Filter get-commondeviceconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commonphoneconfig": {
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation",
        "description": "Returns all available get-commonphoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-commonphoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCommonPhoneConfig AXL operation with dynamic parameter",
        "description": "Filter get-commonphoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencebridge": {
      "get": {
        "summary": "Execute getConferenceBridge AXL operation",
        "description": "Returns all available get-conferencebridge resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencebridge/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceBridge AXL operation with dynamic parameter",
        "description": "Filter get-conferencebridge resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencenow": {
      "get": {
        "summary": "Execute getConferenceNow AXL operation",
        "description": "Returns all available get-conferencenow resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-conferencenow/{parameter}/{value}": {
      "get": {
        "summary": "Execute getConferenceNow AXL operation with dynamic parameter",
        "description": "Filter get-conferencenow resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicy": {
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation",
        "description": "Returns all available get-credentialpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicy AXL operation with dynamic parameter",
        "description": "Filter get-credentialpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicydefault": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation",
        "description": "Returns all available get-credentialpolicydefault resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-credentialpolicydefault/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCredentialPolicyDefault AXL operation with dynamic parameter",
        "description": "Filter get-credentialpolicydefault resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-css": {
      "get": {
        "summary": "Execute getCss AXL operation",
        "description": "Returns all available get-css resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-css/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCss AXL operation with dynamic parameter",
        "description": "Filter get-css resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ctiroutepoint": {
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation",
        "description": "Returns all available get-ctiroutepoint resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ctiroutepoint/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCtiRoutePoint AXL operation with dynamic parameter",
        "description": "Filter get-ctiroutepoint resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cumaserversecurityprofile": {
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation",
        "description": "Returns all available get-cumaserversecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-cumaserversecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCumaServerSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-cumaserversecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customer": {
      "get": {
        "summary": "Execute getCustomer AXL operation",
        "description": "Returns all available get-customer resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customer/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomer AXL operation with dynamic parameter",
        "description": "Filter get-customer resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customuserfield": {
      "get": {
        "summary": "Execute getCustomUserField AXL operation",
        "description": "Returns all available get-customuserfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-customuserfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getCustomUserField AXL operation with dynamic parameter",
        "description": "Filter get-customuserfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-datetimegroup": {
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation",
        "description": "Returns all available get-datetimegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-datetimegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDateTimeGroup AXL operation with dynamic parameter",
        "description": "Filter get-datetimegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ddi": {
      "get": {
        "summary": "Execute getDdi AXL operation",
        "description": "Returns all available get-ddi resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ddi/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDdi AXL operation with dynamic parameter",
        "description": "Filter get-ddi resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-defaultdeviceprofile": {
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation",
        "description": "Returns all available get-defaultdeviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-defaultdeviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDefaultDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter get-defaultdeviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicedefaults": {
      "get": {
        "summary": "Execute getDeviceDefaults AXL operation",
        "description": "Returns all available get-devicedefaults resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicedefaults/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceDefaults AXL operation with dynamic parameter",
        "description": "Filter get-devicedefaults resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobility": {
      "get": {
        "summary": "Execute getDeviceMobility AXL operation",
        "description": "Returns all available get-devicemobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobility AXL operation with dynamic parameter",
        "description": "Filter get-devicemobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobilitygroup": {
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation",
        "description": "Returns all available get-devicemobilitygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicemobilitygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceMobilityGroup AXL operation with dynamic parameter",
        "description": "Filter get-devicemobilitygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicepool": {
      "get": {
        "summary": "Execute getDevicePool AXL operation",
        "description": "Returns all available get-devicepool resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-devicepool/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDevicePool AXL operation with dynamic parameter",
        "description": "Filter get-devicepool resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofile": {
      "get": {
        "summary": "Execute getDeviceProfile AXL operation",
        "description": "Returns all available get-deviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfile AXL operation with dynamic parameter",
        "description": "Filter get-deviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofileoptions": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation",
        "description": "Returns all available get-deviceprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-deviceprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDeviceProfileOptions AXL operation with dynamic parameter",
        "description": "Filter get-deviceprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpserver": {
      "get": {
        "summary": "Execute getDhcpServer AXL operation",
        "description": "Returns all available get-dhcpserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpServer AXL operation with dynamic parameter",
        "description": "Filter get-dhcpserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpsubnet": {
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation",
        "description": "Returns all available get-dhcpsubnet resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dhcpsubnet/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDhcpSubnet AXL operation with dynamic parameter",
        "description": "Filter get-dhcpsubnet resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplan": {
      "get": {
        "summary": "Execute getDialPlan AXL operation",
        "description": "Returns all available get-dialplan resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplan/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlan AXL operation with dynamic parameter",
        "description": "Filter get-dialplan resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplantag": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation",
        "description": "Returns all available get-dialplantag resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dialplantag/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDialPlanTag AXL operation with dynamic parameter",
        "description": "Filter get-dialplantag resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directedcallpark": {
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation",
        "description": "Returns all available get-directedcallpark resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directedcallpark/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirectedCallPark AXL operation with dynamic parameter",
        "description": "Filter get-directedcallpark resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directorylookupdialrules": {
      "get": {
        "summary": "Execute getDirectoryLookupDialRules AXL operation",
        "description": "Returns all available get-directorylookupdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-directorylookupdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirectoryLookupDialRules AXL operation with dynamic parameter",
        "description": "Filter get-directorylookupdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dirnumberaliaslookupandsync": {
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation",
        "description": "Returns all available get-dirnumberaliaslookupandsync resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-dirnumberaliaslookupandsync/{parameter}/{value}": {
      "get": {
        "summary": "Execute getDirNumberAliasLookupandSync AXL operation with dynamic parameter",
        "description": "Filter get-dirnumberaliaslookupandsync resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-elingroup": {
      "get": {
        "summary": "Execute getElinGroup AXL operation",
        "description": "Returns all available get-elingroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-elingroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getElinGroup AXL operation with dynamic parameter",
        "description": "Filter get-elingroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-emccfeatureconfig": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation",
        "description": "Returns all available get-emccfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-emccfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEmccFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-emccfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-endusercapfprofile": {
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation",
        "description": "Returns all available get-endusercapfprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-endusercapfprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEndUserCapfProfile AXL operation with dynamic parameter",
        "description": "Filter get-endusercapfprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisefeatureaccessconfiguration": {
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation",
        "description": "Returns all available get-enterprisefeatureaccessconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisefeatureaccessconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterpriseFeatureAccessConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-enterprisefeatureaccessconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisephoneconfig": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation",
        "description": "Returns all available get-enterprisephoneconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-enterprisephoneconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getEnterprisePhoneConfig AXL operation with dynamic parameter",
        "description": "Filter get-enterprisephoneconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-expresswaycconfiguration": {
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation",
        "description": "Returns all available get-expresswaycconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-expresswaycconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExpresswayCConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-expresswaycconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-externalcallcontrolprofile": {
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation",
        "description": "Returns all available get-externalcallcontrolprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-externalcallcontrolprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getExternalCallControlProfile AXL operation with dynamic parameter",
        "description": "Filter get-externalcallcontrolprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-facinfo": {
      "get": {
        "summary": "Execute getFacInfo AXL operation",
        "description": "Returns all available get-facinfo resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-facinfo/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFacInfo AXL operation with dynamic parameter",
        "description": "Filter get-facinfo resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackfeatureconfig": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation",
        "description": "Returns all available get-fallbackfeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackfeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-fallbackfeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackprofile": {
      "get": {
        "summary": "Execute getFallbackProfile AXL operation",
        "description": "Returns all available get-fallbackprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fallbackprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFallbackProfile AXL operation with dynamic parameter",
        "description": "Filter get-fallbackprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featurecontrolpolicy": {
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation",
        "description": "Returns all available get-featurecontrolpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featurecontrolpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureControlPolicy AXL operation with dynamic parameter",
        "description": "Filter get-featurecontrolpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featuregrouptemplate": {
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation",
        "description": "Returns all available get-featuregrouptemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-featuregrouptemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFeatureGroupTemplate AXL operation with dynamic parameter",
        "description": "Filter get-featuregrouptemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fixedmohaudiosource": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation",
        "description": "Returns all available get-fixedmohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-fixedmohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getFixedMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter get-fixedmohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatekeeper": {
      "get": {
        "summary": "Execute getGatekeeper AXL operation",
        "description": "Returns all available get-gatekeeper resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatekeeper/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatekeeper AXL operation with dynamic parameter",
        "description": "Filter get-gatekeeper resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gateway": {
      "get": {
        "summary": "Execute getGateway AXL operation",
        "description": "Returns all available get-gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGateway AXL operation with dynamic parameter",
        "description": "Filter get-gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointanalogaccess": {
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation",
        "description": "Returns all available get-gatewayendpointanalogaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointanalogaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointAnalogAccess AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointanalogaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccessbri": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccessbri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccessbri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessBri AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccessbri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesspri": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccesspri resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesspri/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessPri AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccesspri resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesst1": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation",
        "description": "Returns all available get-gatewayendpointdigitalaccesst1 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewayendpointdigitalaccesst1/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewayEndpointDigitalAccessT1 AXL operation with dynamic parameter",
        "description": "Filter get-gatewayendpointdigitalaccesst1 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewaysccpendpoints": {
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation",
        "description": "Returns all available get-gatewaysccpendpoints resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-gatewaysccpendpoints/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGatewaySccpEndpoints AXL operation with dynamic parameter",
        "description": "Filter get-gatewaysccpendpoints resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocation": {
      "get": {
        "summary": "Execute getGeoLocation AXL operation",
        "description": "Returns all available get-geolocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocation AXL operation with dynamic parameter",
        "description": "Filter get-geolocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationfilter": {
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation",
        "description": "Returns all available get-geolocationfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationFilter AXL operation with dynamic parameter",
        "description": "Filter get-geolocationfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationpolicy": {
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation",
        "description": "Returns all available get-geolocationpolicy resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-geolocationpolicy/{parameter}/{value}": {
      "get": {
        "summary": "Execute getGeoLocationPolicy AXL operation with dynamic parameter",
        "description": "Filter get-geolocationpolicy resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323gateway": {
      "get": {
        "summary": "Execute getH323Gateway AXL operation",
        "description": "Returns all available get-h323gateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323gateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Gateway AXL operation with dynamic parameter",
        "description": "Filter get-h323gateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323phone": {
      "get": {
        "summary": "Execute getH323Phone AXL operation",
        "description": "Returns all available get-h323phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Phone AXL operation with dynamic parameter",
        "description": "Filter get-h323phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323trunk": {
      "get": {
        "summary": "Execute getH323Trunk AXL operation",
        "description": "Returns all available get-h323trunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-h323trunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getH323Trunk AXL operation with dynamic parameter",
        "description": "Filter get-h323trunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-handoffconfiguration": {
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation",
        "description": "Returns all available get-handoffconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-handoffconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHandoffConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-handoffconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-httpprofile": {
      "get": {
        "summary": "Execute getHttpProfile AXL operation",
        "description": "Returns all available get-httpprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-httpprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHttpProfile AXL operation with dynamic parameter",
        "description": "Filter get-httpprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntlist": {
      "get": {
        "summary": "Execute getHuntList AXL operation",
        "description": "Returns all available get-huntlist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntlist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntList AXL operation with dynamic parameter",
        "description": "Filter get-huntlist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntpilot": {
      "get": {
        "summary": "Execute getHuntPilot AXL operation",
        "description": "Returns all available get-huntpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-huntpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getHuntPilot AXL operation with dynamic parameter",
        "description": "Filter get-huntpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ilsconfig": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation",
        "description": "Returns all available get-ilsconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ilsconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIlsConfig AXL operation with dynamic parameter",
        "description": "Filter get-ilsconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeclient": {
      "get": {
        "summary": "Execute getImeClient AXL operation",
        "description": "Returns all available get-imeclient resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeclient/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeClient AXL operation with dynamic parameter",
        "description": "Filter get-imeclient resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imee164transformation": {
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation",
        "description": "Returns all available get-imee164transformation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imee164transformation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeE164Transformation AXL operation with dynamic parameter",
        "description": "Filter get-imee164transformation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpattern": {
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation",
        "description": "Returns all available get-imeenrolledpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPattern AXL operation with dynamic parameter",
        "description": "Filter get-imeenrolledpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpatterngroup": {
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation",
        "description": "Returns all available get-imeenrolledpatterngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeenrolledpatterngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeEnrolledPatternGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeenrolledpatterngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumber": {
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation",
        "description": "Returns all available get-imeexclusionnumber resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumber/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumber AXL operation with dynamic parameter",
        "description": "Filter get-imeexclusionnumber resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumbergroup": {
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation",
        "description": "Returns all available get-imeexclusionnumbergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeexclusionnumbergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeExclusionNumberGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeexclusionnumbergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefeatureconfig": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation",
        "description": "Returns all available get-imefeatureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefeatureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFeatureConfig AXL operation with dynamic parameter",
        "description": "Filter get-imefeatureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefirewall": {
      "get": {
        "summary": "Execute getImeFirewall AXL operation",
        "description": "Returns all available get-imefirewall resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imefirewall/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeFirewall AXL operation with dynamic parameter",
        "description": "Filter get-imefirewall resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imelearnedroutes": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation",
        "description": "Returns all available get-imelearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imelearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter get-imelearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefilterelement": {
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation",
        "description": "Returns all available get-imeroutefilterelement resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefilterelement/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterElement AXL operation with dynamic parameter",
        "description": "Filter get-imeroutefilterelement resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefiltergroup": {
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation",
        "description": "Returns all available get-imeroutefiltergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeroutefiltergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeRouteFilterGroup AXL operation with dynamic parameter",
        "description": "Filter get-imeroutefiltergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeserver": {
      "get": {
        "summary": "Execute getImeServer AXL operation",
        "description": "Returns all available get-imeserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-imeserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImeServer AXL operation with dynamic parameter",
        "description": "Filter get-imeserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-importeddirectoryuricatalogs": {
      "get": {
        "summary": "Execute getImportedDirectoryUriCatalogs AXL operation",
        "description": "Returns all available get-importeddirectoryuricatalogs resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-importeddirectoryuricatalogs/{parameter}/{value}": {
      "get": {
        "summary": "Execute getImportedDirectoryUriCatalogs AXL operation with dynamic parameter",
        "description": "Filter get-importeddirectoryuricatalogs resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-infrastructuredevice": {
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation",
        "description": "Returns all available get-infrastructuredevice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-infrastructuredevice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInfrastructureDevice AXL operation with dynamic parameter",
        "description": "Filter get-infrastructuredevice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interactivevoiceresponse": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation",
        "description": "Returns all available get-interactivevoiceresponse resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interactivevoiceresponse/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInteractiveVoiceResponse AXL operation with dynamic parameter",
        "description": "Filter get-interactivevoiceresponse resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interclusterserviceprofile": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation",
        "description": "Returns all available get-interclusterserviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-interclusterserviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getInterClusterServiceProfile AXL operation with dynamic parameter",
        "description": "Filter get-interclusterserviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ipphoneservices": {
      "get": {
        "summary": "Execute getIpPhoneServices AXL operation",
        "description": "Returns all available get-ipphoneservices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ipphoneservices/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIpPhoneServices AXL operation with dynamic parameter",
        "description": "Filter get-ipphoneservices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ivruserlocale": {
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation",
        "description": "Returns all available get-ivruserlocale resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ivruserlocale/{parameter}/{value}": {
      "get": {
        "summary": "Execute getIvrUserLocale AXL operation with dynamic parameter",
        "description": "Filter get-ivruserlocale resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmgroup": {
      "get": {
        "summary": "Execute getLbmGroup AXL operation",
        "description": "Returns all available get-lbmgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmGroup AXL operation with dynamic parameter",
        "description": "Filter get-lbmgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmhubgroup": {
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation",
        "description": "Returns all available get-lbmhubgroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lbmhubgroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLbmHubGroup AXL operation with dynamic parameter",
        "description": "Filter get-lbmhubgroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapauthentication": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation",
        "description": "Returns all available get-ldapauthentication resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapauthentication/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapAuthentication AXL operation with dynamic parameter",
        "description": "Filter get-ldapauthentication resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapdirectory": {
      "get": {
        "summary": "Execute getLdapDirectory AXL operation",
        "description": "Returns all available get-ldapdirectory resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapdirectory/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapDirectory AXL operation with dynamic parameter",
        "description": "Filter get-ldapdirectory resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapfilter": {
      "get": {
        "summary": "Execute getLdapFilter AXL operation",
        "description": "Returns all available get-ldapfilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapfilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapFilter AXL operation with dynamic parameter",
        "description": "Filter get-ldapfilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsearch": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation",
        "description": "Returns all available get-ldapsearch resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsearch/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSearch AXL operation with dynamic parameter",
        "description": "Filter get-ldapsearch resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsynccustomfield": {
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation",
        "description": "Returns all available get-ldapsynccustomfield resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsynccustomfield/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncCustomField AXL operation with dynamic parameter",
        "description": "Filter get-ldapsynccustomfield resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsyncstatus": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation",
        "description": "Returns all available get-ldapsyncstatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsyncstatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSyncStatus AXL operation with dynamic parameter",
        "description": "Filter get-ldapsyncstatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsystem": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation",
        "description": "Returns all available get-ldapsystem resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ldapsystem/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLdapSystem AXL operation with dynamic parameter",
        "description": "Filter get-ldapsystem resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-licenseduser": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation",
        "description": "Returns all available get-licenseduser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-licenseduser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLicensedUser AXL operation with dynamic parameter",
        "description": "Filter get-licenseduser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-line": {
      "get": {
        "summary": "Execute getLine AXL operation",
        "description": "Returns all available get-line resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-line/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLine AXL operation with dynamic parameter",
        "description": "Filter get-line resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-linegroup": {
      "get": {
        "summary": "Execute getLineGroup AXL operation",
        "description": "Returns all available get-linegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-linegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineGroup AXL operation with dynamic parameter",
        "description": "Filter get-linegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lineoptions": {
      "get": {
        "summary": "Execute getLineOptions AXL operation",
        "description": "Returns all available get-lineoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-lineoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLineOptions AXL operation with dynamic parameter",
        "description": "Filter get-lineoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-localroutegroup": {
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation",
        "description": "Returns all available get-localroutegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-localroutegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocalRouteGroup AXL operation with dynamic parameter",
        "description": "Filter get-localroutegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-location": {
      "get": {
        "summary": "Execute getLocation AXL operation",
        "description": "Returns all available get-location resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-location/{parameter}/{value}": {
      "get": {
        "summary": "Execute getLocation AXL operation with dynamic parameter",
        "description": "Filter get-location resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcegroup": {
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation",
        "description": "Returns all available get-mediaresourcegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceGroup AXL operation with dynamic parameter",
        "description": "Filter get-mediaresourcegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcelist": {
      "get": {
        "summary": "Execute getMediaResourceList AXL operation",
        "description": "Returns all available get-mediaresourcelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mediaresourcelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMediaResourceList AXL operation with dynamic parameter",
        "description": "Filter get-mediaresourcelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-meetme": {
      "get": {
        "summary": "Execute getMeetMe AXL operation",
        "description": "Returns all available get-meetme resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-meetme/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMeetMe AXL operation with dynamic parameter",
        "description": "Filter get-meetme resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-messagewaiting": {
      "get": {
        "summary": "Execute getMessageWaiting AXL operation",
        "description": "Returns all available get-messagewaiting resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-messagewaiting/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMessageWaiting AXL operation with dynamic parameter",
        "description": "Filter get-messagewaiting resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mlppdomain": {
      "get": {
        "summary": "Execute getMlppDomain AXL operation",
        "description": "Returns all available get-mlppdomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mlppdomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMlppDomain AXL operation with dynamic parameter",
        "description": "Filter get-mlppdomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilesmartclientprofile": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation",
        "description": "Returns all available get-mobilesmartclientprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilesmartclientprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileSmartClientProfile AXL operation with dynamic parameter",
        "description": "Filter get-mobilesmartclientprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilevoiceaccess": {
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation",
        "description": "Returns all available get-mobilevoiceaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilevoiceaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobileVoiceAccess AXL operation with dynamic parameter",
        "description": "Filter get-mobilevoiceaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobility": {
      "get": {
        "summary": "Execute getMobility AXL operation",
        "description": "Returns all available get-mobility resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobility/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobility AXL operation with dynamic parameter",
        "description": "Filter get-mobility resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilityprofile": {
      "get": {
        "summary": "Execute getMobilityProfile AXL operation",
        "description": "Returns all available get-mobilityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mobilityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMobilityProfile AXL operation with dynamic parameter",
        "description": "Filter get-mobilityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohaudiosource": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation",
        "description": "Returns all available get-mohaudiosource resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohaudiosource/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohAudioSource AXL operation with dynamic parameter",
        "description": "Filter get-mohaudiosource resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohserver": {
      "get": {
        "summary": "Execute getMohServer AXL operation",
        "description": "Returns all available get-mohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMohServer AXL operation with dynamic parameter",
        "description": "Filter get-mohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mraservicedomain": {
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation",
        "description": "Returns all available get-mraservicedomain resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mraservicedomain/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMraServiceDomain AXL operation with dynamic parameter",
        "description": "Filter get-mraservicedomain resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mtp": {
      "get": {
        "summary": "Execute getMtp AXL operation",
        "description": "Returns all available get-mtp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-mtp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getMtp AXL operation with dynamic parameter",
        "description": "Filter get-mtp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-networkaccessprofile": {
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation",
        "description": "Returns all available get-networkaccessprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-networkaccessprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNetworkAccessProfile AXL operation with dynamic parameter",
        "description": "Filter get-networkaccessprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-numdevices": {
      "get": {
        "summary": "Execute getNumDevices AXL operation",
        "description": "Returns all available get-numdevices resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-numdevices/{parameter}/{value}": {
      "get": {
        "summary": "Execute getNumDevices AXL operation with dynamic parameter",
        "description": "Filter get-numdevices resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-osversion": {
      "get": {
        "summary": "Execute getOSVersion AXL operation",
        "description": "Returns all available get-osversion resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-osversion/{parameter}/{value}": {
      "get": {
        "summary": "Execute getOSVersion AXL operation with dynamic parameter",
        "description": "Filter get-osversion resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-pagelayoutpreferences": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation",
        "description": "Returns all available get-pagelayoutpreferences resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-pagelayoutpreferences/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPageLayoutPreferences AXL operation with dynamic parameter",
        "description": "Filter get-pagelayoutpreferences resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phone": {
      "get": {
        "summary": "Execute getPhone AXL operation",
        "description": "Returns all available get-phone resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phone/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhone AXL operation with dynamic parameter",
        "description": "Filter get-phone resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonebuttontemplate": {
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation",
        "description": "Returns all available get-phonebuttontemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonebuttontemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneButtonTemplate AXL operation with dynamic parameter",
        "description": "Filter get-phonebuttontemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonentp": {
      "get": {
        "summary": "Execute getPhoneNtp AXL operation",
        "description": "Returns all available get-phonentp resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonentp/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneNtp AXL operation with dynamic parameter",
        "description": "Filter get-phonentp resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phoneoptions": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation",
        "description": "Returns all available get-phoneoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phoneoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneOptions AXL operation with dynamic parameter",
        "description": "Filter get-phoneoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonesecurityprofile": {
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation",
        "description": "Returns all available get-phonesecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonesecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-phonesecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonetypedisplayinstance": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation",
        "description": "Returns all available get-phonetypedisplayinstance resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-phonetypedisplayinstance/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhoneTypeDisplayInstance AXL operation with dynamic parameter",
        "description": "Filter get-phonetypedisplayinstance resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-physicallocation": {
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation",
        "description": "Returns all available get-physicallocation resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-physicallocation/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPhysicalLocation AXL operation with dynamic parameter",
        "description": "Filter get-physicallocation resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presencegroup": {
      "get": {
        "summary": "Execute getPresenceGroup AXL operation",
        "description": "Returns all available get-presencegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presencegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceGroup AXL operation with dynamic parameter",
        "description": "Filter get-presencegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presenceredundancygroup": {
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation",
        "description": "Returns all available get-presenceredundancygroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-presenceredundancygroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getPresenceRedundancyGroup AXL operation with dynamic parameter",
        "description": "Filter get-presenceredundancygroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnode": {
      "get": {
        "summary": "Execute getProcessNode AXL operation",
        "description": "Returns all available get-processnode resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnode/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNode AXL operation with dynamic parameter",
        "description": "Filter get-processnode resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnodeservice": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation",
        "description": "Returns all available get-processnodeservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-processnodeservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getProcessNodeService AXL operation with dynamic parameter",
        "description": "Filter get-processnodeservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-recordingprofile": {
      "get": {
        "summary": "Execute getRecordingProfile AXL operation",
        "description": "Returns all available get-recordingprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-recordingprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRecordingProfile AXL operation with dynamic parameter",
        "description": "Filter get-recordingprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-region": {
      "get": {
        "summary": "Execute getRegion AXL operation",
        "description": "Returns all available get-region resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-region/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegion AXL operation with dynamic parameter",
        "description": "Filter get-region resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-registrationdynamic": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation",
        "description": "Returns all available get-registrationdynamic resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-registrationdynamic/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRegistrationDynamic AXL operation with dynamic parameter",
        "description": "Filter get-registrationdynamic resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotecluster": {
      "get": {
        "summary": "Execute getRemoteCluster AXL operation",
        "description": "Returns all available get-remotecluster resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotecluster/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteCluster AXL operation with dynamic parameter",
        "description": "Filter get-remotecluster resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestination": {
      "get": {
        "summary": "Execute getRemoteDestination AXL operation",
        "description": "Returns all available get-remotedestination resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestination/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestination AXL operation with dynamic parameter",
        "description": "Filter get-remotedestination resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestinationprofile": {
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation",
        "description": "Returns all available get-remotedestinationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-remotedestinationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRemoteDestinationProfile AXL operation with dynamic parameter",
        "description": "Filter get-remotedestinationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespace": {
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation",
        "description": "Returns all available get-resourceprioritynamespace resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespace/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespace AXL operation with dynamic parameter",
        "description": "Filter get-resourceprioritynamespace resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespacelist": {
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation",
        "description": "Returns all available get-resourceprioritynamespacelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-resourceprioritynamespacelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getResourcePriorityNamespaceList AXL operation with dynamic parameter",
        "description": "Filter get-resourceprioritynamespacelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routefilter": {
      "get": {
        "summary": "Execute getRouteFilter AXL operation",
        "description": "Returns all available get-routefilter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routefilter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteFilter AXL operation with dynamic parameter",
        "description": "Filter get-routefilter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routegroup": {
      "get": {
        "summary": "Execute getRouteGroup AXL operation",
        "description": "Returns all available get-routegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteGroup AXL operation with dynamic parameter",
        "description": "Filter get-routegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routelist": {
      "get": {
        "summary": "Execute getRouteList AXL operation",
        "description": "Returns all available get-routelist resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routelist/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRouteList AXL operation with dynamic parameter",
        "description": "Filter get-routelist resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepartition": {
      "get": {
        "summary": "Execute getRoutePartition AXL operation",
        "description": "Returns all available get-routepartition resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepartition/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePartition AXL operation with dynamic parameter",
        "description": "Filter get-routepartition resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepattern": {
      "get": {
        "summary": "Execute getRoutePattern AXL operation",
        "description": "Returns all available get-routepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-routepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getRoutePattern AXL operation with dynamic parameter",
        "description": "Filter get-routepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safccdpurgeblocklearnedroutes": {
      "get": {
        "summary": "Execute getSafCcdPurgeBlockLearnedRoutes AXL operation",
        "description": "Returns all available get-safccdpurgeblocklearnedroutes resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safccdpurgeblocklearnedroutes/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafCcdPurgeBlockLearnedRoutes AXL operation with dynamic parameter",
        "description": "Filter get-safccdpurgeblocklearnedroutes resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safforwarder": {
      "get": {
        "summary": "Execute getSafForwarder AXL operation",
        "description": "Returns all available get-safforwarder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safforwarder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafForwarder AXL operation with dynamic parameter",
        "description": "Filter get-safforwarder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safsecurityprofile": {
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation",
        "description": "Returns all available get-safsecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-safsecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSafSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-safsecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sdptransparencyprofile": {
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation",
        "description": "Returns all available get-sdptransparencyprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sdptransparencyprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSdpTransparencyProfile AXL operation with dynamic parameter",
        "description": "Filter get-sdptransparencyprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-secureconfig": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation",
        "description": "Returns all available get-secureconfig resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-secureconfig/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSecureConfig AXL operation with dynamic parameter",
        "description": "Filter get-secureconfig resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceparameter": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation",
        "description": "Returns all available get-serviceparameter resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceparameter/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceParameter AXL operation with dynamic parameter",
        "description": "Filter get-serviceparameter resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceprofile": {
      "get": {
        "summary": "Execute getServiceProfile AXL operation",
        "description": "Returns all available get-serviceprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-serviceprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getServiceProfile AXL operation with dynamic parameter",
        "description": "Filter get-serviceprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipdialrules": {
      "get": {
        "summary": "Execute getSipDialRules AXL operation",
        "description": "Returns all available get-sipdialrules resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipdialrules/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipDialRules AXL operation with dynamic parameter",
        "description": "Filter get-sipdialrules resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipnormalizationscript": {
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation",
        "description": "Returns all available get-sipnormalizationscript resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipnormalizationscript/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSIPNormalizationScript AXL operation with dynamic parameter",
        "description": "Filter get-sipnormalizationscript resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofile": {
      "get": {
        "summary": "Execute getSipProfile AXL operation",
        "description": "Returns all available get-sipprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfile AXL operation with dynamic parameter",
        "description": "Filter get-sipprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofileoptions": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation",
        "description": "Returns all available get-sipprofileoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-sipprofileoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipProfileOptions AXL operation with dynamic parameter",
        "description": "Filter get-sipprofileoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siprealm": {
      "get": {
        "summary": "Execute getSipRealm AXL operation",
        "description": "Returns all available get-siprealm resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siprealm/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRealm AXL operation with dynamic parameter",
        "description": "Filter get-siprealm resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siproutepattern": {
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation",
        "description": "Returns all available get-siproutepattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siproutepattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipRoutePattern AXL operation with dynamic parameter",
        "description": "Filter get-siproutepattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunk": {
      "get": {
        "summary": "Execute getSipTrunk AXL operation",
        "description": "Returns all available get-siptrunk resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunk/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunk AXL operation with dynamic parameter",
        "description": "Filter get-siptrunk resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunksecurityprofile": {
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation",
        "description": "Returns all available get-siptrunksecurityprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-siptrunksecurityprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSipTrunkSecurityProfile AXL operation with dynamic parameter",
        "description": "Filter get-siptrunksecurityprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-smartlicensestatus": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation",
        "description": "Returns all available get-smartlicensestatus resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-smartlicensestatus/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSmartLicenseStatus AXL operation with dynamic parameter",
        "description": "Filter get-smartlicensestatus resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpcommunitystring": {
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation",
        "description": "Returns all available get-snmpcommunitystring resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpcommunitystring/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPCommunityString AXL operation with dynamic parameter",
        "description": "Filter get-snmpcommunitystring resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpmib2list": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation",
        "description": "Returns all available get-snmpmib2list resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpmib2list/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPMIB2List AXL operation with dynamic parameter",
        "description": "Filter get-snmpmib2list resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpuser": {
      "get": {
        "summary": "Execute getSNMPUser AXL operation",
        "description": "Returns all available get-snmpuser resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-snmpuser/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSNMPUser AXL operation with dynamic parameter",
        "description": "Filter get-snmpuser resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeyset": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation",
        "description": "Returns all available get-softkeyset resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeyset/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeySet AXL operation with dynamic parameter",
        "description": "Filter get-softkeyset resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeytemplate": {
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation",
        "description": "Returns all available get-softkeytemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-softkeytemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSoftKeyTemplate AXL operation with dynamic parameter",
        "description": "Filter get-softkeytemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-srst": {
      "get": {
        "summary": "Execute getSrst AXL operation",
        "description": "Returns all available get-srst resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-srst/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSrst AXL operation with dynamic parameter",
        "description": "Filter get-srst resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-syslogconfiguration": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation",
        "description": "Returns all available get-syslogconfiguration resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-syslogconfiguration/{parameter}/{value}": {
      "get": {
        "summary": "Execute getSyslogConfiguration AXL operation with dynamic parameter",
        "description": "Filter get-syslogconfiguration resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeperiod": {
      "get": {
        "summary": "Execute getTimePeriod AXL operation",
        "description": "Returns all available get-timeperiod resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeperiod/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimePeriod AXL operation with dynamic parameter",
        "description": "Filter get-timeperiod resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeschedule": {
      "get": {
        "summary": "Execute getTimeSchedule AXL operation",
        "description": "Returns all available get-timeschedule resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-timeschedule/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTimeSchedule AXL operation with dynamic parameter",
        "description": "Filter get-timeschedule resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-todaccess": {
      "get": {
        "summary": "Execute getTodAccess AXL operation",
        "description": "Returns all available get-todaccess resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-todaccess/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTodAccess AXL operation with dynamic parameter",
        "description": "Filter get-todaccess resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transcoder": {
      "get": {
        "summary": "Execute getTranscoder AXL operation",
        "description": "Returns all available get-transcoder resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transcoder/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTranscoder AXL operation with dynamic parameter",
        "description": "Filter get-transcoder resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transformationprofile": {
      "get": {
        "summary": "Execute getTransformationProfile AXL operation",
        "description": "Returns all available get-transformationprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transformationprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransformationProfile AXL operation with dynamic parameter",
        "description": "Filter get-transformationprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpattern": {
      "get": {
        "summary": "Execute getTransPattern AXL operation",
        "description": "Returns all available get-transpattern resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpattern/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPattern AXL operation with dynamic parameter",
        "description": "Filter get-transpattern resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpatternoptions": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation",
        "description": "Returns all available get-transpatternoptions resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transpatternoptions/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransPatternOptions AXL operation with dynamic parameter",
        "description": "Filter get-transpatternoptions resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transportsettings": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation",
        "description": "Returns all available get-transportsettings resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-transportsettings/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTransportSettings AXL operation with dynamic parameter",
        "description": "Filter get-transportsettings resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-tvscertificate": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation",
        "description": "Returns all available get-tvscertificate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-tvscertificate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getTvsCertificate AXL operation with dynamic parameter",
        "description": "Filter get-tvscertificate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ucservice": {
      "get": {
        "summary": "Execute getUcService AXL operation",
        "description": "Returns all available get-ucservice resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-ucservice/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUcService AXL operation with dynamic parameter",
        "description": "Filter get-ucservice resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universaldevicetemplate": {
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation",
        "description": "Returns all available get-universaldevicetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universaldevicetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalDeviceTemplate AXL operation with dynamic parameter",
        "description": "Filter get-universaldevicetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universallinetemplate": {
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation",
        "description": "Returns all available get-universallinetemplate resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-universallinetemplate/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUniversalLineTemplate AXL operation with dynamic parameter",
        "description": "Filter get-universallinetemplate resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-user": {
      "get": {
        "summary": "Execute getUser AXL operation",
        "description": "Returns all available get-user resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-user/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUser AXL operation with dynamic parameter",
        "description": "Filter get-user resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-usergroup": {
      "get": {
        "summary": "Execute getUserGroup AXL operation",
        "description": "Returns all available get-usergroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-usergroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserGroup AXL operation with dynamic parameter",
        "description": "Filter get-usergroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-userprofileprovision": {
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation",
        "description": "Returns all available get-userprofileprovision resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-userprofileprovision/{parameter}/{value}": {
      "get": {
        "summary": "Execute getUserProfileProvision AXL operation with dynamic parameter",
        "description": "Filter get-userprofileprovision resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vg224": {
      "get": {
        "summary": "Execute getVg224 AXL operation",
        "description": "Returns all available get-vg224 resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vg224/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVg224 AXL operation with dynamic parameter",
        "description": "Filter get-vg224 resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vohserver": {
      "get": {
        "summary": "Execute getVohServer AXL operation",
        "description": "Returns all available get-vohserver resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vohserver/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVohServer AXL operation with dynamic parameter",
        "description": "Filter get-vohserver resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailpilot": {
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation",
        "description": "Returns all available get-voicemailpilot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailpilot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPilot AXL operation with dynamic parameter",
        "description": "Filter get-voicemailpilot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailport": {
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation",
        "description": "Returns all available get-voicemailport resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailport/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailPort AXL operation with dynamic parameter",
        "description": "Filter get-voicemailport resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailprofile": {
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation",
        "description": "Returns all available get-voicemailprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-voicemailprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVoiceMailProfile AXL operation with dynamic parameter",
        "description": "Filter get-voicemailprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngateway": {
      "get": {
        "summary": "Execute getVpnGateway AXL operation",
        "description": "Returns all available get-vpngateway resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngateway/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGateway AXL operation with dynamic parameter",
        "description": "Filter get-vpngateway resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngroup": {
      "get": {
        "summary": "Execute getVpnGroup AXL operation",
        "description": "Returns all available get-vpngroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpngroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnGroup AXL operation with dynamic parameter",
        "description": "Filter get-vpngroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpnprofile": {
      "get": {
        "summary": "Execute getVpnProfile AXL operation",
        "description": "Returns all available get-vpnprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-vpnprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getVpnProfile AXL operation with dynamic parameter",
        "description": "Filter get-vpnprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wifihotspot": {
      "get": {
        "summary": "Execute getWifiHotspot AXL operation",
        "description": "Returns all available get-wifihotspot resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wifihotspot/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWifiHotspot AXL operation with dynamic parameter",
        "description": "Filter get-wifihotspot resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wirelessaccesspointcontrollers": {
      "get": {
        "summary": "Execute getWirelessAccessPointControllers AXL operation",
        "description": "Returns all available get-wirelessaccesspointcontrollers resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wirelessaccesspointcontrollers/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWirelessAccessPointControllers AXL operation with dynamic parameter",
        "description": "Filter get-wirelessaccesspointcontrollers resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofile": {
      "get": {
        "summary": "Execute getWLANProfile AXL operation",
        "description": "Returns all available get-wlanprofile resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofile/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWLANProfile AXL operation with dynamic parameter",
        "description": "Filter get-wlanprofile resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofilegroup": {
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation",
        "description": "Returns all available get-wlanprofilegroup resources",
        "tags": [
          "axl"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/axl/get-wlanprofilegroup/{parameter}/{value}": {
      "get": {
        "summary": "Execute getWlanProfileGroup AXL operation with dynamic parameter",
        "description": "Filter get-wlanprofilegroup resources by specified parameter type and value",
        "tags": [
          "axl"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Parameter type to identify the resource (uuid, name, etc.)"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value of the parameter to identify the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "path": {
            "type": "string"
          }
        }
      }
    }
  }
}